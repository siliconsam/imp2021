{------------------------------------------------------------------------------}
    ! returns x ^ y
    %external %integer %function impiexp ( %integer y, x)
 0000                      L 1000  EQU $
 0000 C8 00 00 01                     ENTER 0000, 1
        %integer value;

        %signal 5, 2, y %unless (y >=0);
 0004 8B 45 0C                        MOV EAX,[EBP+ 12]
 0007 3D 00 00 00 00                  CMP EAX, 0
 000C 7D 00                           JGE L 1001
 000E B8 05 00 00 00                  MOV EAX, 5
 0013 50                              PUSH EAX
 0014 8B 45 0C                        MOV EAX,[EBP+ 12]
 0017 50                              PUSH EAX
 0018 B8 02 00 00 00                  MOV EAX, 2
 001D 50                              PUSH EAX
 001E E8 0B 00                        CALL '_IMPSIGNAL' (EXTERN  11)
 0021 83 C4 0C                        ADD ESP, 12
 0024                      L 1001  EQU $

        value = 1;
 0024 C7 45 F8 01 00 00 00            MOV WORD [EBP-8], 1

        %while (y > 0) %cycle
 002B                      L 1002  EQU $
 002B 8B 45 0C                        MOV EAX,[EBP+ 12]
 002E 3D 00 00 00 00                  CMP EAX, 0
 0033 7E 00                           JLE L 1003
            value = value * x
 0035 8B 45 F8                        MOV EAX,[EBP-8]
 0038 F7 6D 08                        IMUL WORD [EBP+ 8]
 003B 89 45 F8                        MOV [EBP-8],EAX
            y = y - 1
 003E FF 4D 0C                        DEC WORD [EBP+ 12]
        %repeat
 0041 EB 00                           JMP L 1002
 0043                      L 1003  EQU $

        %result = value
 0043 8B 45 F8                        MOV EAX,[EBP-8]
 0046 C9                              LEAVE
 0047 C3                              RET
    %end

{------------------------------------------------------------------------------}
%endoffile
      _TEXT  ENDS
      CONST  SEGMENT WORD PUBLIC 'CONST'
      CONST  ENDS
      _TEXT  SEGMENT WORD PUBLIC 'CODE'
            ENDS
      DATA  SEGMENT WORD PUBLIC 'DATA'
      DATA    ENDS
              ENDS
      _SWTAB  SEGMENT WORD PUBLIC '_SWTAB'
      _SWTAB   ENDS
