
    %include "inc.386.registers"

    %own %record(event fm) lastevent

    %external %string(14) %function %spec handler name( %integer address )

{------------------------------------------------------------------------------}
    %external %record(event fm) %map event
        %result == lastevent
 0000                      L1000  EQU $
 0000 C8 00 00 01                     ENTER 0000,1
 0004 B8 00 00 00 00                  MOV EAX,DATA+0
 0009 C9                              LEAVE
 000A C3                              RET
    %end

    %external %routine save event( %integer event, sub, info )
 000B                      L1001  EQU $
 000B C8 00 00 01                     ENTER 0000,1
        %switch esw(0:max event - 1)
        %string(16) e,s,x
        %string(255) msg,eventmsg

        e = itos(event,0)
 000F FF 75 10                        PUSH WORD [EBP+16]
 0012 6A 00                           PUSH 0
 0014 8D 85 C8 FC FF FF               LEA EAX,[EBP-824]
 001A 50                              PUSH EAX
 001B E8 39 00                        CALL 'ITOS' (EXTERN 57)
 001E 83 C4 0C                        ADD ESP,12
 0021 8D 45 EB                        LEA EAX,[EBP-21]
 0024 50                              PUSH EAX
 0025 8D 8D C8 FC FF FF               LEA ECX,[EBP-824]
 002B 51                              PUSH ECX
 002C 6A 10                           PUSH 16
 002E E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 0031 83 C4 0C                        ADD ESP,12
        s = itos(sub,0)
 0034 FF 75 0C                        PUSH WORD [EBP+12]
 0037 6A 00                           PUSH 0
 0039 8D 85 C8 FC FF FF               LEA EAX,[EBP-824]
 003F 50                              PUSH EAX
 0040 E8 39 00                        CALL 'ITOS' (EXTERN 57)
 0043 83 C4 0C                        ADD ESP,12
 0046 8D 45 DA                        LEA EAX,[EBP-38]
 0049 50                              PUSH EAX
 004A 8D 8D C8 FC FF FF               LEA ECX,[EBP-824]
 0050 51                              PUSH ECX
 0051 6A 10                           PUSH 16
 0053 E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 0056 83 C4 0C                        ADD ESP,12
        x = itos(info,0)
 0059 FF 75 08                        PUSH WORD [EBP+8]
 005C 6A 00                           PUSH 0
 005E 8D 85 C8 FC FF FF               LEA EAX,[EBP-824]
 0064 50                              PUSH EAX
 0065 E8 39 00                        CALL 'ITOS' (EXTERN 57)
 0068 83 C4 0C                        ADD ESP,12
 006B 8D 45 C9                        LEA EAX,[EBP-55]
 006E 50                              PUSH EAX
 006F 8D 8D C8 FC FF FF               LEA ECX,[EBP-824]
 0075 51                              PUSH ECX
 0076 6A 10                           PUSH 16
 0078 E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 007B 83 C4 0C                        ADD ESP,12

        eventmsg = "(".e.",".s.",".x.")"
 007E 8D 85 C8 FC FF FF               LEA EAX,[EBP-824]
 0084 50                              PUSH EAX
 0085 B8 10 00 00 00                  MOV EAX,COT+16
 008A 50                              PUSH EAX
 008B 68 FF 00 00 00                  PUSH 255
 0090 E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 0093 83 C4 0C                        ADD ESP,12
 0096 8D 85 C8 FC FF FF               LEA EAX,[EBP-824]
 009C 50                              PUSH EAX
 009D 8D 45 EB                        LEA EAX,[EBP-21]
 00A0 50                              PUSH EAX
 00A1 68 FF 00 00 00                  PUSH 255
 00A6 E8 05 00                        CALL '_IMPSTRCAT' (EXTERN 5)
 00A9 83 C4 0C                        ADD ESP,12
 00AC 8D 85 C8 FC FF FF               LEA EAX,[EBP-824]
 00B2 50                              PUSH EAX
 00B3 B8 12 00 00 00                  MOV EAX,COT+18
 00B8 50                              PUSH EAX
 00B9 68 FF 00 00 00                  PUSH 255
 00BE E8 05 00                        CALL '_IMPSTRCAT' (EXTERN 5)
 00C1 83 C4 0C                        ADD ESP,12
 00C4 8D 85 C8 FC FF FF               LEA EAX,[EBP-824]
 00CA 50                              PUSH EAX
 00CB 8D 45 DA                        LEA EAX,[EBP-38]
 00CE 50                              PUSH EAX
 00CF 68 FF 00 00 00                  PUSH 255
 00D4 E8 05 00                        CALL '_IMPSTRCAT' (EXTERN 5)
 00D7 83 C4 0C                        ADD ESP,12
 00DA 8D 85 C8 FC FF FF               LEA EAX,[EBP-824]
 00E0 50                              PUSH EAX
 00E1 B8 14 00 00 00                  MOV EAX,COT+20
 00E6 50                              PUSH EAX
 00E7 68 FF 00 00 00                  PUSH 255
 00EC E8 05 00                        CALL '_IMPSTRCAT' (EXTERN 5)
 00EF 83 C4 0C                        ADD ESP,12
 00F2 8D 85 C8 FC FF FF               LEA EAX,[EBP-824]
 00F8 50                              PUSH EAX
 00F9 8D 45 C9                        LEA EAX,[EBP-55]
 00FC 50                              PUSH EAX
 00FD 68 FF 00 00 00                  PUSH 255
 0102 E8 05 00                        CALL '_IMPSTRCAT' (EXTERN 5)
 0105 83 C4 0C                        ADD ESP,12
 0108 8D 85 C8 FC FF FF               LEA EAX,[EBP-824]
 010E 50                              PUSH EAX
 010F B8 16 00 00 00                  MOV EAX,COT+22
 0114 50                              PUSH EAX
 0115 68 FF 00 00 00                  PUSH 255
 011A E8 05 00                        CALL '_IMPSTRCAT' (EXTERN 5)
 011D 83 C4 0C                        ADD ESP,12
 0120 8D 85 C9 FD FF FF               LEA EAX,[EBP-567]
 0126 50                              PUSH EAX
 0127 8D 8D C8 FC FF FF               LEA ECX,[EBP-824]
 012D 51                              PUSH ECX
 012E 68 FF 00 00 00                  PUSH 255
 0133 E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 0136 83 C4 0C                        ADD ESP,12

        ! For the main ones we generate, try to be helpful...
        -> esw(event) %if (0 < event) %and (event < max event)
 0139 8B 45 10                        MOV EAX,[EBP+16]
 013C 3D 00 00 00 00                  CMP EAX,0
 0141 7E 00                           JLE L1002
 0143 8B 45 10                        MOV EAX,[EBP+16]
 0146 3D 10 00 00 00                  CMP EAX,16
 014B 7D 00                           JGE L1002
 014D 8B 45 10                        MOV EAX,[EBP+16]
 0150 C1 E0 02                        SHL EAX,2
 0153 89 C6                           MOV ESI,EAX
 0155 FF A6 00 00 00 00               JMP WORD [ESI+SWTAB]
 015B                      L1002  EQU $
        -> esw(max event - 1)
 015B BF 3C 00 00 00                  MOV EDI,60
 0160 FF A7 00 00 00 00               JMP WORD [EDI+SWTAB]
    esw(0):
 0166                      L1003  EQU $
        %begin
 0166 E8 00 00                        CALL 'MESSAGE' (INTERNAL L1004 )
 0169 EB 00                           JMP L1005
 016B                      L1004  EQU $
 016B C8 00 00 02                     ENTER 0000,2
           ! sub value has full integer range
           %if (sub < 0) %then msg = "Abandon program, sauve qui puet!"
 016F 8B 5D FC                        MOV EBX,[EBP-4]
 0172 8B 43 0C                        MOV EAX,[EBX+12]
 0175 3D 00 00 00 00                  CMP EAX,0
 017A 7D 00                           JGE L1006
 017C 8D 83 C9 FE FF FF               LEA EAX,[EBX-311]
 0182 50                              PUSH EAX
 0183 B9 18 00 00 00                  MOV ECX,COT+24
 0188 51                              PUSH ECX
 0189 68 FF 00 00 00                  PUSH 255
 018E E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 0191 83 C4 0C                        ADD ESP,12
 0194                      L1006  EQU $
           %if (sub = 0) %then msg = "%stop"
 0194 8B 75 FC                        MOV ESI,[EBP-4]
 0197 8B 46 0C                        MOV EAX,[ESI+12]
 019A 3D 00 00 00 00                  CMP EAX,0
 019F 75 00                           JNE L1007
 01A1 8D 86 C9 FE FF FF               LEA EAX,[ESI-311]
 01A7 50                              PUSH EAX
 01A8 B9 39 00 00 00                  MOV ECX,COT+57
 01AD 51                              PUSH ECX
 01AE 68 FF 00 00 00                  PUSH 255
 01B3 E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 01B6 83 C4 0C                        ADD ESP,12
 01B9                      L1007  EQU $
           %if (sub > 0) %then msg = "User generated error. ".s
 01B9 8B 7D FC                        MOV EDI,[EBP-4]
 01BC 8B 47 0C                        MOV EAX,[EDI+12]
 01BF 3D 00 00 00 00                  CMP EAX,0
 01C4 7E 00                           JLE L1008
 01C6 8D 85 F8 FE FF FF               LEA EAX,[EBP-264]
 01CC 50                              PUSH EAX
 01CD B8 3F 00 00 00                  MOV EAX,COT+63
 01D2 50                              PUSH EAX
 01D3 68 FF 00 00 00                  PUSH 255
 01D8 E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 01DB 83 C4 0C                        ADD ESP,12
 01DE 8D 85 F8 FE FF FF               LEA EAX,[EBP-264]
 01E4 50                              PUSH EAX
 01E5 8B 5D FC                        MOV EBX,[EBP-4]
 01E8 8D 43 DA                        LEA EAX,[EBX-38]
 01EB 50                              PUSH EAX
 01EC 68 FF 00 00 00                  PUSH 255
 01F1 E8 05 00                        CALL '_IMPSTRCAT' (EXTERN 5)
 01F4 83 C4 0C                        ADD ESP,12
 01F7 8B 75 FC                        MOV ESI,[EBP-4]
 01FA 8D 86 C9 FE FF FF               LEA EAX,[ESI-311]
 0200 50                              PUSH EAX
 0201 8D 8D F8 FE FF FF               LEA ECX,[EBP-264]
 0207 51                              PUSH ECX
 0208 68 FF 00 00 00                  PUSH 255
 020D E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 0210 83 C4 0C                        ADD ESP,12
 0213                      L1008  EQU $
        %end
 0213 C9                              LEAVE
 0214 C3                              RET
 0215                      L1005  EQU $
        -> esac
 0215 EB 00                           JMP L1009
    esw(1):
 0217                      L1010  EQU $
        %begin
 0217 E8 00 00                        CALL 'MESSAGE' (INTERNAL L1011 )
 021A EB 00                           JMP L1012
 021C                      L1011  EQU $
 021C C8 00 00 02                     ENTER 0000,2
           %switch ssw(0:15)
           -> ssw(sub&16_f)
 0220 8B 7D FC                        MOV EDI,[EBP-4]
 0223 8B 47 0C                        MOV EAX,[EDI+12]
 0226 25 0F 00 00 00                  AND EAX,15
 022B C1 E0 02                        SHL EAX,2
 022E 89 C3                           MOV EBX,EAX
 0230 FF A3 40 00 00 00               JMP WORD [EBX+SWTAB+64]
        ssw(1): msg = "Integer overflow"  ; -> es
 0236                      L1013  EQU $
 0236 8B 75 FC                        MOV ESI,[EBP-4]
 0239 8D 86 C9 FE FF FF               LEA EAX,[ESI-311]
 023F 50                              PUSH EAX
 0240 B9 56 00 00 00                  MOV ECX,COT+86
 0245 51                              PUSH ECX
 0246 68 FF 00 00 00                  PUSH 255
 024B E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 024E 83 C4 0C                        ADD ESP,12
 0251 EB 00                           JMP L1014
        ssw(2): msg = "Real overflow"     ; -> es
 0253                      L1015  EQU $
 0253 8B 7D FC                        MOV EDI,[EBP-4]
 0256 8D 87 C9 FE FF FF               LEA EAX,[EDI-311]
 025C 50                              PUSH EAX
 025D B9 67 00 00 00                  MOV ECX,COT+103
 0262 51                              PUSH ECX
 0263 68 FF 00 00 00                  PUSH 255
 0268 E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 026B 83 C4 0C                        ADD ESP,12
 026E EB 00                           JMP L1014
        ssw(3): msg = "String overflow"   ; -> es
 0270                      L1016  EQU $
 0270 8B 5D FC                        MOV EBX,[EBP-4]
 0273 8D 83 C9 FE FF FF               LEA EAX,[EBX-311]
 0279 50                              PUSH EAX
 027A B9 75 00 00 00                  MOV ECX,COT+117
 027F 51                              PUSH ECX
 0280 68 FF 00 00 00                  PUSH 255
 0285 E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 0288 83 C4 0C                        ADD ESP,12
 028B EB 00                           JMP L1014
        ssw(4): msg = "Division by zero"  ; -> es
 028D                      L1017  EQU $
 028D 8B 75 FC                        MOV ESI,[EBP-4]
 0290 8D 86 C9 FE FF FF               LEA EAX,[ESI-311]
 0296 50                              PUSH EAX
 0297 B9 85 00 00 00                  MOV ECX,COT+133
 029C 51                              PUSH ECX
 029D 68 FF 00 00 00                  PUSH 255
 02A2 E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 02A5 83 C4 0C                        ADD ESP,12
 02A8 EB 00                           JMP L1014
        ssw(5): msg = "Truncation"        ; -> es
 02AA                      L1018  EQU $
 02AA 8B 7D FC                        MOV EDI,[EBP-4]
 02AD 8D 87 C9 FE FF FF               LEA EAX,[EDI-311]
 02B3 50                              PUSH EAX
 02B4 B9 96 00 00 00                  MOV ECX,COT+150
 02B9 51                              PUSH ECX
 02BA 68 FF 00 00 00                  PUSH 255
 02BF E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 02C2 83 C4 0C                        ADD ESP,12
 02C5 EB 00                           JMP L1014
        ssw(*): msg = "Overflow ".eventmsg; -> es
 02C7                      L1019  EQU $
 02C7                      L1020  EQU $
 02C7                      L1021  EQU $
 02C7                      L1022  EQU $
 02C7                      L1023  EQU $
 02C7                      L1024  EQU $
 02C7                      L1025  EQU $
 02C7                      L1026  EQU $
 02C7                      L1027  EQU $
 02C7                      L1028  EQU $
 02C7                      L1029  EQU $
 02C7 8D 85 F8 FE FF FF               LEA EAX,[EBP-264]
 02CD 50                              PUSH EAX
 02CE B8 A1 00 00 00                  MOV EAX,COT+161
 02D3 50                              PUSH EAX
 02D4 68 FF 00 00 00                  PUSH 255
 02D9 E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 02DC 83 C4 0C                        ADD ESP,12
 02DF 8D 85 F8 FE FF FF               LEA EAX,[EBP-264]
 02E5 50                              PUSH EAX
 02E6 8B 5D FC                        MOV EBX,[EBP-4]
 02E9 8D 83 C9 FD FF FF               LEA EAX,[EBX-567]
 02EF 50                              PUSH EAX
 02F0 68 FF 00 00 00                  PUSH 255
 02F5 E8 05 00                        CALL '_IMPSTRCAT' (EXTERN 5)
 02F8 83 C4 0C                        ADD ESP,12
 02FB 8B 75 FC                        MOV ESI,[EBP-4]
 02FE 8D 86 C9 FE FF FF               LEA EAX,[ESI-311]
 0304 50                              PUSH EAX
 0305 8D 8D F8 FE FF FF               LEA ECX,[EBP-264]
 030B 51                              PUSH ECX
 030C 68 FF 00 00 00                  PUSH 255
 0311 E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 0314 83 C4 0C                        ADD ESP,12
 0317 EB 00                           JMP L1014
        es:
 0319                      L1014  EQU $
        %end
 0319 C9                              LEAVE
 031A C3                              RET
 031B                      L1012  EQU $
        -> esac
 031B EB 00                           JMP L1009
    esw(2):
 031D                      L1030  EQU $
        %begin
 031D E8 00 00                        CALL 'MESSAGE' (INTERNAL L1031 )
 0320 EB 00                           JMP L1032
 0322                      L1031  EQU $
 0322 C8 00 00 02                     ENTER 0000,2
            %switch ssw(0:15)
            -> ssw(sub&16_f)
 0326 8B 7D FC                        MOV EDI,[EBP-4]
 0329 8B 47 0C                        MOV EAX,[EDI+12]
 032C 25 0F 00 00 00                  AND EAX,15
 0331 C1 E0 02                        SHL EAX,2
 0334 89 C3                           MOV EBX,EAX
 0336 FF A3 80 00 00 00               JMP WORD [EBX+SWTAB+128]
        ssw(1): msg = "Not enough store"         ; -> es
 033C                      L1033  EQU $
 033C 8B 75 FC                        MOV ESI,[EBP-4]
 033F 8D 86 C9 FE FF FF               LEA EAX,[ESI-311]
 0345 50                              PUSH EAX
 0346 B9 AB 00 00 00                  MOV ECX,COT+171
 034B 51                              PUSH ECX
 034C 68 FF 00 00 00                  PUSH 255
 0351 E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 0354 83 C4 0C                        ADD ESP,12
 0357 EB 00                           JMP L1034
        ssw(2): msg = "Output exceeded"          ; -> es
 0359                      L1035  EQU $
 0359 8B 7D FC                        MOV EDI,[EBP-4]
 035C 8D 87 C9 FE FF FF               LEA EAX,[EDI-311]
 0362 50                              PUSH EAX
 0363 B9 BC 00 00 00                  MOV ECX,COT+188
 0368 51                              PUSH ECX
 0369 68 FF 00 00 00                  PUSH 255
 036E E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 0371 83 C4 0C                        ADD ESP,12
 0374 EB 00                           JMP L1034
        ssw(3): msg = "Time exceeded"            ; -> es
 0376                      L1036  EQU $
 0376 8B 5D FC                        MOV EBX,[EBP-4]
 0379 8D 83 C9 FE FF FF               LEA EAX,[EBX-311]
 037F 50                              PUSH EAX
 0380 B9 CC 00 00 00                  MOV ECX,COT+204
 0385 51                              PUSH ECX
 0386 68 FF 00 00 00                  PUSH 255
 038B E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 038E 83 C4 0C                        ADD ESP,12
 0391 EB 00                           JMP L1034
        ssw(*): msg = "Excess Resource ".eventmsg; -> es
 0393                      L1037  EQU $
 0393                      L1038  EQU $
 0393                      L1039  EQU $
 0393                      L1040  EQU $
 0393                      L1041  EQU $
 0393                      L1042  EQU $
 0393                      L1043  EQU $
 0393                      L1044  EQU $
 0393                      L1045  EQU $
 0393                      L1046  EQU $
 0393                      L1047  EQU $
 0393                      L1048  EQU $
 0393                      L1049  EQU $
 0393 8D 85 F8 FE FF FF               LEA EAX,[EBP-264]
 0399 50                              PUSH EAX
 039A B8 DA 00 00 00                  MOV EAX,COT+218
 039F 50                              PUSH EAX
 03A0 68 FF 00 00 00                  PUSH 255
 03A5 E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 03A8 83 C4 0C                        ADD ESP,12
 03AB 8D 85 F8 FE FF FF               LEA EAX,[EBP-264]
 03B1 50                              PUSH EAX
 03B2 8B 75 FC                        MOV ESI,[EBP-4]
 03B5 8D 86 C9 FD FF FF               LEA EAX,[ESI-567]
 03BB 50                              PUSH EAX
 03BC 68 FF 00 00 00                  PUSH 255
 03C1 E8 05 00                        CALL '_IMPSTRCAT' (EXTERN 5)
 03C4 83 C4 0C                        ADD ESP,12
 03C7 8B 7D FC                        MOV EDI,[EBP-4]
 03CA 8D 87 C9 FE FF FF               LEA EAX,[EDI-311]
 03D0 50                              PUSH EAX
 03D1 8D 8D F8 FE FF FF               LEA ECX,[EBP-264]
 03D7 51                              PUSH ECX
 03D8 68 FF 00 00 00                  PUSH 255
 03DD E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 03E0 83 C4 0C                        ADD ESP,12
 03E3 EB 00                           JMP L1034
        es:
 03E5                      L1034  EQU $
        %end
 03E5 C9                              LEAVE
 03E6 C3                              RET
 03E7                      L1032  EQU $
        -> esac
 03E7 EB 00                           JMP L1009
    esw(3):
 03E9                      L1050  EQU $
        %begin
 03E9 E8 00 00                        CALL 'MESSAGE' (INTERNAL L1051 )
 03EC EB 00                           JMP L1052
 03EE                      L1051  EQU $
 03EE C8 00 00 02                     ENTER 0000,2
            %switch ssw(0:15)
            -> ssw(sub&16_f)
 03F2 8B 5D FC                        MOV EBX,[EBP-4]
 03F5 8B 43 0C                        MOV EAX,[EBX+12]
 03F8 25 0F 00 00 00                  AND EAX,15
 03FD C1 E0 02                        SHL EAX,2
 0400 89 C6                           MOV ESI,EAX
 0402 FF A6 C0 00 00 00               JMP WORD [ESI+SWTAB+192]
        ssw(1): msg = "Data error - Symbol '".tostring(info&16_ff)."' (".x.")"; -> es
 0408                      L1053  EQU $
 0408 8B 7D FC                        MOV EDI,[EBP-4]
 040B 8B 47 08                        MOV EAX,[EDI+8]
 040E 25 FF 00 00 00                  AND EAX,255
                                      Generating CODE for 'TO STRING' (MACRO 3)
 0413 C7 45 F4 01 00 00 00            MOV WORD [EBP-12],1
 041A 88 45 F5                        MOV [EBP-11],AL
                                      CALL 'TO STRING' (MACRO 3)
 041D 8D 85 F4 FE FF FF               LEA EAX,[EBP-268]
 0423 50                              PUSH EAX
 0424 B8 EB 00 00 00                  MOV EAX,COT+235
 0429 50                              PUSH EAX
 042A 68 FF 00 00 00                  PUSH 255
 042F E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 0432 83 C4 0C                        ADD ESP,12
 0435 8D 85 F4 FE FF FF               LEA EAX,[EBP-268]
 043B 50                              PUSH EAX
 043C 8D 45 F4                        LEA EAX,[EBP-12]
 043F 50                              PUSH EAX
 0440 68 FF 00 00 00                  PUSH 255
 0445 E8 05 00                        CALL '_IMPSTRCAT' (EXTERN 5)
 0448 83 C4 0C                        ADD ESP,12
 044B 8D 85 F4 FE FF FF               LEA EAX,[EBP-268]
 0451 50                              PUSH EAX
 0452 B8 01 01 00 00                  MOV EAX,COT+257
 0457 50                              PUSH EAX
 0458 68 FF 00 00 00                  PUSH 255
 045D E8 05 00                        CALL '_IMPSTRCAT' (EXTERN 5)
 0460 83 C4 0C                        ADD ESP,12
 0463 8D 85 F4 FE FF FF               LEA EAX,[EBP-268]
 0469 50                              PUSH EAX
 046A 8B 5D FC                        MOV EBX,[EBP-4]
 046D 8D 43 C9                        LEA EAX,[EBX-55]
 0470 50                              PUSH EAX
 0471 68 FF 00 00 00                  PUSH 255
 0476 E8 05 00                        CALL '_IMPSTRCAT' (EXTERN 5)
 0479 83 C4 0C                        ADD ESP,12
 047C 8D 85 F4 FE FF FF               LEA EAX,[EBP-268]
 0482 50                              PUSH EAX
 0483 B8 05 01 00 00                  MOV EAX,COT+261
 0488 50                              PUSH EAX
 0489 68 FF 00 00 00                  PUSH 255
 048E E8 05 00                        CALL '_IMPSTRCAT' (EXTERN 5)
 0491 83 C4 0C                        ADD ESP,12
 0494 8B 75 FC                        MOV ESI,[EBP-4]
 0497 8D 86 C9 FE FF FF               LEA EAX,[ESI-311]
 049D 50                              PUSH EAX
 049E 8D 8D F4 FE FF FF               LEA ECX,[EBP-268]
 04A4 51                              PUSH ECX
 04A5 68 FF 00 00 00                  PUSH 255
 04AA E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 04AD 83 C4 0C                        ADD ESP,12
 04B0 EB 00                           JMP L1054
        ssw(*): msg = "Data error ".eventmsg                                  ; -> es
 04B2                      L1055  EQU $
 04B2                      L1056  EQU $
 04B2                      L1057  EQU $
 04B2                      L1058  EQU $
 04B2                      L1059  EQU $
 04B2                      L1060  EQU $
 04B2                      L1061  EQU $
 04B2                      L1062  EQU $
 04B2                      L1063  EQU $
 04B2                      L1064  EQU $
 04B2                      L1065  EQU $
 04B2                      L1066  EQU $
 04B2                      L1067  EQU $
 04B2                      L1068  EQU $
 04B2                      L1069  EQU $
 04B2 8D 85 F4 FE FF FF               LEA EAX,[EBP-268]
 04B8 50                              PUSH EAX
 04B9 B8 07 01 00 00                  MOV EAX,COT+263
 04BE 50                              PUSH EAX
 04BF 68 FF 00 00 00                  PUSH 255
 04C4 E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 04C7 83 C4 0C                        ADD ESP,12
 04CA 8D 85 F4 FE FF FF               LEA EAX,[EBP-268]
 04D0 50                              PUSH EAX
 04D1 8B 7D FC                        MOV EDI,[EBP-4]
 04D4 8D 87 C9 FD FF FF               LEA EAX,[EDI-567]
 04DA 50                              PUSH EAX
 04DB 68 FF 00 00 00                  PUSH 255
 04E0 E8 05 00                        CALL '_IMPSTRCAT' (EXTERN 5)
 04E3 83 C4 0C                        ADD ESP,12
 04E6 8B 5D FC                        MOV EBX,[EBP-4]
 04E9 8D 83 C9 FE FF FF               LEA EAX,[EBX-311]
 04EF 50                              PUSH EAX
 04F0 8D 8D F4 FE FF FF               LEA ECX,[EBP-268]
 04F6 51                              PUSH ECX
 04F7 68 FF 00 00 00                  PUSH 255
 04FC E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 04FF 83 C4 0C                        ADD ESP,12
 0502 EB 00                           JMP L1054
        es:
 0504                      L1054  EQU $
        %end
 0504 C9                              LEAVE
 0505 C3                              RET
 0506                      L1052  EQU $
        -> esac
 0506 EB 00                           JMP L1009
    esw(4):
 0508                      L1070  EQU $
        %begin
 0508 E8 00 00                        CALL 'MESSAGE' (INTERNAL L1071 )
 050B EB 00                           JMP L1072
 050D                      L1071  EQU $
 050D C8 00 00 02                     ENTER 0000,2
            %switch ssw(0:15)
            -> ssw(sub&16_f)
 0511 8B 75 FC                        MOV ESI,[EBP-4]
 0514 8B 46 0C                        MOV EAX,[ESI+12]
 0517 25 0F 00 00 00                  AND EAX,15
 051C C1 E0 02                        SHL EAX,2
 051F 89 C7                           MOV EDI,EAX
 0521 FF A7 00 01 00 00               JMP WORD [EDI+SWTAB+256]
        ssw(1): msg = "Symbol in data"        ; -> es
 0527                      L1073  EQU $
 0527 8B 5D FC                        MOV EBX,[EBP-4]
 052A 8D 83 C9 FE FF FF               LEA EAX,[EBX-311]
 0530 50                              PUSH EAX
 0531 B9 13 01 00 00                  MOV ECX,COT+275
 0536 51                              PUSH ECX
 0537 68 FF 00 00 00                  PUSH 255
 053C E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 053F 83 C4 0C                        ADD ESP,12
 0542 EB 00                           JMP L1074
        ssw(*): msg = "Invalid data ".eventmsg; -> es
 0544                      L1075  EQU $
 0544                      L1076  EQU $
 0544                      L1077  EQU $
 0544                      L1078  EQU $
 0544                      L1079  EQU $
 0544                      L1080  EQU $
 0544                      L1081  EQU $
 0544                      L1082  EQU $
 0544                      L1083  EQU $
 0544                      L1084  EQU $
 0544                      L1085  EQU $
 0544                      L1086  EQU $
 0544                      L1087  EQU $
 0544                      L1088  EQU $
 0544                      L1089  EQU $
 0544 8D 85 F8 FE FF FF               LEA EAX,[EBP-264]
 054A 50                              PUSH EAX
 054B B8 22 01 00 00                  MOV EAX,COT+290
 0550 50                              PUSH EAX
 0551 68 FF 00 00 00                  PUSH 255
 0556 E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 0559 83 C4 0C                        ADD ESP,12
 055C 8D 85 F8 FE FF FF               LEA EAX,[EBP-264]
 0562 50                              PUSH EAX
 0563 8B 75 FC                        MOV ESI,[EBP-4]
 0566 8D 86 C9 FD FF FF               LEA EAX,[ESI-567]
 056C 50                              PUSH EAX
 056D 68 FF 00 00 00                  PUSH 255
 0572 E8 05 00                        CALL '_IMPSTRCAT' (EXTERN 5)
 0575 83 C4 0C                        ADD ESP,12
 0578 8B 7D FC                        MOV EDI,[EBP-4]
 057B 8D 87 C9 FE FF FF               LEA EAX,[EDI-311]
 0581 50                              PUSH EAX
 0582 8D 8D F8 FE FF FF               LEA ECX,[EBP-264]
 0588 51                              PUSH ECX
 0589 68 FF 00 00 00                  PUSH 255
 058E E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 0591 83 C4 0C                        ADD ESP,12
 0594 EB 00                           JMP L1074
        es:
 0596                      L1074  EQU $
        %end
 0596 C9                              LEAVE
 0597 C3                              RET
 0598                      L1072  EQU $
        -> esac
 0598 EB 00                           JMP L1009
    esw(5):
 059A                      L1090  EQU $
        %begin
 059A E8 00 00                        CALL 'MESSAGE' (INTERNAL L1091 )
 059D EB 00                           JMP L1092
 059F                      L1091  EQU $
 059F C8 00 00 02                     ENTER 0000,2
            %switch ssw(0:15)
            -> ssw(sub&16_f)
 05A3 8B 5D FC                        MOV EBX,[EBP-4]
 05A6 8B 43 0C                        MOV EAX,[EBX+12]
 05A9 25 0F 00 00 00                  AND EAX,15
 05AE C1 E0 02                        SHL EAX,2
 05B1 89 C6                           MOV ESI,EAX
 05B3 FF A6 40 01 00 00               JMP WORD [ESI+SWTAB+320]
        ssw(1): msg = "Illegal FOR loop"                                           ; -> es
 05B9                      L1093  EQU $
 05B9 8B 7D FC                        MOV EDI,[EBP-4]
 05BC 8D 87 C9 FE FF FF               LEA EAX,[EDI-311]
 05C2 50                              PUSH EAX
 05C3 B9 30 01 00 00                  MOV ECX,COT+304
 05C8 51                              PUSH ECX
 05C9 68 FF 00 00 00                  PUSH 255
 05CE E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 05D1 83 C4 0C                        ADD ESP,12
 05D4 EB 00                           JMP L1094
        ssw(2): msg = "Illegal exponent - Exponent = ".x                           ; -> es 
 05D6                      L1095  EQU $
 05D6 8D 85 F8 FE FF FF               LEA EAX,[EBP-264]
 05DC 50                              PUSH EAX
 05DD B8 41 01 00 00                  MOV EAX,COT+321
 05E2 50                              PUSH EAX
 05E3 68 FF 00 00 00                  PUSH 255
 05E8 E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 05EB 83 C4 0C                        ADD ESP,12
 05EE 8D 85 F8 FE FF FF               LEA EAX,[EBP-264]
 05F4 50                              PUSH EAX
 05F5 8B 5D FC                        MOV EBX,[EBP-4]
 05F8 8D 43 C9                        LEA EAX,[EBX-55]
 05FB 50                              PUSH EAX
 05FC 68 FF 00 00 00                  PUSH 255
 0601 E8 05 00                        CALL '_IMPSTRCAT' (EXTERN 5)
 0604 83 C4 0C                        ADD ESP,12
 0607 8B 75 FC                        MOV ESI,[EBP-4]
 060A 8D 86 C9 FE FF FF               LEA EAX,[ESI-311]
 0610 50                              PUSH EAX
 0611 8D 8D F8 FE FF FF               LEA ECX,[EBP-264]
 0617 51                              PUSH ECX
 0618 68 FF 00 00 00                  PUSH 255
 061D E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 0620 83 C4 0C                        ADD ESP,12
 0623 EB 00                           JMP L1094
        ssw(3): msg = "Array inside-out"                                           ; -> es
 0625                      L1096  EQU $
 0625 8B 7D FC                        MOV EDI,[EBP-4]
 0628 8D 87 C9 FE FF FF               LEA EAX,[EDI-311]
 062E 50                              PUSH EAX
 062F B9 60 01 00 00                  MOV ECX,COT+352
 0634 51                              PUSH ECX
 0635 68 FF 00 00 00                  PUSH 255
 063A E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 063D 83 C4 0C                        ADD ESP,12
 0640 EB 00                           JMP L1094
        ssw(4): msg = "String inside-out"                                          ; -> es
 0642                      L1097  EQU $
 0642 8B 5D FC                        MOV EBX,[EBP-4]
 0645 8D 83 C9 FE FF FF               LEA EAX,[EBX-311]
 064B 50                              PUSH EAX
 064C B9 71 01 00 00                  MOV ECX,COT+369
 0651 51                              PUSH ECX
 0652 68 FF 00 00 00                  PUSH 255
 0657 E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 065A 83 C4 0C                        ADD ESP,12
 065D EB 00                           JMP L1094
        ssw(5): msg = "Illegal exponent '".x."'"                                   ; -> es
 065F                      L1098  EQU $
 065F 8D 85 F8 FE FF FF               LEA EAX,[EBP-264]
 0665 50                              PUSH EAX
 0666 B8 83 01 00 00                  MOV EAX,COT+387
 066B 50                              PUSH EAX
 066C 68 FF 00 00 00                  PUSH 255
 0671 E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 0674 83 C4 0C                        ADD ESP,12
 0677 8D 85 F8 FE FF FF               LEA EAX,[EBP-264]
 067D 50                              PUSH EAX
 067E 8B 75 FC                        MOV ESI,[EBP-4]
 0681 8D 46 C9                        LEA EAX,[ESI-55]
 0684 50                              PUSH EAX
 0685 68 FF 00 00 00                  PUSH 255
 068A E8 05 00                        CALL '_IMPSTRCAT' (EXTERN 5)
 068D 83 C4 0C                        ADD ESP,12
 0690 8D 85 F8 FE FF FF               LEA EAX,[EBP-264]
 0696 50                              PUSH EAX
 0697 B8 96 01 00 00                  MOV EAX,COT+406
 069C 50                              PUSH EAX
 069D 68 FF 00 00 00                  PUSH 255
 06A2 E8 05 00                        CALL '_IMPSTRCAT' (EXTERN 5)
 06A5 83 C4 0C                        ADD ESP,12
 06A8 8B 7D FC                        MOV EDI,[EBP-4]
 06AB 8D 87 C9 FE FF FF               LEA EAX,[EDI-311]
 06B1 50                              PUSH EAX
 06B2 8D 8D F8 FE FF FF               LEA ECX,[EBP-264]
 06B8 51                              PUSH ECX
 06B9 68 FF 00 00 00                  PUSH 255
 06BE E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 06C1 83 C4 0C                        ADD ESP,12
 06C4 EB 00                           JMP L1094
        ssw(*): msg = "Invalid argument - '".e." Sub-class = ".s.", Value = ".x."'"; -> es
 06C6                      L1099  EQU $
 06C6                      L1100  EQU $
 06C6                      L1101  EQU $
 06C6                      L1102  EQU $
 06C6                      L1103  EQU $
 06C6                      L1104  EQU $
 06C6                      L1105  EQU $
 06C6                      L1106  EQU $
 06C6                      L1107  EQU $
 06C6                      L1108  EQU $
 06C6                      L1109  EQU $
 06C6 8D 85 F8 FE FF FF               LEA EAX,[EBP-264]
 06CC 50                              PUSH EAX
 06CD B8 98 01 00 00                  MOV EAX,COT+408
 06D2 50                              PUSH EAX
 06D3 68 FF 00 00 00                  PUSH 255
 06D8 E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 06DB 83 C4 0C                        ADD ESP,12
 06DE 8D 85 F8 FE FF FF               LEA EAX,[EBP-264]
 06E4 50                              PUSH EAX
 06E5 8B 5D FC                        MOV EBX,[EBP-4]
 06E8 8D 43 EB                        LEA EAX,[EBX-21]
 06EB 50                              PUSH EAX
 06EC 68 FF 00 00 00                  PUSH 255
 06F1 E8 05 00                        CALL '_IMPSTRCAT' (EXTERN 5)
 06F4 83 C4 0C                        ADD ESP,12
 06F7 8D 85 F8 FE FF FF               LEA EAX,[EBP-264]
 06FD 50                              PUSH EAX
 06FE B8 AD 01 00 00                  MOV EAX,COT+429
 0703 50                              PUSH EAX
 0704 68 FF 00 00 00                  PUSH 255
 0709 E8 05 00                        CALL '_IMPSTRCAT' (EXTERN 5)
 070C 83 C4 0C                        ADD ESP,12
 070F 8D 85 F8 FE FF FF               LEA EAX,[EBP-264]
 0715 50                              PUSH EAX
 0716 8B 75 FC                        MOV ESI,[EBP-4]
 0719 8D 46 DA                        LEA EAX,[ESI-38]
 071C 50                              PUSH EAX
 071D 68 FF 00 00 00                  PUSH 255
 0722 E8 05 00                        CALL '_IMPSTRCAT' (EXTERN 5)
 0725 83 C4 0C                        ADD ESP,12
 0728 8D 85 F8 FE FF FF               LEA EAX,[EBP-264]
 072E 50                              PUSH EAX
 072F B8 BB 01 00 00                  MOV EAX,COT+443
 0734 50                              PUSH EAX
 0735 68 FF 00 00 00                  PUSH 255
 073A E8 05 00                        CALL '_IMPSTRCAT' (EXTERN 5)
 073D 83 C4 0C                        ADD ESP,12
 0740 8D 85 F8 FE FF FF               LEA EAX,[EBP-264]
 0746 50                              PUSH EAX
 0747 8B 7D FC                        MOV EDI,[EBP-4]
 074A 8D 47 C9                        LEA EAX,[EDI-55]
 074D 50                              PUSH EAX
 074E 68 FF 00 00 00                  PUSH 255
 0753 E8 05 00                        CALL '_IMPSTRCAT' (EXTERN 5)
 0756 83 C4 0C                        ADD ESP,12
 0759 8D 85 F8 FE FF FF               LEA EAX,[EBP-264]
 075F 50                              PUSH EAX
 0760 B8 C6 01 00 00                  MOV EAX,COT+454
 0765 50                              PUSH EAX
 0766 68 FF 00 00 00                  PUSH 255
 076B E8 05 00                        CALL '_IMPSTRCAT' (EXTERN 5)
 076E 83 C4 0C                        ADD ESP,12
 0771 8B 5D FC                        MOV EBX,[EBP-4]
 0774 8D 83 C9 FE FF FF               LEA EAX,[EBX-311]
 077A 50                              PUSH EAX
 077B 8D 8D F8 FE FF FF               LEA ECX,[EBP-264]
 0781 51                              PUSH ECX
 0782 68 FF 00 00 00                  PUSH 255
 0787 E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 078A 83 C4 0C                        ADD ESP,12
 078D EB 00                           JMP L1094
        es:
 078F                      L1094  EQU $
        %end
 078F C9                              LEAVE
 0790 C3                              RET
 0791                      L1092  EQU $
        -> esac
 0791 EB 00                           JMP L1009
    esw(6):
 0793                      L1110  EQU $
        %begin
 0793 E8 00 00                        CALL 'MESSAGE' (INTERNAL L1111 )
 0796 EB 00                           JMP L1112
 0798                      L1111  EQU $
 0798 C8 00 00 02                     ENTER 0000,2
            %switch ssw(0:15)
            -> ssw(sub&16_f)
 079C 8B 75 FC                        MOV ESI,[EBP-4]
 079F 8B 46 0C                        MOV EAX,[ESI+12]
 07A2 25 0F 00 00 00                  AND EAX,15
 07A7 C1 E0 02                        SHL EAX,2
 07AA 89 C7                           MOV EDI,EAX
 07AC FF A7 80 01 00 00               JMP WORD [EDI+SWTAB+384]
        ssw(1): msg = "Capacity exceeded"
 07B2                      L1113  EQU $
 07B2 8B 5D FC                        MOV EBX,[EBP-4]
 07B5 8D 83 C9 FE FF FF               LEA EAX,[EBX-311]
 07BB 50                              PUSH EAX
 07BC B9 C8 01 00 00                  MOV ECX,COT+456
 07C1 51                              PUSH ECX
 07C2 68 FF 00 00 00                  PUSH 255
 07C7 E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 07CA 83 C4 0C                        ADD ESP,12
                %if (info = 1) %then msg = msg." (String copy overflow)"
 07CD 8B 75 FC                        MOV ESI,[EBP-4]
 07D0 8B 46 08                        MOV EAX,[ESI+8]
 07D3 3D 01 00 00 00                  CMP EAX,1
 07D8 75 00                           JNE L1114
 07DA 8D 86 C9 FE FF FF               LEA EAX,[ESI-311]
 07E0 50                              PUSH EAX
 07E1 B9 DA 01 00 00                  MOV ECX,COT+474
 07E6 51                              PUSH ECX
 07E7 68 FF 00 00 00                  PUSH 255
 07EC E8 05 00                        CALL '_IMPSTRCAT' (EXTERN 5)
 07EF 83 C4 0C                        ADD ESP,12
 07F2                      L1114  EQU $
                %if (info = 2) %then msg = msg." (String append overflow)"
 07F2 8B 7D FC                        MOV EDI,[EBP-4]
 07F5 8B 47 08                        MOV EAX,[EDI+8]
 07F8 3D 02 00 00 00                  CMP EAX,2
 07FD 75 00                           JNE L1115
 07FF 8D 87 C9 FE FF FF               LEA EAX,[EDI-311]
 0805 50                              PUSH EAX
 0806 B9 F2 01 00 00                  MOV ECX,COT+498
 080B 51                              PUSH ECX
 080C 68 FF 00 00 00                  PUSH 255
 0811 E8 05 00                        CALL '_IMPSTRCAT' (EXTERN 5)
 0814 83 C4 0C                        ADD ESP,12
 0817                      L1115  EQU $
                msg=msg."."                                                          ; -> es
 0817 8B 5D FC                        MOV EBX,[EBP-4]
 081A 8D 83 C9 FE FF FF               LEA EAX,[EBX-311]
 0820 50                              PUSH EAX
 0821 B9 0C 02 00 00                  MOV ECX,COT+524
 0826 51                              PUSH ECX
 0827 68 FF 00 00 00                  PUSH 255
 082C E8 05 00                        CALL '_IMPSTRCAT' (EXTERN 5)
 082F 83 C4 0C                        ADD ESP,12
 0832 EB 00                           JMP L1116
        ssw(2): msg = "Array bound fault - Index = ".x                               ; -> es
 0834                      L1117  EQU $
 0834 8D 85 F8 FE FF FF               LEA EAX,[EBP-264]
 083A 50                              PUSH EAX
 083B B8 0E 02 00 00                  MOV EAX,COT+526
 0840 50                              PUSH EAX
 0841 68 FF 00 00 00                  PUSH 255
 0846 E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 0849 83 C4 0C                        ADD ESP,12
 084C 8D 85 F8 FE FF FF               LEA EAX,[EBP-264]
 0852 50                              PUSH EAX
 0853 8B 75 FC                        MOV ESI,[EBP-4]
 0856 8D 46 C9                        LEA EAX,[ESI-55]
 0859 50                              PUSH EAX
 085A 68 FF 00 00 00                  PUSH 255
 085F E8 05 00                        CALL '_IMPSTRCAT' (EXTERN 5)
 0862 83 C4 0C                        ADD ESP,12
 0865 8B 7D FC                        MOV EDI,[EBP-4]
 0868 8D 87 C9 FE FF FF               LEA EAX,[EDI-311]
 086E 50                              PUSH EAX
 086F 8D 8D F8 FE FF FF               LEA ECX,[EBP-264]
 0875 51                              PUSH ECX
 0876 68 FF 00 00 00                  PUSH 255
 087B E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 087E 83 C4 0C                        ADD ESP,12
 0881 EB 00                           JMP L1116
        ssw(3): msg = "Switch bound fault = ".x                                      ; -> es
 0883                      L1118  EQU $
 0883 8D 85 F8 FE FF FF               LEA EAX,[EBP-264]
 0889 50                              PUSH EAX
 088A B8 2B 02 00 00                  MOV EAX,COT+555
 088F 50                              PUSH EAX
 0890 68 FF 00 00 00                  PUSH 255
 0895 E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 0898 83 C4 0C                        ADD ESP,12
 089B 8D 85 F8 FE FF FF               LEA EAX,[EBP-264]
 08A1 50                              PUSH EAX
 08A2 8B 5D FC                        MOV EBX,[EBP-4]
 08A5 8D 43 C9                        LEA EAX,[EBX-55]
 08A8 50                              PUSH EAX
 08A9 68 FF 00 00 00                  PUSH 255
 08AE E8 05 00                        CALL '_IMPSTRCAT' (EXTERN 5)
 08B1 83 C4 0C                        ADD ESP,12
 08B4 8B 75 FC                        MOV ESI,[EBP-4]
 08B7 8D 86 C9 FE FF FF               LEA EAX,[ESI-311]
 08BD 50                              PUSH EAX
 08BE 8D 8D F8 FE FF FF               LEA ECX,[EBP-264]
 08C4 51                              PUSH ECX
 08C5 68 FF 00 00 00                  PUSH 255
 08CA E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 08CD 83 C4 0C                        ADD ESP,12
 08D0 EB 00                           JMP L1116
        ssw(4): msg = "Illegal event signal"                                         ; -> es
 08D2                      L1119  EQU $
 08D2 8B 7D FC                        MOV EDI,[EBP-4]
 08D5 8D 87 C9 FE FF FF               LEA EAX,[EDI-311]
 08DB 50                              PUSH EAX
 08DC B9 41 02 00 00                  MOV ECX,COT+577
 08E1 51                              PUSH ECX
 08E2 68 FF 00 00 00                  PUSH 255
 08E7 E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 08EA 83 C4 0C                        ADD ESP,12
 08ED EB 00                           JMP L1116
        ssw(5): msg = "CHARNO out of range '".x."'"                                  ; -> es
 08EF                      L1120  EQU $
 08EF 8D 85 F8 FE FF FF               LEA EAX,[EBP-264]
 08F5 50                              PUSH EAX
 08F6 B8 56 02 00 00                  MOV EAX,COT+598
 08FB 50                              PUSH EAX
 08FC 68 FF 00 00 00                  PUSH 255
 0901 E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 0904 83 C4 0C                        ADD ESP,12
 0907 8D 85 F8 FE FF FF               LEA EAX,[EBP-264]
 090D 50                              PUSH EAX
 090E 8B 5D FC                        MOV EBX,[EBP-4]
 0911 8D 43 C9                        LEA EAX,[EBX-55]
 0914 50                              PUSH EAX
 0915 68 FF 00 00 00                  PUSH 255
 091A E8 05 00                        CALL '_IMPSTRCAT' (EXTERN 5)
 091D 83 C4 0C                        ADD ESP,12
 0920 8D 85 F8 FE FF FF               LEA EAX,[EBP-264]
 0926 50                              PUSH EAX
 0927 B8 6C 02 00 00                  MOV EAX,COT+620
 092C 50                              PUSH EAX
 092D 68 FF 00 00 00                  PUSH 255
 0932 E8 05 00                        CALL '_IMPSTRCAT' (EXTERN 5)
 0935 83 C4 0C                        ADD ESP,12
 0938 8B 75 FC                        MOV ESI,[EBP-4]
 093B 8D 86 C9 FE FF FF               LEA EAX,[ESI-311]
 0941 50                              PUSH EAX
 0942 8D 8D F8 FE FF FF               LEA ECX,[EBP-264]
 0948 51                              PUSH ECX
 0949 68 FF 00 00 00                  PUSH 255
 094E E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 0951 83 C4 0C                        ADD ESP,12
 0954 EB 00                           JMP L1116
        ssw(6): msg = "TOSTRING out of range '".x."'"                                ; -> es
 0956                      L1121  EQU $
 0956 8D 85 F8 FE FF FF               LEA EAX,[EBP-264]
 095C 50                              PUSH EAX
 095D B8 6E 02 00 00                  MOV EAX,COT+622
 0962 50                              PUSH EAX
 0963 68 FF 00 00 00                  PUSH 255
 0968 E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 096B 83 C4 0C                        ADD ESP,12
 096E 8D 85 F8 FE FF FF               LEA EAX,[EBP-264]
 0974 50                              PUSH EAX
 0975 8B 7D FC                        MOV EDI,[EBP-4]
 0978 8D 47 C9                        LEA EAX,[EDI-55]
 097B 50                              PUSH EAX
 097C 68 FF 00 00 00                  PUSH 255
 0981 E8 05 00                        CALL '_IMPSTRCAT' (EXTERN 5)
 0984 83 C4 0C                        ADD ESP,12
 0987 8D 85 F8 FE FF FF               LEA EAX,[EBP-264]
 098D 50                              PUSH EAX
 098E B8 86 02 00 00                  MOV EAX,COT+646
 0993 50                              PUSH EAX
 0994 68 FF 00 00 00                  PUSH 255
 0999 E8 05 00                        CALL '_IMPSTRCAT' (EXTERN 5)
 099C 83 C4 0C                        ADD ESP,12
 099F 8B 5D FC                        MOV EBX,[EBP-4]
 09A2 8D 83 C9 FE FF FF               LEA EAX,[EBX-311]
 09A8 50                              PUSH EAX
 09A9 8D 8D F8 FE FF FF               LEA ECX,[EBP-264]
 09AF 51                              PUSH ECX
 09B0 68 FF 00 00 00                  PUSH 255
 09B5 E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 09B8 83 C4 0C                        ADD ESP,12
 09BB EB 00                           JMP L1116
        ssw(7): msg = "Illegal shift '".x."'"                                        ; -> es
 09BD                      L1122  EQU $
 09BD 8D 85 F8 FE FF FF               LEA EAX,[EBP-264]
 09C3 50                              PUSH EAX
 09C4 B8 88 02 00 00                  MOV EAX,COT+648
 09C9 50                              PUSH EAX
 09CA 68 FF 00 00 00                  PUSH 255
 09CF E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 09D2 83 C4 0C                        ADD ESP,12
 09D5 8D 85 F8 FE FF FF               LEA EAX,[EBP-264]
 09DB 50                              PUSH EAX
 09DC 8B 75 FC                        MOV ESI,[EBP-4]
 09DF 8D 46 C9                        LEA EAX,[ESI-55]
 09E2 50                              PUSH EAX
 09E3 68 FF 00 00 00                  PUSH 255
 09E8 E8 05 00                        CALL '_IMPSTRCAT' (EXTERN 5)
 09EB 83 C4 0C                        ADD ESP,12
 09EE 8D 85 F8 FE FF FF               LEA EAX,[EBP-264]
 09F4 50                              PUSH EAX
 09F5 B8 98 02 00 00                  MOV EAX,COT+664
 09FA 50                              PUSH EAX
 09FB 68 FF 00 00 00                  PUSH 255
 0A00 E8 05 00                        CALL '_IMPSTRCAT' (EXTERN 5)
 0A03 83 C4 0C                        ADD ESP,12
 0A06 8B 7D FC                        MOV EDI,[EBP-4]
 0A09 8D 87 C9 FE FF FF               LEA EAX,[EDI-311]
 0A0F 50                              PUSH EAX
 0A10 8D 8D F8 FE FF FF               LEA ECX,[EBP-264]
 0A16 51                              PUSH ECX
 0A17 68 FF 00 00 00                  PUSH 255
 0A1C E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 0A1F 83 C4 0C                        ADD ESP,12
 0A22 EB 00                           JMP L1116
        ssw(*): msg = "Out of range fault - (".e." Sub-class = ".s.", Value = ".x.")"; -> es
 0A24                      L1123  EQU $
 0A24                      L1124  EQU $
 0A24                      L1125  EQU $
 0A24                      L1126  EQU $
 0A24                      L1127  EQU $
 0A24                      L1128  EQU $
 0A24                      L1129  EQU $
 0A24                      L1130  EQU $
 0A24                      L1131  EQU $
 0A24 8D 85 F8 FE FF FF               LEA EAX,[EBP-264]
 0A2A 50                              PUSH EAX
 0A2B B8 9A 02 00 00                  MOV EAX,COT+666
 0A30 50                              PUSH EAX
 0A31 68 FF 00 00 00                  PUSH 255
 0A36 E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 0A39 83 C4 0C                        ADD ESP,12
 0A3C 8D 85 F8 FE FF FF               LEA EAX,[EBP-264]
 0A42 50                              PUSH EAX
 0A43 8B 5D FC                        MOV EBX,[EBP-4]
 0A46 8D 43 EB                        LEA EAX,[EBX-21]
 0A49 50                              PUSH EAX
 0A4A 68 FF 00 00 00                  PUSH 255
 0A4F E8 05 00                        CALL '_IMPSTRCAT' (EXTERN 5)
 0A52 83 C4 0C                        ADD ESP,12
 0A55 8D 85 F8 FE FF FF               LEA EAX,[EBP-264]
 0A5B 50                              PUSH EAX
 0A5C B8 B1 02 00 00                  MOV EAX,COT+689
 0A61 50                              PUSH EAX
 0A62 68 FF 00 00 00                  PUSH 255
 0A67 E8 05 00                        CALL '_IMPSTRCAT' (EXTERN 5)
 0A6A 83 C4 0C                        ADD ESP,12
 0A6D 8D 85 F8 FE FF FF               LEA EAX,[EBP-264]
 0A73 50                              PUSH EAX
 0A74 8B 75 FC                        MOV ESI,[EBP-4]
 0A77 8D 46 DA                        LEA EAX,[ESI-38]
 0A7A 50                              PUSH EAX
 0A7B 68 FF 00 00 00                  PUSH 255
 0A80 E8 05 00                        CALL '_IMPSTRCAT' (EXTERN 5)
 0A83 83 C4 0C                        ADD ESP,12
 0A86 8D 85 F8 FE FF FF               LEA EAX,[EBP-264]
 0A8C 50                              PUSH EAX
 0A8D B8 BF 02 00 00                  MOV EAX,COT+703
 0A92 50                              PUSH EAX
 0A93 68 FF 00 00 00                  PUSH 255
 0A98 E8 05 00                        CALL '_IMPSTRCAT' (EXTERN 5)
 0A9B 83 C4 0C                        ADD ESP,12
 0A9E 8D 85 F8 FE FF FF               LEA EAX,[EBP-264]
 0AA4 50                              PUSH EAX
 0AA5 8B 7D FC                        MOV EDI,[EBP-4]
 0AA8 8D 47 C9                        LEA EAX,[EDI-55]
 0AAB 50                              PUSH EAX
 0AAC 68 FF 00 00 00                  PUSH 255
 0AB1 E8 05 00                        CALL '_IMPSTRCAT' (EXTERN 5)
 0AB4 83 C4 0C                        ADD ESP,12
 0AB7 8D 85 F8 FE FF FF               LEA EAX,[EBP-264]
 0ABD 50                              PUSH EAX
 0ABE B8 CA 02 00 00                  MOV EAX,COT+714
 0AC3 50                              PUSH EAX
 0AC4 68 FF 00 00 00                  PUSH 255
 0AC9 E8 05 00                        CALL '_IMPSTRCAT' (EXTERN 5)
 0ACC 83 C4 0C                        ADD ESP,12
 0ACF 8B 5D FC                        MOV EBX,[EBP-4]
 0AD2 8D 83 C9 FE FF FF               LEA EAX,[EBX-311]
 0AD8 50                              PUSH EAX
 0AD9 8D 8D F8 FE FF FF               LEA ECX,[EBP-264]
 0ADF 51                              PUSH ECX
 0AE0 68 FF 00 00 00                  PUSH 255
 0AE5 E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 0AE8 83 C4 0C                        ADD ESP,12
 0AEB EB 00                           JMP L1116
        es:
 0AED                      L1116  EQU $
        %end
 0AED C9                              LEAVE
 0AEE C3                              RET
 0AEF                      L1112  EQU $
        -> esac
 0AEF EB 00                           JMP L1009
    esw(7):
 0AF1                      L1132  EQU $
        %begin
 0AF1 E8 00 00                        CALL 'MESSAGE' (INTERNAL L1133 )
 0AF4 EB 00                           JMP L1134
 0AF6                      L1133  EQU $
 0AF6 C8 00 00 02                     ENTER 0000,2
            %switch ssw(0:15)
            -> ssw(sub&16_f)
 0AFA 8B 75 FC                        MOV ESI,[EBP-4]
 0AFD 8B 46 0C                        MOV EAX,[ESI+12]
 0B00 25 0F 00 00 00                  AND EAX,15
 0B05 C1 E0 02                        SHL EAX,2
 0B08 89 C7                           MOV EDI,EAX
 0B0A FF A7 C0 01 00 00               JMP WORD [EDI+SWTAB+448]
        ssw(*): msg = "Resolution fails ".eventmsg; -> es
 0B10                      L1135  EQU $
 0B10                      L1136  EQU $
 0B10                      L1137  EQU $
 0B10                      L1138  EQU $
 0B10                      L1139  EQU $
 0B10                      L1140  EQU $
 0B10                      L1141  EQU $
 0B10                      L1142  EQU $
 0B10                      L1143  EQU $
 0B10                      L1144  EQU $
 0B10                      L1145  EQU $
 0B10                      L1146  EQU $
 0B10                      L1147  EQU $
 0B10                      L1148  EQU $
 0B10                      L1149  EQU $
 0B10                      L1150  EQU $
 0B10 8D 85 F8 FE FF FF               LEA EAX,[EBP-264]
 0B16 50                              PUSH EAX
 0B17 B8 CC 02 00 00                  MOV EAX,COT+716
 0B1C 50                              PUSH EAX
 0B1D 68 FF 00 00 00                  PUSH 255
 0B22 E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 0B25 83 C4 0C                        ADD ESP,12
 0B28 8D 85 F8 FE FF FF               LEA EAX,[EBP-264]
 0B2E 50                              PUSH EAX
 0B2F 8B 5D FC                        MOV EBX,[EBP-4]
 0B32 8D 83 C9 FD FF FF               LEA EAX,[EBX-567]
 0B38 50                              PUSH EAX
 0B39 68 FF 00 00 00                  PUSH 255
 0B3E E8 05 00                        CALL '_IMPSTRCAT' (EXTERN 5)
 0B41 83 C4 0C                        ADD ESP,12
 0B44 8B 75 FC                        MOV ESI,[EBP-4]
 0B47 8D 86 C9 FE FF FF               LEA EAX,[ESI-311]
 0B4D 50                              PUSH EAX
 0B4E 8D 8D F8 FE FF FF               LEA ECX,[EBP-264]
 0B54 51                              PUSH ECX
 0B55 68 FF 00 00 00                  PUSH 255
 0B5A E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 0B5D 83 C4 0C                        ADD ESP,12
 0B60 EB 00                           JMP L1151
        es:
 0B62                      L1151  EQU $
        %end
 0B62 C9                              LEAVE
 0B63 C3                              RET
 0B64                      L1134  EQU $
        -> esac
 0B64 EB 00                           JMP L1009
    esw(8):
 0B66                      L1152  EQU $
        %begin
 0B66 E8 00 00                        CALL 'MESSAGE' (INTERNAL L1153 )
 0B69 EB 00                           JMP L1154
 0B6B                      L1153  EQU $
 0B6B C8 00 00 02                     ENTER 0000,2
            %switch ssw(0:15)
            -> ssw(sub&16_f)
 0B6F 8B 7D FC                        MOV EDI,[EBP-4]
 0B72 8B 47 0C                        MOV EAX,[EDI+12]
 0B75 25 0F 00 00 00                  AND EAX,15
 0B7A C1 E0 02                        SHL EAX,2
 0B7D 89 C3                           MOV EBX,EAX
 0B7F FF A3 00 02 00 00               JMP WORD [EBX+SWTAB+512]
        ssw(1): msg = "Unassigned variable"             ; -> es
 0B85                      L1155  EQU $
 0B85 8B 75 FC                        MOV ESI,[EBP-4]
 0B88 8D 86 C9 FE FF FF               LEA EAX,[ESI-311]
 0B8E 50                              PUSH EAX
 0B8F B9 DE 02 00 00                  MOV ECX,COT+734
 0B94 51                              PUSH ECX
 0B95 68 FF 00 00 00                  PUSH 255
 0B9A E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 0B9D 83 C4 0C                        ADD ESP,12
 0BA0 EB 00                           JMP L1156
        ssw(2): msg = "No switch label '".x."'"         ; -> es
 0BA2                      L1157  EQU $
 0BA2 8D 85 F8 FE FF FF               LEA EAX,[EBP-264]
 0BA8 50                              PUSH EAX
 0BA9 B8 F2 02 00 00                  MOV EAX,COT+754
 0BAE 50                              PUSH EAX
 0BAF 68 FF 00 00 00                  PUSH 255
 0BB4 E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 0BB7 83 C4 0C                        ADD ESP,12
 0BBA 8D 85 F8 FE FF FF               LEA EAX,[EBP-264]
 0BC0 50                              PUSH EAX
 0BC1 8B 7D FC                        MOV EDI,[EBP-4]
 0BC4 8D 47 C9                        LEA EAX,[EDI-55]
 0BC7 50                              PUSH EAX
 0BC8 68 FF 00 00 00                  PUSH 255
 0BCD E8 05 00                        CALL '_IMPSTRCAT' (EXTERN 5)
 0BD0 83 C4 0C                        ADD ESP,12
 0BD3 8D 85 F8 FE FF FF               LEA EAX,[EBP-264]
 0BD9 50                              PUSH EAX
 0BDA B8 04 03 00 00                  MOV EAX,COT+772
 0BDF 50                              PUSH EAX
 0BE0 68 FF 00 00 00                  PUSH 255
 0BE5 E8 05 00                        CALL '_IMPSTRCAT' (EXTERN 5)
 0BE8 83 C4 0C                        ADD ESP,12
 0BEB 8B 5D FC                        MOV EBX,[EBP-4]
 0BEE 8D 83 C9 FE FF FF               LEA EAX,[EBX-311]
 0BF4 50                              PUSH EAX
 0BF5 8D 8D F8 FE FF FF               LEA ECX,[EBP-264]
 0BFB 51                              PUSH ECX
 0BFC 68 FF 00 00 00                  PUSH 255
 0C01 E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 0C04 83 C4 0C                        ADD ESP,12
 0C07 EB 00                           JMP L1156
        ssw(3): msg = "For variable corrupt"            ; -> es
 0C09                      L1158  EQU $
 0C09 8B 75 FC                        MOV ESI,[EBP-4]
 0C0C 8D 86 C9 FE FF FF               LEA EAX,[ESI-311]
 0C12 50                              PUSH EAX
 0C13 B9 06 03 00 00                  MOV ECX,COT+774
 0C18 51                              PUSH ECX
 0C19 68 FF 00 00 00                  PUSH 255
 0C1E E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 0C21 83 C4 0C                        ADD ESP,12
 0C24 EB 00                           JMP L1156
        ssw(*): msg = "Undefined switch value ".eventmsg; -> es
 0C26                      L1159  EQU $
 0C26                      L1160  EQU $
 0C26                      L1161  EQU $
 0C26                      L1162  EQU $
 0C26                      L1163  EQU $
 0C26                      L1164  EQU $
 0C26                      L1165  EQU $
 0C26                      L1166  EQU $
 0C26                      L1167  EQU $
 0C26                      L1168  EQU $
 0C26                      L1169  EQU $
 0C26                      L1170  EQU $
 0C26                      L1171  EQU $
 0C26 8D 85 F8 FE FF FF               LEA EAX,[EBP-264]
 0C2C 50                              PUSH EAX
 0C2D B8 1B 03 00 00                  MOV EAX,COT+795
 0C32 50                              PUSH EAX
 0C33 68 FF 00 00 00                  PUSH 255
 0C38 E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 0C3B 83 C4 0C                        ADD ESP,12
 0C3E 8D 85 F8 FE FF FF               LEA EAX,[EBP-264]
 0C44 50                              PUSH EAX
 0C45 8B 7D FC                        MOV EDI,[EBP-4]
 0C48 8D 87 C9 FD FF FF               LEA EAX,[EDI-567]
 0C4E 50                              PUSH EAX
 0C4F 68 FF 00 00 00                  PUSH 255
 0C54 E8 05 00                        CALL '_IMPSTRCAT' (EXTERN 5)
 0C57 83 C4 0C                        ADD ESP,12
 0C5A 8B 5D FC                        MOV EBX,[EBP-4]
 0C5D 8D 83 C9 FE FF FF               LEA EAX,[EBX-311]
 0C63 50                              PUSH EAX
 0C64 8D 8D F8 FE FF FF               LEA ECX,[EBP-264]
 0C6A 51                              PUSH ECX
 0C6B 68 FF 00 00 00                  PUSH 255
 0C70 E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 0C73 83 C4 0C                        ADD ESP,12
 0C76 EB 00                           JMP L1156
        es:
 0C78                      L1156  EQU $
        %end
 0C78 C9                              LEAVE
 0C79 C3                              RET
 0C7A                      L1154  EQU $
        -> esac
 0C7A EB 00                           JMP L1009
    esw(9):
 0C7C                      L1172  EQU $
        %begin
 0C7C E8 00 00                        CALL 'MESSAGE' (INTERNAL L1173 )
 0C7F EB 00                           JMP L1174
 0C81                      L1173  EQU $
 0C81 C8 00 00 02                     ENTER 0000,2
            %switch ssw(0:15)
            -> ssw(sub&16_f)
 0C85 8B 75 FC                        MOV ESI,[EBP-4]
 0C88 8B 46 0C                        MOV EAX,[ESI+12]
 0C8B 25 0F 00 00 00                  AND EAX,15
 0C90 C1 E0 02                        SHL EAX,2
 0C93 89 C7                           MOV EDI,EAX
 0C95 FF A7 40 02 00 00               JMP WORD [EDI+SWTAB+576]
        ssw(0):  msg = "End of input"                           ; -> es
 0C9B                      L1175  EQU $
 0C9B 8B 5D FC                        MOV EBX,[EBP-4]
 0C9E 8D 83 C9 FE FF FF               LEA EAX,[EBX-311]
 0CA4 50                              PUSH EAX
 0CA5 B9 33 03 00 00                  MOV ECX,COT+819
 0CAA 51                              PUSH ECX
 0CAB 68 FF 00 00 00                  PUSH 255
 0CB0 E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 0CB3 83 C4 0C                        ADD ESP,12
 0CB6 EB 00                           JMP L1176
        ssw(1):  msg = "Unexpected end of input"                ; -> es
 0CB8                      L1177  EQU $
 0CB8 8B 75 FC                        MOV ESI,[EBP-4]
 0CBB 8D 86 C9 FE FF FF               LEA EAX,[ESI-311]
 0CC1 50                              PUSH EAX
 0CC2 B9 40 03 00 00                  MOV ECX,COT+832
 0CC7 51                              PUSH ECX
 0CC8 68 FF 00 00 00                  PUSH 255
 0CCD E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 0CD0 83 C4 0C                        ADD ESP,12
 0CD3 EB 00                           JMP L1176
        ssw(2):  msg = "Couldn't open file. Error Code '".x."'" ; -> es
 0CD5                      L1178  EQU $
 0CD5 8D 85 F8 FE FF FF               LEA EAX,[EBP-264]
 0CDB 50                              PUSH EAX
 0CDC B8 58 03 00 00                  MOV EAX,COT+856
 0CE1 50                              PUSH EAX
 0CE2 68 FF 00 00 00                  PUSH 255
 0CE7 E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 0CEA 83 C4 0C                        ADD ESP,12
 0CED 8D 85 F8 FE FF FF               LEA EAX,[EBP-264]
 0CF3 50                              PUSH EAX
 0CF4 8B 7D FC                        MOV EDI,[EBP-4]
 0CF7 8D 47 C9                        LEA EAX,[EDI-55]
 0CFA 50                              PUSH EAX
 0CFB 68 FF 00 00 00                  PUSH 255
 0D00 E8 05 00                        CALL '_IMPSTRCAT' (EXTERN 5)
 0D03 83 C4 0C                        ADD ESP,12
 0D06 8D 85 F8 FE FF FF               LEA EAX,[EBP-264]
 0D0C 50                              PUSH EAX
 0D0D B8 79 03 00 00                  MOV EAX,COT+889
 0D12 50                              PUSH EAX
 0D13 68 FF 00 00 00                  PUSH 255
 0D18 E8 05 00                        CALL '_IMPSTRCAT' (EXTERN 5)
 0D1B 83 C4 0C                        ADD ESP,12
 0D1E 8B 5D FC                        MOV EBX,[EBP-4]
 0D21 8D 83 C9 FE FF FF               LEA EAX,[EBX-311]
 0D27 50                              PUSH EAX
 0D28 8D 8D F8 FE FF FF               LEA ECX,[EBP-264]
 0D2E 51                              PUSH ECX
 0D2F 68 FF 00 00 00                  PUSH 255
 0D34 E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 0D37 83 C4 0C                        ADD ESP,12
 0D3A EB 00                           JMP L1176
        ssw(3):  msg = "File system error '".x."'"              ; -> es
 0D3C                      L1179  EQU $
 0D3C 8D 85 F8 FE FF FF               LEA EAX,[EBP-264]
 0D42 50                              PUSH EAX
 0D43 B8 7B 03 00 00                  MOV EAX,COT+891
 0D48 50                              PUSH EAX
 0D49 68 FF 00 00 00                  PUSH 255
 0D4E E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 0D51 83 C4 0C                        ADD ESP,12
 0D54 8D 85 F8 FE FF FF               LEA EAX,[EBP-264]
 0D5A 50                              PUSH EAX
 0D5B 8B 75 FC                        MOV ESI,[EBP-4]
 0D5E 8D 46 C9                        LEA EAX,[ESI-55]
 0D61 50                              PUSH EAX
 0D62 68 FF 00 00 00                  PUSH 255
 0D67 E8 05 00                        CALL '_IMPSTRCAT' (EXTERN 5)
 0D6A 83 C4 0C                        ADD ESP,12
 0D6D 8D 85 F8 FE FF FF               LEA EAX,[EBP-264]
 0D73 50                              PUSH EAX
 0D74 B8 8F 03 00 00                  MOV EAX,COT+911
 0D79 50                              PUSH EAX
 0D7A 68 FF 00 00 00                  PUSH 255
 0D7F E8 05 00                        CALL '_IMPSTRCAT' (EXTERN 5)
 0D82 83 C4 0C                        ADD ESP,12
 0D85 8B 7D FC                        MOV EDI,[EBP-4]
 0D88 8D 87 C9 FE FF FF               LEA EAX,[EDI-311]
 0D8E 50                              PUSH EAX
 0D8F 8D 8D F8 FE FF FF               LEA ECX,[EBP-264]
 0D95 51                              PUSH ECX
 0D96 68 FF 00 00 00                  PUSH 255
 0D9B E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 0D9E 83 C4 0C                        ADD ESP,12
 0DA1 EB 00                           JMP L1176
        ssw(4):  msg = "Input stream '".x."' has not been opened"  ; -> es
 0DA3                      L1180  EQU $
 0DA3 8D 85 F8 FE FF FF               LEA EAX,[EBP-264]
 0DA9 50                              PUSH EAX
 0DAA B8 91 03 00 00                  MOV EAX,COT+913
 0DAF 50                              PUSH EAX
 0DB0 68 FF 00 00 00                  PUSH 255
 0DB5 E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 0DB8 83 C4 0C                        ADD ESP,12
 0DBB 8D 85 F8 FE FF FF               LEA EAX,[EBP-264]
 0DC1 50                              PUSH EAX
 0DC2 8B 5D FC                        MOV EBX,[EBP-4]
 0DC5 8D 43 C9                        LEA EAX,[EBX-55]
 0DC8 50                              PUSH EAX
 0DC9 68 FF 00 00 00                  PUSH 255
 0DCE E8 05 00                        CALL '_IMPSTRCAT' (EXTERN 5)
 0DD1 83 C4 0C                        ADD ESP,12
 0DD4 8D 85 F8 FE FF FF               LEA EAX,[EBP-264]
 0DDA 50                              PUSH EAX
 0DDB B8 A0 03 00 00                  MOV EAX,COT+928
 0DE0 50                              PUSH EAX
 0DE1 68 FF 00 00 00                  PUSH 255
 0DE6 E8 05 00                        CALL '_IMPSTRCAT' (EXTERN 5)
 0DE9 83 C4 0C                        ADD ESP,12
 0DEC 8B 75 FC                        MOV ESI,[EBP-4]
 0DEF 8D 86 C9 FE FF FF               LEA EAX,[ESI-311]
 0DF5 50                              PUSH EAX
 0DF6 8D 8D F8 FE FF FF               LEA ECX,[EBP-264]
 0DFC 51                              PUSH ECX
 0DFD 68 FF 00 00 00                  PUSH 255
 0E02 E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 0E05 83 C4 0C                        ADD ESP,12
 0E08 EB 00                           JMP L1176
        ssw(5):  msg = "Output stream '".x."' has not been opened" ; -> es
 0E0A                      L1181  EQU $
 0E0A 8D 85 F8 FE FF FF               LEA EAX,[EBP-264]
 0E10 50                              PUSH EAX
 0E11 B8 B6 03 00 00                  MOV EAX,COT+950
 0E16 50                              PUSH EAX
 0E17 68 FF 00 00 00                  PUSH 255
 0E1C E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 0E1F 83 C4 0C                        ADD ESP,12
 0E22 8D 85 F8 FE FF FF               LEA EAX,[EBP-264]
 0E28 50                              PUSH EAX
 0E29 8B 7D FC                        MOV EDI,[EBP-4]
 0E2C 8D 47 C9                        LEA EAX,[EDI-55]
 0E2F 50                              PUSH EAX
 0E30 68 FF 00 00 00                  PUSH 255
 0E35 E8 05 00                        CALL '_IMPSTRCAT' (EXTERN 5)
 0E38 83 C4 0C                        ADD ESP,12
 0E3B 8D 85 F8 FE FF FF               LEA EAX,[EBP-264]
 0E41 50                              PUSH EAX
 0E42 B8 C6 03 00 00                  MOV EAX,COT+966
 0E47 50                              PUSH EAX
 0E48 68 FF 00 00 00                  PUSH 255
 0E4D E8 05 00                        CALL '_IMPSTRCAT' (EXTERN 5)
 0E50 83 C4 0C                        ADD ESP,12
 0E53 8B 5D FC                        MOV EBX,[EBP-4]
 0E56 8D 83 C9 FE FF FF               LEA EAX,[EBX-311]
 0E5C 50                              PUSH EAX
 0E5D 8D 8D F8 FE FF FF               LEA ECX,[EBP-264]
 0E63 51                              PUSH ECX
 0E64 68 FF 00 00 00                  PUSH 255
 0E69 E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 0E6C 83 C4 0C                        ADD ESP,12
 0E6F EB 00                           JMP L1176
        ssw(9):  msg = "Bad stream# '".x."'"                    ; -> es
 0E71                      L1182  EQU $
 0E71 8D 85 F8 FE FF FF               LEA EAX,[EBP-264]
 0E77 50                              PUSH EAX
 0E78 B8 DC 03 00 00                  MOV EAX,COT+988
 0E7D 50                              PUSH EAX
 0E7E 68 FF 00 00 00                  PUSH 255
 0E83 E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 0E86 83 C4 0C                        ADD ESP,12
 0E89 8D 85 F8 FE FF FF               LEA EAX,[EBP-264]
 0E8F 50                              PUSH EAX
 0E90 8B 75 FC                        MOV ESI,[EBP-4]
 0E93 8D 46 C9                        LEA EAX,[ESI-55]
 0E96 50                              PUSH EAX
 0E97 68 FF 00 00 00                  PUSH 255
 0E9C E8 05 00                        CALL '_IMPSTRCAT' (EXTERN 5)
 0E9F 83 C4 0C                        ADD ESP,12
 0EA2 8D 85 F8 FE FF FF               LEA EAX,[EBP-264]
 0EA8 50                              PUSH EAX
 0EA9 B8 EA 03 00 00                  MOV EAX,COT+1002
 0EAE 50                              PUSH EAX
 0EAF 68 FF 00 00 00                  PUSH 255
 0EB4 E8 05 00                        CALL '_IMPSTRCAT' (EXTERN 5)
 0EB7 83 C4 0C                        ADD ESP,12
 0EBA 8B 7D FC                        MOV EDI,[EBP-4]
 0EBD 8D 87 C9 FE FF FF               LEA EAX,[EDI-311]
 0EC3 50                              PUSH EAX
 0EC4 8D 8D F8 FE FF FF               LEA ECX,[EBP-264]
 0ECA 51                              PUSH ECX
 0ECB 68 FF 00 00 00                  PUSH 255
 0ED0 E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 0ED3 83 C4 0C                        ADD ESP,12
 0ED6 EB 00                           JMP L1176
        ssw(10): msg = "Invalid filename for stream# '".x."'"   ; -> es
 0ED8                      L1183  EQU $
 0ED8 8D 85 F8 FE FF FF               LEA EAX,[EBP-264]
 0EDE 50                              PUSH EAX
 0EDF B8 EC 03 00 00                  MOV EAX,COT+1004
 0EE4 50                              PUSH EAX
 0EE5 68 FF 00 00 00                  PUSH 255
 0EEA E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 0EED 83 C4 0C                        ADD ESP,12
 0EF0 8D 85 F8 FE FF FF               LEA EAX,[EBP-264]
 0EF6 50                              PUSH EAX
 0EF7 8B 5D FC                        MOV EBX,[EBP-4]
 0EFA 8D 43 C9                        LEA EAX,[EBX-55]
 0EFD 50                              PUSH EAX
 0EFE 68 FF 00 00 00                  PUSH 255
 0F03 E8 05 00                        CALL '_IMPSTRCAT' (EXTERN 5)
 0F06 83 C4 0C                        ADD ESP,12
 0F09 8D 85 F8 FE FF FF               LEA EAX,[EBP-264]
 0F0F 50                              PUSH EAX
 0F10 B8 0B 04 00 00                  MOV EAX,COT+1035
 0F15 50                              PUSH EAX
 0F16 68 FF 00 00 00                  PUSH 255
 0F1B E8 05 00                        CALL '_IMPSTRCAT' (EXTERN 5)
 0F1E 83 C4 0C                        ADD ESP,12
 0F21 8B 75 FC                        MOV ESI,[EBP-4]
 0F24 8D 86 C9 FE FF FF               LEA EAX,[ESI-311]
 0F2A 50                              PUSH EAX
 0F2B 8D 8D F8 FE FF FF               LEA ECX,[EBP-264]
 0F31 51                              PUSH ECX
 0F32 68 FF 00 00 00                  PUSH 255
 0F37 E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 0F3A 83 C4 0C                        ADD ESP,12
 0F3D EB 00                           JMP L1176
        ssw(*):  msg = "Input/Output error ".eventmsg           ; -> es
 0F3F                      L1184  EQU $
 0F3F                      L1185  EQU $
 0F3F                      L1186  EQU $
 0F3F                      L1187  EQU $
 0F3F                      L1188  EQU $
 0F3F                      L1189  EQU $
 0F3F                      L1190  EQU $
 0F3F                      L1191  EQU $
 0F3F 8D 85 F8 FE FF FF               LEA EAX,[EBP-264]
 0F45 50                              PUSH EAX
 0F46 B8 0D 04 00 00                  MOV EAX,COT+1037
 0F4B 50                              PUSH EAX
 0F4C 68 FF 00 00 00                  PUSH 255
 0F51 E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 0F54 83 C4 0C                        ADD ESP,12
 0F57 8D 85 F8 FE FF FF               LEA EAX,[EBP-264]
 0F5D 50                              PUSH EAX
 0F5E 8B 7D FC                        MOV EDI,[EBP-4]
 0F61 8D 87 C9 FD FF FF               LEA EAX,[EDI-567]
 0F67 50                              PUSH EAX
 0F68 68 FF 00 00 00                  PUSH 255
 0F6D E8 05 00                        CALL '_IMPSTRCAT' (EXTERN 5)
 0F70 83 C4 0C                        ADD ESP,12
 0F73 8B 5D FC                        MOV EBX,[EBP-4]
 0F76 8D 83 C9 FE FF FF               LEA EAX,[EBX-311]
 0F7C 50                              PUSH EAX
 0F7D 8D 8D F8 FE FF FF               LEA ECX,[EBP-264]
 0F83 51                              PUSH ECX
 0F84 68 FF 00 00 00                  PUSH 255
 0F89 E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 0F8C 83 C4 0C                        ADD ESP,12
 0F8F EB 00                           JMP L1176
        es:
 0F91                      L1176  EQU $
        %end
 0F91 C9                              LEAVE
 0F92 C3                              RET
 0F93                      L1174  EQU $
        -> esac
 0F93 EB 00                           JMP L1009
    esw(10):
 0F95                      L1192  EQU $
        %begin
 0F95 E8 00 00                        CALL 'MESSAGE' (INTERNAL L1193 )
 0F98 EB 00                           JMP L1194
 0F9A                      L1193  EQU $
 0F9A C8 00 00 02                     ENTER 0000,2
            %switch ssw(0:15)
            -> ssw(sub&16_f)
 0F9E 8B 75 FC                        MOV ESI,[EBP-4]
 0FA1 8B 46 0C                        MOV EAX,[ESI+12]
 0FA4 25 0F 00 00 00                  AND EAX,15
 0FA9 C1 E0 02                        SHL EAX,2
 0FAC 89 C7                           MOV EDI,EAX
 0FAE FF A7 80 02 00 00               JMP WORD [EDI+SWTAB+640]
        ssw(1): msg = "Incorrect command line parameter count. Argc=".x; -> es
 0FB4                      L1195  EQU $
 0FB4 8D 85 F8 FE FF FF               LEA EAX,[EBP-264]
 0FBA 50                              PUSH EAX
 0FBB B8 21 04 00 00                  MOV EAX,COT+1057
 0FC0 50                              PUSH EAX
 0FC1 68 FF 00 00 00                  PUSH 255
 0FC6 E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 0FC9 83 C4 0C                        ADD ESP,12
 0FCC 8D 85 F8 FE FF FF               LEA EAX,[EBP-264]
 0FD2 50                              PUSH EAX
 0FD3 8B 5D FC                        MOV EBX,[EBP-4]
 0FD6 8D 43 C9                        LEA EAX,[EBX-55]
 0FD9 50                              PUSH EAX
 0FDA 68 FF 00 00 00                  PUSH 255
 0FDF E8 05 00                        CALL '_IMPSTRCAT' (EXTERN 5)
 0FE2 83 C4 0C                        ADD ESP,12
 0FE5 8B 75 FC                        MOV ESI,[EBP-4]
 0FE8 8D 86 C9 FE FF FF               LEA EAX,[ESI-311]
 0FEE 50                              PUSH EAX
 0FEF 8D 8D F8 FE FF FF               LEA ECX,[EBP-264]
 0FF5 51                              PUSH ECX
 0FF6 68 FF 00 00 00                  PUSH 255
 0FFB E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 0FFE 83 C4 0C                        ADD ESP,12
 1001 EB 00                           JMP L1196
        ssw(*): msg = "Library procedure error ".eventmsg; -> es
 1003                      L1197  EQU $
 1003                      L1198  EQU $
 1003                      L1199  EQU $
 1003                      L1200  EQU $
 1003                      L1201  EQU $
 1003                      L1202  EQU $
 1003                      L1203  EQU $
 1003                      L1204  EQU $
 1003                      L1205  EQU $
 1003                      L1206  EQU $
 1003                      L1207  EQU $
 1003                      L1208  EQU $
 1003                      L1209  EQU $
 1003                      L1210  EQU $
 1003                      L1211  EQU $
 1003 8D 85 F8 FE FF FF               LEA EAX,[EBP-264]
 1009 50                              PUSH EAX
 100A B8 4F 04 00 00                  MOV EAX,COT+1103
 100F 50                              PUSH EAX
 1010 68 FF 00 00 00                  PUSH 255
 1015 E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 1018 83 C4 0C                        ADD ESP,12
 101B 8D 85 F8 FE FF FF               LEA EAX,[EBP-264]
 1021 50                              PUSH EAX
 1022 8B 7D FC                        MOV EDI,[EBP-4]
 1025 8D 87 C9 FD FF FF               LEA EAX,[EDI-567]
 102B 50                              PUSH EAX
 102C 68 FF 00 00 00                  PUSH 255
 1031 E8 05 00                        CALL '_IMPSTRCAT' (EXTERN 5)
 1034 83 C4 0C                        ADD ESP,12
 1037 8B 5D FC                        MOV EBX,[EBP-4]
 103A 8D 83 C9 FE FF FF               LEA EAX,[EBX-311]
 1040 50                              PUSH EAX
 1041 8D 8D F8 FE FF FF               LEA ECX,[EBP-264]
 1047 51                              PUSH ECX
 1048 68 FF 00 00 00                  PUSH 255
 104D E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 1050 83 C4 0C                        ADD ESP,12
 1053 EB 00                           JMP L1196
        es:
 1055                      L1196  EQU $
        %end
 1055 C9                              LEAVE
 1056 C3                              RET
 1057                      L1194  EQU $
        -> esac
 1057 EB 00                           JMP L1009
    esw(*):
 1059                      L1212  EQU $
 1059                      L1213  EQU $
 1059                      L1214  EQU $
 1059                      L1215  EQU $
 1059                      L1216  EQU $
        msg = "Signal ".eventmsg." called."; -> esac
 1059 8D 85 C8 FC FF FF               LEA EAX,[EBP-824]
 105F 50                              PUSH EAX
 1060 B8 68 04 00 00                  MOV EAX,COT+1128
 1065 50                              PUSH EAX
 1066 68 FF 00 00 00                  PUSH 255
 106B E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 106E 83 C4 0C                        ADD ESP,12
 1071 8D 85 C8 FC FF FF               LEA EAX,[EBP-824]
 1077 50                              PUSH EAX
 1078 8D 85 C9 FD FF FF               LEA EAX,[EBP-567]
 107E 50                              PUSH EAX
 107F 68 FF 00 00 00                  PUSH 255
 1084 E8 05 00                        CALL '_IMPSTRCAT' (EXTERN 5)
 1087 83 C4 0C                        ADD ESP,12
 108A 8D 85 C8 FC FF FF               LEA EAX,[EBP-824]
 1090 50                              PUSH EAX
 1091 B8 70 04 00 00                  MOV EAX,COT+1136
 1096 50                              PUSH EAX
 1097 68 FF 00 00 00                  PUSH 255
 109C E8 05 00                        CALL '_IMPSTRCAT' (EXTERN 5)
 109F 83 C4 0C                        ADD ESP,12
 10A2 8D 85 C9 FE FF FF               LEA EAX,[EBP-311]
 10A8 50                              PUSH EAX
 10A9 8D 8D C8 FC FF FF               LEA ECX,[EBP-824]
 10AF 51                              PUSH ECX
 10B0 68 FF 00 00 00                  PUSH 255
 10B5 E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 10B8 83 C4 0C                        ADD ESP,12
 10BB EB 00                           JMP L1009
    esac:
 10BD                      L1009  EQU $

        lastevent_event = event
 10BD 8B 45 10                        MOV EAX,[EBP+16]
 10C0 89 05 00 00 00 00               MOV [DATA+0000],EAX
        lastevent_sub = sub
 10C6 8B 45 0C                        MOV EAX,[EBP+12]
 10C9 89 05 04 00 00 00               MOV [DATA+0004],EAX
        lastevent_info = info
 10CF 8B 45 08                        MOV EAX,[EBP+8]
 10D2 89 05 08 00 00 00               MOV [DATA+0008],EAX
        lastevent_message = msg
 10D8 B8 0C 00 00 00                  MOV EAX,DATA+12
 10DD 50                              PUSH EAX
 10DE 8D 8D C9 FE FF FF               LEA ECX,[EBP-311]
 10E4 51                              PUSH ECX
 10E5 68 FF 00 00 00                  PUSH 255
 10EA E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 10ED 83 C4 0C                        ADD ESP,12

    %end
 10F0 C9                              LEAVE
 10F1 C3                              RET

    %external %routine messageFormatA( %integer message id )
 10F2                      L1217  EQU $
 10F2 C8 00 00 01                     ENTER 0000,1
        %switch mess(1:8)
        %string(16) evt,sub,xtr

        evt = itos(lastevent_event,0)
 10F6 FF 35 00 00 00 00               PUSH WORD [DATA+0000]
 10FC 6A 00                           PUSH 0
 10FE 8D 85 C8 FE FF FF               LEA EAX,[EBP-312]
 1104 50                              PUSH EAX
 1105 E8 39 00                        CALL 'ITOS' (EXTERN 57)
 1108 83 C4 0C                        ADD ESP,12
 110B 8D 45 EB                        LEA EAX,[EBP-21]
 110E 50                              PUSH EAX
 110F 8D 8D C8 FE FF FF               LEA ECX,[EBP-312]
 1115 51                              PUSH ECX
 1116 6A 10                           PUSH 16
 1118 E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 111B 83 C4 0C                        ADD ESP,12
        sub = itos(lastevent_sub,0)
 111E FF 35 04 00 00 00               PUSH WORD [DATA+0004]
 1124 6A 00                           PUSH 0
 1126 8D 85 C8 FE FF FF               LEA EAX,[EBP-312]
 112C 50                              PUSH EAX
 112D E8 39 00                        CALL 'ITOS' (EXTERN 57)
 1130 83 C4 0C                        ADD ESP,12
 1133 8D 45 DA                        LEA EAX,[EBP-38]
 1136 50                              PUSH EAX
 1137 8D 8D C8 FE FF FF               LEA ECX,[EBP-312]
 113D 51                              PUSH ECX
 113E 6A 10                           PUSH 16
 1140 E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 1143 83 C4 0C                        ADD ESP,12
        xtr = itos(lastevent_info,0)
 1146 FF 35 08 00 00 00               PUSH WORD [DATA+0008]
 114C 6A 00                           PUSH 0
 114E 8D 85 C8 FE FF FF               LEA EAX,[EBP-312]
 1154 50                              PUSH EAX
 1155 E8 39 00                        CALL 'ITOS' (EXTERN 57)
 1158 83 C4 0C                        ADD ESP,12
 115B 8D 45 C9                        LEA EAX,[EBP-55]
 115E 50                              PUSH EAX
 115F 8D 8D C8 FE FF FF               LEA ECX,[EBP-312]
 1165 51                              PUSH ECX
 1166 6A 10                           PUSH 16
 1168 E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 116B 83 C4 0C                        ADD ESP,12

        selectoutput(0)
 116E 6A 00                           PUSH 0
 1170 E8 1E 00                        CALL 'SELECTOUTPUT' (EXTERN 30)
 1173 83 C4 04                        ADD ESP,4
        newline
 1176 E8 33 00                        CALL 'NEWLINE' (EXTERN 51)
        printstring( "IMPRTL: " )
 1179 81 EC 00 01 00 00               SUB ESP,256
 117F 89 E0                           MOV EAX,ESP
 1181 50                              PUSH EAX
 1182 B8 8C 04 00 00                  MOV EAX,COT+1164
 1187 50                              PUSH EAX
 1188 68 FF 00 00 00                  PUSH 255
 118D E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 1190 83 C4 0C                        ADD ESP,12
 1193 E8 2B 00                        CALL 'PRINTSTRING' (EXTERN 43)
 1196 81 C4 00 01 00 00               ADD ESP,256
        -> mess(message id)
 119C 8B 45 08                        MOV EAX,[EBP+8]
 119F C1 E0 02                        SHL EAX,2
 11A2 89 C6                           MOV ESI,EAX
 11A4 FF A6 BC 02 00 00               JMP WORD [ESI+SWTAB+700]
    mess(1): printstring( "SHOWEVENT: " )
 11AA                      L1218  EQU $
 11AA 81 EC 00 01 00 00               SUB ESP,256
 11B0 89 E0                           MOV EAX,ESP
 11B2 50                              PUSH EAX
 11B3 B8 95 04 00 00                  MOV EAX,COT+1173
 11B8 50                              PUSH EAX
 11B9 68 FF 00 00 00                  PUSH 255
 11BE E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 11C1 83 C4 0C                        ADD ESP,12
 11C4 E8 2B 00                        CALL 'PRINTSTRING' (EXTERN 43)
 11C7 81 C4 00 01 00 00               ADD ESP,256
             printstring( lastevent_message )
 11CD 81 EC 00 01 00 00               SUB ESP,256
 11D3 89 E0                           MOV EAX,ESP
 11D5 50                              PUSH EAX
 11D6 B8 0C 00 00 00                  MOV EAX,DATA+12
 11DB 50                              PUSH EAX
 11DC 68 FF 00 00 00                  PUSH 255
 11E1 E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 11E4 83 C4 0C                        ADD ESP,12
 11E7 E8 2B 00                        CALL 'PRINTSTRING' (EXTERN 43)
 11EA 81 C4 00 01 00 00               ADD ESP,256
             -> esac
 11F0 EB 00                           JMP L1219
    mess(2): printstring( "Start of Stack dump" )
 11F2                      L1220  EQU $
 11F2 81 EC 00 01 00 00               SUB ESP,256
 11F8 89 E0                           MOV EAX,ESP
 11FA 50                              PUSH EAX
 11FB B8 A1 04 00 00                  MOV EAX,COT+1185
 1200 50                              PUSH EAX
 1201 68 FF 00 00 00                  PUSH 255
 1206 E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 1209 83 C4 0C                        ADD ESP,12
 120C E8 2B 00                        CALL 'PRINTSTRING' (EXTERN 43)
 120F 81 C4 00 01 00 00               ADD ESP,256
             -> esac
 1215 EB 00                           JMP L1219
    mess(3): printstring( "Signal No handler found for signalled event (" )
 1217                      L1221  EQU $
 1217 81 EC 00 01 00 00               SUB ESP,256
 121D 89 E0                           MOV EAX,ESP
 121F 50                              PUSH EAX
 1220 B8 B5 04 00 00                  MOV EAX,COT+1205
 1225 50                              PUSH EAX
 1226 68 FF 00 00 00                  PUSH 255
 122B E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 122E 83 C4 0C                        ADD ESP,12
 1231 E8 2B 00                        CALL 'PRINTSTRING' (EXTERN 43)
 1234 81 C4 00 01 00 00               ADD ESP,256
             printstring( evt )
 123A 81 EC 00 01 00 00               SUB ESP,256
 1240 89 E0                           MOV EAX,ESP
 1242 50                              PUSH EAX
 1243 8D 45 EB                        LEA EAX,[EBP-21]
 1246 50                              PUSH EAX
 1247 68 FF 00 00 00                  PUSH 255
 124C E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 124F 83 C4 0C                        ADD ESP,12
 1252 E8 2B 00                        CALL 'PRINTSTRING' (EXTERN 43)
 1255 81 C4 00 01 00 00               ADD ESP,256
             printstring( ", " )
 125B 81 EC 00 01 00 00               SUB ESP,256
 1261 89 E0                           MOV EAX,ESP
 1263 50                              PUSH EAX
 1264 B8 E3 04 00 00                  MOV EAX,COT+1251
 1269 50                              PUSH EAX
 126A 68 FF 00 00 00                  PUSH 255
 126F E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 1272 83 C4 0C                        ADD ESP,12
 1275 E8 2B 00                        CALL 'PRINTSTRING' (EXTERN 43)
 1278 81 C4 00 01 00 00               ADD ESP,256
             printstring( sub )
 127E 81 EC 00 01 00 00               SUB ESP,256
 1284 89 E0                           MOV EAX,ESP
 1286 50                              PUSH EAX
 1287 8D 45 DA                        LEA EAX,[EBP-38]
 128A 50                              PUSH EAX
 128B 68 FF 00 00 00                  PUSH 255
 1290 E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 1293 83 C4 0C                        ADD ESP,12
 1296 E8 2B 00                        CALL 'PRINTSTRING' (EXTERN 43)
 1299 81 C4 00 01 00 00               ADD ESP,256
             printstring( ", " )
 129F 81 EC 00 01 00 00               SUB ESP,256
 12A5 89 E0                           MOV EAX,ESP
 12A7 50                              PUSH EAX
 12A8 B8 E6 04 00 00                  MOV EAX,COT+1254
 12AD 50                              PUSH EAX
 12AE 68 FF 00 00 00                  PUSH 255
 12B3 E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 12B6 83 C4 0C                        ADD ESP,12
 12B9 E8 2B 00                        CALL 'PRINTSTRING' (EXTERN 43)
 12BC 81 C4 00 01 00 00               ADD ESP,256
             printstring( xtr )
 12C2 81 EC 00 01 00 00               SUB ESP,256
 12C8 89 E0                           MOV EAX,ESP
 12CA 50                              PUSH EAX
 12CB 8D 45 C9                        LEA EAX,[EBP-55]
 12CE 50                              PUSH EAX
 12CF 68 FF 00 00 00                  PUSH 255
 12D4 E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 12D7 83 C4 0C                        ADD ESP,12
 12DA E8 2B 00                        CALL 'PRINTSTRING' (EXTERN 43)
 12DD 81 C4 00 01 00 00               ADD ESP,256
             printstring( ")." )
 12E3 81 EC 00 01 00 00               SUB ESP,256
 12E9 89 E0                           MOV EAX,ESP
 12EB 50                              PUSH EAX
 12EC B8 E9 04 00 00                  MOV EAX,COT+1257
 12F1 50                              PUSH EAX
 12F2 68 FF 00 00 00                  PUSH 255
 12F7 E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 12FA 83 C4 0C                        ADD ESP,12
 12FD E8 2B 00                        CALL 'PRINTSTRING' (EXTERN 43)
 1300 81 C4 00 01 00 00               ADD ESP,256
             -> esac
 1306 EB 00                           JMP L1219
    mess(4): printstring( "Possible stack error?" )
 1308                      L1222  EQU $
 1308 81 EC 00 01 00 00               SUB ESP,256
 130E 89 E0                           MOV EAX,ESP
 1310 50                              PUSH EAX
 1311 B8 EC 04 00 00                  MOV EAX,COT+1260
 1316 50                              PUSH EAX
 1317 68 FF 00 00 00                  PUSH 255
 131C E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 131F 83 C4 0C                        ADD ESP,12
 1322 E8 2B 00                        CALL 'PRINTSTRING' (EXTERN 43)
 1325 81 C4 00 01 00 00               ADD ESP,256
             -> esac
 132B EB 00                           JMP L1219
    mess(5): printstring( "End of Stack dump" )
 132D                      L1223  EQU $
 132D 81 EC 00 01 00 00               SUB ESP,256
 1333 89 E0                           MOV EAX,ESP
 1335 50                              PUSH EAX
 1336 B8 02 05 00 00                  MOV EAX,COT+1282
 133B 50                              PUSH EAX
 133C 68 FF 00 00 00                  PUSH 255
 1341 E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 1344 83 C4 0C                        ADD ESP,12
 1347 E8 2B 00                        CALL 'PRINTSTRING' (EXTERN 43)
 134A 81 C4 00 01 00 00               ADD ESP,256
             -> esac
 1350 EB 00                           JMP L1219
    mess(6): printstring( "Stopping program with exit status=" )
 1352                      L1224  EQU $
 1352 81 EC 00 01 00 00               SUB ESP,256
 1358 89 E0                           MOV EAX,ESP
 135A 50                              PUSH EAX
 135B B8 14 05 00 00                  MOV EAX,COT+1300
 1360 50                              PUSH EAX
 1361 68 FF 00 00 00                  PUSH 255
 1366 E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 1369 83 C4 0C                        ADD ESP,12
 136C E8 2B 00                        CALL 'PRINTSTRING' (EXTERN 43)
 136F 81 C4 00 01 00 00               ADD ESP,256
             printstring( sub )
 1375 81 EC 00 01 00 00               SUB ESP,256
 137B 89 E0                           MOV EAX,ESP
 137D 50                              PUSH EAX
 137E 8D 45 DA                        LEA EAX,[EBP-38]
 1381 50                              PUSH EAX
 1382 68 FF 00 00 00                  PUSH 255
 1387 E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 138A 83 C4 0C                        ADD ESP,12
 138D E8 2B 00                        CALL 'PRINTSTRING' (EXTERN 43)
 1390 81 C4 00 01 00 00               ADD ESP,256
             -> esac
 1396 EB 00                           JMP L1219

    mess(*): printstring( "Unknown message# given." )
 1398                      L1225  EQU $
 1398                      L1226  EQU $
 1398 81 EC 00 01 00 00               SUB ESP,256
 139E 89 E0                           MOV EAX,ESP
 13A0 50                              PUSH EAX
 13A1 B8 37 05 00 00                  MOV EAX,COT+1335
 13A6 50                              PUSH EAX
 13A7 68 FF 00 00 00                  PUSH 255
 13AC E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 13AF 83 C4 0C                        ADD ESP,12
 13B2 E8 2B 00                        CALL 'PRINTSTRING' (EXTERN 43)
 13B5 81 C4 00 01 00 00               ADD ESP,256
             -> esac
 13BB EB 00                           JMP L1219
    esac:
 13BD                      L1219  EQU $
        newline
 13BD E8 33 00                        CALL 'NEWLINE' (EXTERN 51)
    %end
 13C0 C9                              LEAVE
 13C1 C3                              RET

    %external %routine messageFormatB( %integer loc )
 13C2                      L1227  EQU $
 13C2 C8 00 00 01                     ENTER 0000,1

        selectoutput(0)
 13C6 6A 00                           PUSH 0
 13C8 E8 1E 00                        CALL 'SELECTOUTPUT' (EXTERN 30)
 13CB 83 C4 04                        ADD ESP,4
        printstring( "IMPRTL: " )
 13CE 81 EC 00 01 00 00               SUB ESP,256
 13D4 89 E0                           MOV EAX,ESP
 13D6 50                              PUSH EAX
 13D7 B8 4F 05 00 00                  MOV EAX,COT+1359
 13DC 50                              PUSH EAX
 13DD 68 FF 00 00 00                  PUSH 255
 13E2 E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 13E5 83 C4 0C                        ADD ESP,12
 13E8 E8 2B 00                        CALL 'PRINTSTRING' (EXTERN 43)
 13EB 81 C4 00 01 00 00               ADD ESP,256
        printstring( "Called from (x'" )
 13F1 81 EC 00 01 00 00               SUB ESP,256
 13F7 89 E0                           MOV EAX,ESP
 13F9 50                              PUSH EAX
 13FA B8 58 05 00 00                  MOV EAX,COT+1368
 13FF 50                              PUSH EAX
 1400 68 FF 00 00 00                  PUSH 255
 1405 E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 1408 83 C4 0C                        ADD ESP,12
 140B E8 2B 00                        CALL 'PRINTSTRING' (EXTERN 43)
 140E 81 C4 00 01 00 00               ADD ESP,256
        printstring( int2ascii(loc,16,0) )
 1414 FF 75 08                        PUSH WORD [EBP+8]
 1417 6A 10                           PUSH 16
 1419 6A 00                           PUSH 0
 141B 8D 85 FC FE FF FF               LEA EAX,[EBP-260]
 1421 50                              PUSH EAX
 1422 E8 41 00                        CALL 'INT2ASCII' (EXTERN 65)
 1425 83 C4 10                        ADD ESP,16
 1428 81 EC 00 01 00 00               SUB ESP,256
 142E 89 E0                           MOV EAX,ESP
 1430 50                              PUSH EAX
 1431 8D 85 FC FE FF FF               LEA EAX,[EBP-260]
 1437 50                              PUSH EAX
 1438 68 FF 00 00 00                  PUSH 255
 143D E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 1440 83 C4 0C                        ADD ESP,12
 1443 E8 2B 00                        CALL 'PRINTSTRING' (EXTERN 43)
 1446 81 C4 00 01 00 00               ADD ESP,256
        printstring( "') in '" )
 144C 81 EC 00 01 00 00               SUB ESP,256
 1452 89 E0                           MOV EAX,ESP
 1454 50                              PUSH EAX
 1455 B8 68 05 00 00                  MOV EAX,COT+1384
 145A 50                              PUSH EAX
 145B 68 FF 00 00 00                  PUSH 255
 1460 E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 1463 83 C4 0C                        ADD ESP,12
 1466 E8 2B 00                        CALL 'PRINTSTRING' (EXTERN 43)
 1469 81 C4 00 01 00 00               ADD ESP,256
        printstring( handler name( loc ) )
 146F FF 75 08                        PUSH WORD [EBP+8]
 1472 8D 85 EC FE FF FF               LEA EAX,[EBP-276]
 1478 50                              PUSH EAX
 1479 E8 5D 00                        CALL 'HANDLERNAME' (EXTERN 93)
 147C 83 C4 08                        ADD ESP,8
 147F 81 EC 00 01 00 00               SUB ESP,256
 1485 89 E0                           MOV EAX,ESP
 1487 50                              PUSH EAX
 1488 8D 85 EC FE FF FF               LEA EAX,[EBP-276]
 148E 50                              PUSH EAX
 148F 68 FF 00 00 00                  PUSH 255
 1494 E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 1497 83 C4 0C                        ADD ESP,12
 149A E8 2B 00                        CALL 'PRINTSTRING' (EXTERN 43)
 149D 81 C4 00 01 00 00               ADD ESP,256
        printstring( "'" )
 14A3 81 EC 00 01 00 00               SUB ESP,256
 14A9 89 E0                           MOV EAX,ESP
 14AB 50                              PUSH EAX
 14AC B8 70 05 00 00                  MOV EAX,COT+1392
 14B1 50                              PUSH EAX
 14B2 68 FF 00 00 00                  PUSH 255
 14B7 E8 03 00                        CALL '_IMPSTRCPY' (EXTERN 3)
 14BA 83 C4 0C                        ADD ESP,12
 14BD E8 2B 00                        CALL 'PRINTSTRING' (EXTERN 43)
 14C0 81 C4 00 01 00 00               ADD ESP,256
        newline
 14C6 E8 33 00                        CALL 'NEWLINE' (EXTERN 51)
    %end
 14C9 C9                              LEAVE
 14CA C3                              RET

{------------------------------------------------------------------------------}
%endoffile
      _TEXT  ENDS
      CONST  SEGMENT WORD PUBLIC 'CONST'
 0000 01 00                           db 01,00 ; ..
 0002 00 00                           db 00,00 ; ..
 0004 00 00                           db 00,00 ; ..
 0006 00 00                           db 00,00 ; ..
 0008 0F 00                           db 0F,00 ; ..
 000A 00 00                           db 00,00 ; ..
 000C 00 00                           db 00,00 ; ..
 000E 00 00                           db 00,00 ; ..
 0010 01 28                           db 01,28 ; .(
 0012 01 2C                           db 01,2C ; .,
 0014 01 2C                           db 01,2C ; .,
 0016 01 29                           db 01,29 ; .)
 0018 20 41                           db 20,41 ; .A
 001A 62 61                           db 62,61 ; ba
 001C 6E 64                           db 6E,64 ; nd
 001E 6F 6E                           db 6F,6E ; on
 0020 20 70                           db 20,70 ; .p
 0022 72 6F                           db 72,6F ; ro
 0024 67 72                           db 67,72 ; gr
 0026 61 6D                           db 61,6D ; am
 0028 2C 20                           db 2C,20 ; ,.
 002A 73 61                           db 73,61 ; sa
 002C 75 76                           db 75,76 ; uv
 002E 65 20                           db 65,20 ; e.
 0030 71 75                           db 71,75 ; qu
 0032 69 20                           db 69,20 ; i.
 0034 70 75                           db 70,75 ; pu
 0036 65 74                           db 65,74 ; et
 0038 21 05                           db 21,05 ; !.
 003A 25 73                           db 25,73 ; %s
 003C 74 6F                           db 74,6F ; to
 003E 70 16                           db 70,16 ; p.
 0040 55 73                           db 55,73 ; Us
 0042 65 72                           db 65,72 ; er
 0044 20 67                           db 20,67 ; .g
 0046 65 6E                           db 65,6E ; en
 0048 65 72                           db 65,72 ; er
 004A 61 74                           db 61,74 ; at
 004C 65 64                           db 65,64 ; ed
 004E 20 65                           db 20,65 ; .e
 0050 72 72                           db 72,72 ; rr
 0052 6F 72                           db 6F,72 ; or
 0054 2E 20                           db 2E,20 ; ..
 0056 10 49                           db 10,49 ; .I
 0058 6E 74                           db 6E,74 ; nt
 005A 65 67                           db 65,67 ; eg
 005C 65 72                           db 65,72 ; er
 005E 20 6F                           db 20,6F ; .o
 0060 76 65                           db 76,65 ; ve
 0062 72 66                           db 72,66 ; rf
 0064 6C 6F                           db 6C,6F ; lo
 0066 77 0D                           db 77,0D ; w.
 0068 52 65                           db 52,65 ; Re
 006A 61 6C                           db 61,6C ; al
 006C 20 6F                           db 20,6F ; .o
 006E 76 65                           db 76,65 ; ve
 0070 72 66                           db 72,66 ; rf
 0072 6C 6F                           db 6C,6F ; lo
 0074 77 0F                           db 77,0F ; w.
 0076 53 74                           db 53,74 ; St
 0078 72 69                           db 72,69 ; ri
 007A 6E 67                           db 6E,67 ; ng
 007C 20 6F                           db 20,6F ; .o
 007E 76 65                           db 76,65 ; ve
 0080 72 66                           db 72,66 ; rf
 0082 6C 6F                           db 6C,6F ; lo
 0084 77 10                           db 77,10 ; w.
 0086 44 69                           db 44,69 ; Di
 0088 76 69                           db 76,69 ; vi
 008A 73 69                           db 73,69 ; si
 008C 6F 6E                           db 6F,6E ; on
 008E 20 62                           db 20,62 ; .b
 0090 79 20                           db 79,20 ; y.
 0092 7A 65                           db 7A,65 ; ze
 0094 72 6F                           db 72,6F ; ro
 0096 0A 54                           db 0A,54 ; .T
 0098 72 75                           db 72,75 ; ru
 009A 6E 63                           db 6E,63 ; nc
 009C 61 74                           db 61,74 ; at
 009E 69 6F                           db 69,6F ; io
 00A0 6E 09                           db 6E,09 ; n.
 00A2 4F 76                           db 4F,76 ; Ov
 00A4 65 72                           db 65,72 ; er
 00A6 66 6C                           db 66,6C ; fl
 00A8 6F 77                           db 6F,77 ; ow
 00AA 20 10                           db 20,10 ; ..
 00AC 4E 6F                           db 4E,6F ; No
 00AE 74 20                           db 74,20 ; t.
 00B0 65 6E                           db 65,6E ; en
 00B2 6F 75                           db 6F,75 ; ou
 00B4 67 68                           db 67,68 ; gh
 00B6 20 73                           db 20,73 ; .s
 00B8 74 6F                           db 74,6F ; to
 00BA 72 65                           db 72,65 ; re
 00BC 0F 4F                           db 0F,4F ; .O
 00BE 75 74                           db 75,74 ; ut
 00C0 70 75                           db 70,75 ; pu
 00C2 74 20                           db 74,20 ; t.
 00C4 65 78                           db 65,78 ; ex
 00C6 63 65                           db 63,65 ; ce
 00C8 65 64                           db 65,64 ; ed
 00CA 65 64                           db 65,64 ; ed
 00CC 0D 54                           db 0D,54 ; .T
 00CE 69 6D                           db 69,6D ; im
 00D0 65 20                           db 65,20 ; e.
 00D2 65 78                           db 65,78 ; ex
 00D4 63 65                           db 63,65 ; ce
 00D6 65 64                           db 65,64 ; ed
 00D8 65 64                           db 65,64 ; ed
 00DA 10 45                           db 10,45 ; .E
 00DC 78 63                           db 78,63 ; xc
 00DE 65 73                           db 65,73 ; es
 00E0 73 20                           db 73,20 ; s.
 00E2 52 65                           db 52,65 ; Re
 00E4 73 6F                           db 73,6F ; so
 00E6 75 72                           db 75,72 ; ur
 00E8 63 65                           db 63,65 ; ce
 00EA 20 15                           db 20,15 ; ..
 00EC 44 61                           db 44,61 ; Da
 00EE 74 61                           db 74,61 ; ta
 00F0 20 65                           db 20,65 ; .e
 00F2 72 72                           db 72,72 ; rr
 00F4 6F 72                           db 6F,72 ; or
 00F6 20 2D                           db 20,2D ; .-
 00F8 20 53                           db 20,53 ; .S
 00FA 79 6D                           db 79,6D ; ym
 00FC 62 6F                           db 62,6F ; bo
 00FE 6C 20                           db 6C,20 ; l.
 0100 27 03                           db 27,03 ; '.
 0102 27 20                           db 27,20 ; '.
 0104 28 01                           db 28,01 ; (.
 0106 29 0B                           db 29,0B ; ).
 0108 44 61                           db 44,61 ; Da
 010A 74 61                           db 74,61 ; ta
 010C 20 65                           db 20,65 ; .e
 010E 72 72                           db 72,72 ; rr
 0110 6F 72                           db 6F,72 ; or
 0112 20 0E                           db 20,0E ; ..
 0114 53 79                           db 53,79 ; Sy
 0116 6D 62                           db 6D,62 ; mb
 0118 6F 6C                           db 6F,6C ; ol
 011A 20 69                           db 20,69 ; .i
 011C 6E 20                           db 6E,20 ; n.
 011E 64 61                           db 64,61 ; da
 0120 74 61                           db 74,61 ; ta
 0122 0D 49                           db 0D,49 ; .I
 0124 6E 76                           db 6E,76 ; nv
 0126 61 6C                           db 61,6C ; al
 0128 69 64                           db 69,64 ; id
 012A 20 64                           db 20,64 ; .d
 012C 61 74                           db 61,74 ; at
 012E 61 20                           db 61,20 ; a.
 0130 10 49                           db 10,49 ; .I
 0132 6C 6C                           db 6C,6C ; ll
 0134 65 67                           db 65,67 ; eg
 0136 61 6C                           db 61,6C ; al
 0138 20 46                           db 20,46 ; .F
 013A 4F 52                           db 4F,52 ; OR
 013C 20 6C                           db 20,6C ; .l
 013E 6F 6F                           db 6F,6F ; oo
 0140 70 1E                           db 70,1E ; p.
 0142 49 6C                           db 49,6C ; Il
 0144 6C 65                           db 6C,65 ; le
 0146 67 61                           db 67,61 ; ga
 0148 6C 20                           db 6C,20 ; l.
 014A 65 78                           db 65,78 ; ex
 014C 70 6F                           db 70,6F ; po
 014E 6E 65                           db 6E,65 ; ne
 0150 6E 74                           db 6E,74 ; nt
 0152 20 2D                           db 20,2D ; .-
 0154 20 45                           db 20,45 ; .E
 0156 78 70                           db 78,70 ; xp
 0158 6F 6E                           db 6F,6E ; on
 015A 65 6E                           db 65,6E ; en
 015C 74 20                           db 74,20 ; t.
 015E 3D 20                           db 3D,20 ; =.
 0160 10 41                           db 10,41 ; .A
 0162 72 72                           db 72,72 ; rr
 0164 61 79                           db 61,79 ; ay
 0166 20 69                           db 20,69 ; .i
 0168 6E 73                           db 6E,73 ; ns
 016A 69 64                           db 69,64 ; id
 016C 65 2D                           db 65,2D ; e-
 016E 6F 75                           db 6F,75 ; ou
 0170 74 11                           db 74,11 ; t.
 0172 53 74                           db 53,74 ; St
 0174 72 69                           db 72,69 ; ri
 0176 6E 67                           db 6E,67 ; ng
 0178 20 69                           db 20,69 ; .i
 017A 6E 73                           db 6E,73 ; ns
 017C 69 64                           db 69,64 ; id
 017E 65 2D                           db 65,2D ; e-
 0180 6F 75                           db 6F,75 ; ou
 0182 74 12                           db 74,12 ; t.
 0184 49 6C                           db 49,6C ; Il
 0186 6C 65                           db 6C,65 ; le
 0188 67 61                           db 67,61 ; ga
 018A 6C 20                           db 6C,20 ; l.
 018C 65 78                           db 65,78 ; ex
 018E 70 6F                           db 70,6F ; po
 0190 6E 65                           db 6E,65 ; ne
 0192 6E 74                           db 6E,74 ; nt
 0194 20 27                           db 20,27 ; .'
 0196 01 27                           db 01,27 ; .'
 0198 14 49                           db 14,49 ; .I
 019A 6E 76                           db 6E,76 ; nv
 019C 61 6C                           db 61,6C ; al
 019E 69 64                           db 69,64 ; id
 01A0 20 61                           db 20,61 ; .a
 01A2 72 67                           db 72,67 ; rg
 01A4 75 6D                           db 75,6D ; um
 01A6 65 6E                           db 65,6E ; en
 01A8 74 20                           db 74,20 ; t.
 01AA 2D 20                           db 2D,20 ; -.
 01AC 27 0D                           db 27,0D ; '.
 01AE 20 53                           db 20,53 ; .S
 01B0 75 62                           db 75,62 ; ub
 01B2 2D 63                           db 2D,63 ; -c
 01B4 6C 61                           db 6C,61 ; la
 01B6 73 73                           db 73,73 ; ss
 01B8 20 3D                           db 20,3D ; .=
 01BA 20 0A                           db 20,0A ; ..
 01BC 2C 20                           db 2C,20 ; ,.
 01BE 56 61                           db 56,61 ; Va
 01C0 6C 75                           db 6C,75 ; lu
 01C2 65 20                           db 65,20 ; e.
 01C4 3D 20                           db 3D,20 ; =.
 01C6 01 27                           db 01,27 ; .'
 01C8 11 43                           db 11,43 ; .C
 01CA 61 70                           db 61,70 ; ap
 01CC 61 63                           db 61,63 ; ac
 01CE 69 74                           db 69,74 ; it
 01D0 79 20                           db 79,20 ; y.
 01D2 65 78                           db 65,78 ; ex
 01D4 63 65                           db 63,65 ; ce
 01D6 65 64                           db 65,64 ; ed
 01D8 65 64                           db 65,64 ; ed
 01DA 17 20                           db 17,20 ; ..
 01DC 28 53                           db 28,53 ; (S
 01DE 74 72                           db 74,72 ; tr
 01E0 69 6E                           db 69,6E ; in
 01E2 67 20                           db 67,20 ; g.
 01E4 63 6F                           db 63,6F ; co
 01E6 70 79                           db 70,79 ; py
 01E8 20 6F                           db 20,6F ; .o
 01EA 76 65                           db 76,65 ; ve
 01EC 72 66                           db 72,66 ; rf
 01EE 6C 6F                           db 6C,6F ; lo
 01F0 77 29                           db 77,29 ; w)
 01F2 19 20                           db 19,20 ; ..
 01F4 28 53                           db 28,53 ; (S
 01F6 74 72                           db 74,72 ; tr
 01F8 69 6E                           db 69,6E ; in
 01FA 67 20                           db 67,20 ; g.
 01FC 61 70                           db 61,70 ; ap
 01FE 70 65                           db 70,65 ; pe
 0200 6E 64                           db 6E,64 ; nd
 0202 20 6F                           db 20,6F ; .o
 0204 76 65                           db 76,65 ; ve
 0206 72 66                           db 72,66 ; rf
 0208 6C 6F                           db 6C,6F ; lo
 020A 77 29                           db 77,29 ; w)
 020C 01 2E                           db 01,2E ; ..
 020E 1C 41                           db 1C,41 ; .A
 0210 72 72                           db 72,72 ; rr
 0212 61 79                           db 61,79 ; ay
 0214 20 62                           db 20,62 ; .b
 0216 6F 75                           db 6F,75 ; ou
 0218 6E 64                           db 6E,64 ; nd
 021A 20 66                           db 20,66 ; .f
 021C 61 75                           db 61,75 ; au
 021E 6C 74                           db 6C,74 ; lt
 0220 20 2D                           db 20,2D ; .-
 0222 20 49                           db 20,49 ; .I
 0224 6E 64                           db 6E,64 ; nd
 0226 65 78                           db 65,78 ; ex
 0228 20 3D                           db 20,3D ; .=
 022A 20 15                           db 20,15 ; ..
 022C 53 77                           db 53,77 ; Sw
 022E 69 74                           db 69,74 ; it
 0230 63 68                           db 63,68 ; ch
 0232 20 62                           db 20,62 ; .b
 0234 6F 75                           db 6F,75 ; ou
 0236 6E 64                           db 6E,64 ; nd
 0238 20 66                           db 20,66 ; .f
 023A 61 75                           db 61,75 ; au
 023C 6C 74                           db 6C,74 ; lt
 023E 20 3D                           db 20,3D ; .=
 0240 20 14                           db 20,14 ; ..
 0242 49 6C                           db 49,6C ; Il
 0244 6C 65                           db 6C,65 ; le
 0246 67 61                           db 67,61 ; ga
 0248 6C 20                           db 6C,20 ; l.
 024A 65 76                           db 65,76 ; ev
 024C 65 6E                           db 65,6E ; en
 024E 74 20                           db 74,20 ; t.
 0250 73 69                           db 73,69 ; si
 0252 67 6E                           db 67,6E ; gn
 0254 61 6C                           db 61,6C ; al
 0256 15 43                           db 15,43 ; .C
 0258 48 41                           db 48,41 ; HA
 025A 52 4E                           db 52,4E ; RN
 025C 4F 20                           db 4F,20 ; O.
 025E 6F 75                           db 6F,75 ; ou
 0260 74 20                           db 74,20 ; t.
 0262 6F 66                           db 6F,66 ; of
 0264 20 72                           db 20,72 ; .r
 0266 61 6E                           db 61,6E ; an
 0268 67 65                           db 67,65 ; ge
 026A 20 27                           db 20,27 ; .'
 026C 01 27                           db 01,27 ; .'
 026E 17 54                           db 17,54 ; .T
 0270 4F 53                           db 4F,53 ; OS
 0272 54 52                           db 54,52 ; TR
 0274 49 4E                           db 49,4E ; IN
 0276 47 20                           db 47,20 ; G.
 0278 6F 75                           db 6F,75 ; ou
 027A 74 20                           db 74,20 ; t.
 027C 6F 66                           db 6F,66 ; of
 027E 20 72                           db 20,72 ; .r
 0280 61 6E                           db 61,6E ; an
 0282 67 65                           db 67,65 ; ge
 0284 20 27                           db 20,27 ; .'
 0286 01 27                           db 01,27 ; .'
 0288 0F 49                           db 0F,49 ; .I
 028A 6C 6C                           db 6C,6C ; ll
 028C 65 67                           db 65,67 ; eg
 028E 61 6C                           db 61,6C ; al
 0290 20 73                           db 20,73 ; .s
 0292 68 69                           db 68,69 ; hi
 0294 66 74                           db 66,74 ; ft
 0296 20 27                           db 20,27 ; .'
 0298 01 27                           db 01,27 ; .'
 029A 16 4F                           db 16,4F ; .O
 029C 75 74                           db 75,74 ; ut
 029E 20 6F                           db 20,6F ; .o
 02A0 66 20                           db 66,20 ; f.
 02A2 72 61                           db 72,61 ; ra
 02A4 6E 67                           db 6E,67 ; ng
 02A6 65 20                           db 65,20 ; e.
 02A8 66 61                           db 66,61 ; fa
 02AA 75 6C                           db 75,6C ; ul
 02AC 74 20                           db 74,20 ; t.
 02AE 2D 20                           db 2D,20 ; -.
 02B0 28 0D                           db 28,0D ; (.
 02B2 20 53                           db 20,53 ; .S
 02B4 75 62                           db 75,62 ; ub
 02B6 2D 63                           db 2D,63 ; -c
 02B8 6C 61                           db 6C,61 ; la
 02BA 73 73                           db 73,73 ; ss
 02BC 20 3D                           db 20,3D ; .=
 02BE 20 0A                           db 20,0A ; ..
 02C0 2C 20                           db 2C,20 ; ,.
 02C2 56 61                           db 56,61 ; Va
 02C4 6C 75                           db 6C,75 ; lu
 02C6 65 20                           db 65,20 ; e.
 02C8 3D 20                           db 3D,20 ; =.
 02CA 01 29                           db 01,29 ; .)
 02CC 11 52                           db 11,52 ; .R
 02CE 65 73                           db 65,73 ; es
 02D0 6F 6C                           db 6F,6C ; ol
 02D2 75 74                           db 75,74 ; ut
 02D4 69 6F                           db 69,6F ; io
 02D6 6E 20                           db 6E,20 ; n.
 02D8 66 61                           db 66,61 ; fa
 02DA 69 6C                           db 69,6C ; il
 02DC 73 20                           db 73,20 ; s.
 02DE 13 55                           db 13,55 ; .U
 02E0 6E 61                           db 6E,61 ; na
 02E2 73 73                           db 73,73 ; ss
 02E4 69 67                           db 69,67 ; ig
 02E6 6E 65                           db 6E,65 ; ne
 02E8 64 20                           db 64,20 ; d.
 02EA 76 61                           db 76,61 ; va
 02EC 72 69                           db 72,69 ; ri
 02EE 61 62                           db 61,62 ; ab
 02F0 6C 65                           db 6C,65 ; le
 02F2 11 4E                           db 11,4E ; .N
 02F4 6F 20                           db 6F,20 ; o.
 02F6 73 77                           db 73,77 ; sw
 02F8 69 74                           db 69,74 ; it
 02FA 63 68                           db 63,68 ; ch
 02FC 20 6C                           db 20,6C ; .l
 02FE 61 62                           db 61,62 ; ab
 0300 65 6C                           db 65,6C ; el
 0302 20 27                           db 20,27 ; .'
 0304 01 27                           db 01,27 ; .'
 0306 14 46                           db 14,46 ; .F
 0308 6F 72                           db 6F,72 ; or
 030A 20 76                           db 20,76 ; .v
 030C 61 72                           db 61,72 ; ar
 030E 69 61                           db 69,61 ; ia
 0310 62 6C                           db 62,6C ; bl
 0312 65 20                           db 65,20 ; e.
 0314 63 6F                           db 63,6F ; co
 0316 72 72                           db 72,72 ; rr
 0318 75 70                           db 75,70 ; up
 031A 74 17                           db 74,17 ; t.
 031C 55 6E                           db 55,6E ; Un
 031E 64 65                           db 64,65 ; de
 0320 66 69                           db 66,69 ; fi
 0322 6E 65                           db 6E,65 ; ne
 0324 64 20                           db 64,20 ; d.
 0326 73 77                           db 73,77 ; sw
 0328 69 74                           db 69,74 ; it
 032A 63 68                           db 63,68 ; ch
 032C 20 76                           db 20,76 ; .v
 032E 61 6C                           db 61,6C ; al
 0330 75 65                           db 75,65 ; ue
 0332 20 0C                           db 20,0C ; ..
 0334 45 6E                           db 45,6E ; En
 0336 64 20                           db 64,20 ; d.
 0338 6F 66                           db 6F,66 ; of
 033A 20 69                           db 20,69 ; .i
 033C 6E 70                           db 6E,70 ; np
 033E 75 74                           db 75,74 ; ut
 0340 17 55                           db 17,55 ; .U
 0342 6E 65                           db 6E,65 ; ne
 0344 78 70                           db 78,70 ; xp
 0346 65 63                           db 65,63 ; ec
 0348 74 65                           db 74,65 ; te
 034A 64 20                           db 64,20 ; d.
 034C 65 6E                           db 65,6E ; en
 034E 64 20                           db 64,20 ; d.
 0350 6F 66                           db 6F,66 ; of
 0352 20 69                           db 20,69 ; .i
 0354 6E 70                           db 6E,70 ; np
 0356 75 74                           db 75,74 ; ut
 0358 20 43                           db 20,43 ; .C
 035A 6F 75                           db 6F,75 ; ou
 035C 6C 64                           db 6C,64 ; ld
 035E 6E 27                           db 6E,27 ; n'
 0360 74 20                           db 74,20 ; t.
 0362 6F 70                           db 6F,70 ; op
 0364 65 6E                           db 65,6E ; en
 0366 20 66                           db 20,66 ; .f
 0368 69 6C                           db 69,6C ; il
 036A 65 2E                           db 65,2E ; e.
 036C 20 45                           db 20,45 ; .E
 036E 72 72                           db 72,72 ; rr
 0370 6F 72                           db 6F,72 ; or
 0372 20 43                           db 20,43 ; .C
 0374 6F 64                           db 6F,64 ; od
 0376 65 20                           db 65,20 ; e.
 0378 27 01                           db 27,01 ; '.
 037A 27 13                           db 27,13 ; '.
 037C 46 69                           db 46,69 ; Fi
 037E 6C 65                           db 6C,65 ; le
 0380 20 73                           db 20,73 ; .s
 0382 79 73                           db 79,73 ; ys
 0384 74 65                           db 74,65 ; te
 0386 6D 20                           db 6D,20 ; m.
 0388 65 72                           db 65,72 ; er
 038A 72 6F                           db 72,6F ; ro
 038C 72 20                           db 72,20 ; r.
 038E 27 01                           db 27,01 ; '.
 0390 27 0E                           db 27,0E ; '.
 0392 49 6E                           db 49,6E ; In
 0394 70 75                           db 70,75 ; pu
 0396 74 20                           db 74,20 ; t.
 0398 73 74                           db 73,74 ; st
 039A 72 65                           db 72,65 ; re
 039C 61 6D                           db 61,6D ; am
 039E 20 27                           db 20,27 ; .'
 03A0 15 27                           db 15,27 ; .'
 03A2 20 68                           db 20,68 ; .h
 03A4 61 73                           db 61,73 ; as
 03A6 20 6E                           db 20,6E ; .n
 03A8 6F 74                           db 6F,74 ; ot
 03AA 20 62                           db 20,62 ; .b
 03AC 65 65                           db 65,65 ; ee
 03AE 6E 20                           db 6E,20 ; n.
 03B0 6F 70                           db 6F,70 ; op
 03B2 65 6E                           db 65,6E ; en
 03B4 65 64                           db 65,64 ; ed
 03B6 0F 4F                           db 0F,4F ; .O
 03B8 75 74                           db 75,74 ; ut
 03BA 70 75                           db 70,75 ; pu
 03BC 74 20                           db 74,20 ; t.
 03BE 73 74                           db 73,74 ; st
 03C0 72 65                           db 72,65 ; re
 03C2 61 6D                           db 61,6D ; am
 03C4 20 27                           db 20,27 ; .'
 03C6 15 27                           db 15,27 ; .'
 03C8 20 68                           db 20,68 ; .h
 03CA 61 73                           db 61,73 ; as
 03CC 20 6E                           db 20,6E ; .n
 03CE 6F 74                           db 6F,74 ; ot
 03D0 20 62                           db 20,62 ; .b
 03D2 65 65                           db 65,65 ; ee
 03D4 6E 20                           db 6E,20 ; n.
 03D6 6F 70                           db 6F,70 ; op
 03D8 65 6E                           db 65,6E ; en
 03DA 65 64                           db 65,64 ; ed
 03DC 0D 42                           db 0D,42 ; .B
 03DE 61 64                           db 61,64 ; ad
 03E0 20 73                           db 20,73 ; .s
 03E2 74 72                           db 74,72 ; tr
 03E4 65 61                           db 65,61 ; ea
 03E6 6D 23                           db 6D,23 ; m#
 03E8 20 27                           db 20,27 ; .'
 03EA 01 27                           db 01,27 ; .'
 03EC 1E 49                           db 1E,49 ; .I
 03EE 6E 76                           db 6E,76 ; nv
 03F0 61 6C                           db 61,6C ; al
 03F2 69 64                           db 69,64 ; id
 03F4 20 66                           db 20,66 ; .f
 03F6 69 6C                           db 69,6C ; il
 03F8 65 6E                           db 65,6E ; en
 03FA 61 6D                           db 61,6D ; am
 03FC 65 20                           db 65,20 ; e.
 03FE 66 6F                           db 66,6F ; fo
 0400 72 20                           db 72,20 ; r.
 0402 73 74                           db 73,74 ; st
 0404 72 65                           db 72,65 ; re
 0406 61 6D                           db 61,6D ; am
 0408 23 20                           db 23,20 ; #.
 040A 27 01                           db 27,01 ; '.
 040C 27 13                           db 27,13 ; '.
 040E 49 6E                           db 49,6E ; In
 0410 70 75                           db 70,75 ; pu
 0412 74 2F                           db 74,2F ; t/
 0414 4F 75                           db 4F,75 ; Ou
 0416 74 70                           db 74,70 ; tp
 0418 75 74                           db 75,74 ; ut
 041A 20 65                           db 20,65 ; .e
 041C 72 72                           db 72,72 ; rr
 041E 6F 72                           db 6F,72 ; or
 0420 20 2D                           db 20,2D ; .-
 0422 49 6E                           db 49,6E ; In
 0424 63 6F                           db 63,6F ; co
 0426 72 72                           db 72,72 ; rr
 0428 65 63                           db 65,63 ; ec
 042A 74 20                           db 74,20 ; t.
 042C 63 6F                           db 63,6F ; co
 042E 6D 6D                           db 6D,6D ; mm
 0430 61 6E                           db 61,6E ; an
 0432 64 20                           db 64,20 ; d.
 0434 6C 69                           db 6C,69 ; li
 0436 6E 65                           db 6E,65 ; ne
 0438 20 70                           db 20,70 ; .p
 043A 61 72                           db 61,72 ; ar
 043C 61 6D                           db 61,6D ; am
 043E 65 74                           db 65,74 ; et
 0440 65 72                           db 65,72 ; er
 0442 20 63                           db 20,63 ; .c
 0444 6F 75                           db 6F,75 ; ou
 0446 6E 74                           db 6E,74 ; nt
 0448 2E 20                           db 2E,20 ; ..
 044A 41 72                           db 41,72 ; Ar
 044C 67 63                           db 67,63 ; gc
 044E 3D 18                           db 3D,18 ; =.
 0450 4C 69                           db 4C,69 ; Li
 0452 62 72                           db 62,72 ; br
 0454 61 72                           db 61,72 ; ar
 0456 79 20                           db 79,20 ; y.
 0458 70 72                           db 70,72 ; pr
 045A 6F 63                           db 6F,63 ; oc
 045C 65 64                           db 65,64 ; ed
 045E 75 72                           db 75,72 ; ur
 0460 65 20                           db 65,20 ; e.
 0462 65 72                           db 65,72 ; er
 0464 72 6F                           db 72,6F ; ro
 0466 72 20                           db 72,20 ; r.
 0468 07 53                           db 07,53 ; .S
 046A 69 67                           db 69,67 ; ig
 046C 6E 61                           db 6E,61 ; na
 046E 6C 20                           db 6C,20 ; l.
 0470 08 20                           db 08,20 ; ..
 0472 63 61                           db 63,61 ; ca
 0474 6C 6C                           db 6C,6C ; ll
 0476 65 64                           db 65,64 ; ed
 0478 2E 00                           db 2E,00 ; ..
 047A 00 00                           db 00,00 ; ..
 047C 01 00                           db 01,00 ; ..
 047E 00 00                           db 00,00 ; ..
 0480 01 00                           db 01,00 ; ..
 0482 00 00                           db 00,00 ; ..
 0484 08 00                           db 08,00 ; ..
 0486 00 00                           db 00,00 ; ..
 0488 00 00                           db 00,00 ; ..
 048A 00 00                           db 00,00 ; ..
 048C 08 49                           db 08,49 ; .I
 048E 4D 50                           db 4D,50 ; MP
 0490 52 54                           db 52,54 ; RT
 0492 4C 3A                           db 4C,3A ; L:
 0494 20 0B                           db 20,0B ; ..
 0496 53 48                           db 53,48 ; SH
 0498 4F 57                           db 4F,57 ; OW
 049A 45 56                           db 45,56 ; EV
 049C 45 4E                           db 45,4E ; EN
 049E 54 3A                           db 54,3A ; T:
 04A0 20 13                           db 20,13 ; ..
 04A2 53 74                           db 53,74 ; St
 04A4 61 72                           db 61,72 ; ar
 04A6 74 20                           db 74,20 ; t.
 04A8 6F 66                           db 6F,66 ; of
 04AA 20 53                           db 20,53 ; .S
 04AC 74 61                           db 74,61 ; ta
 04AE 63 6B                           db 63,6B ; ck
 04B0 20 64                           db 20,64 ; .d
 04B2 75 6D                           db 75,6D ; um
 04B4 70 2D                           db 70,2D ; p-
 04B6 53 69                           db 53,69 ; Si
 04B8 67 6E                           db 67,6E ; gn
 04BA 61 6C                           db 61,6C ; al
 04BC 20 4E                           db 20,4E ; .N
 04BE 6F 20                           db 6F,20 ; o.
 04C0 68 61                           db 68,61 ; ha
 04C2 6E 64                           db 6E,64 ; nd
 04C4 6C 65                           db 6C,65 ; le
 04C6 72 20                           db 72,20 ; r.
 04C8 66 6F                           db 66,6F ; fo
 04CA 75 6E                           db 75,6E ; un
 04CC 64 20                           db 64,20 ; d.
 04CE 66 6F                           db 66,6F ; fo
 04D0 72 20                           db 72,20 ; r.
 04D2 73 69                           db 73,69 ; si
 04D4 67 6E                           db 67,6E ; gn
 04D6 61 6C                           db 61,6C ; al
 04D8 6C 65                           db 6C,65 ; le
 04DA 64 20                           db 64,20 ; d.
 04DC 65 76                           db 65,76 ; ev
 04DE 65 6E                           db 65,6E ; en
 04E0 74 20                           db 74,20 ; t.
 04E2 28 02                           db 28,02 ; (.
 04E4 2C 20                           db 2C,20 ; ,.
 04E6 02 2C                           db 02,2C ; .,
 04E8 20 02                           db 20,02 ; ..
 04EA 29 2E                           db 29,2E ; ).
 04EC 15 50                           db 15,50 ; .P
 04EE 6F 73                           db 6F,73 ; os
 04F0 73 69                           db 73,69 ; si
 04F2 62 6C                           db 62,6C ; bl
 04F4 65 20                           db 65,20 ; e.
 04F6 73 74                           db 73,74 ; st
 04F8 61 63                           db 61,63 ; ac
 04FA 6B 20                           db 6B,20 ; k.
 04FC 65 72                           db 65,72 ; er
 04FE 72 6F                           db 72,6F ; ro
 0500 72 3F                           db 72,3F ; r?
 0502 11 45                           db 11,45 ; .E
 0504 6E 64                           db 6E,64 ; nd
 0506 20 6F                           db 20,6F ; .o
 0508 66 20                           db 66,20 ; f.
 050A 53 74                           db 53,74 ; St
 050C 61 63                           db 61,63 ; ac
 050E 6B 20                           db 6B,20 ; k.
 0510 64 75                           db 64,75 ; du
 0512 6D 70                           db 6D,70 ; mp
 0514 22 53                           db 22,53 ; "S
 0516 74 6F                           db 74,6F ; to
 0518 70 70                           db 70,70 ; pp
 051A 69 6E                           db 69,6E ; in
 051C 67 20                           db 67,20 ; g.
 051E 70 72                           db 70,72 ; pr
 0520 6F 67                           db 6F,67 ; og
 0522 72 61                           db 72,61 ; ra
 0524 6D 20                           db 6D,20 ; m.
 0526 77 69                           db 77,69 ; wi
 0528 74 68                           db 74,68 ; th
 052A 20 65                           db 20,65 ; .e
 052C 78 69                           db 78,69 ; xi
 052E 74 20                           db 74,20 ; t.
 0530 73 74                           db 73,74 ; st
 0532 61 74                           db 61,74 ; at
 0534 75 73                           db 75,73 ; us
 0536 3D 17                           db 3D,17 ; =.
 0538 55 6E                           db 55,6E ; Un
 053A 6B 6E                           db 6B,6E ; kn
 053C 6F 77                           db 6F,77 ; ow
 053E 6E 20                           db 6E,20 ; n.
 0540 6D 65                           db 6D,65 ; me
 0542 73 73                           db 73,73 ; ss
 0544 61 67                           db 61,67 ; ag
 0546 65 23                           db 65,23 ; e#
 0548 20 67                           db 20,67 ; .g
 054A 69 76                           db 69,76 ; iv
 054C 65 6E                           db 65,6E ; en
 054E 2E 08                           db 2E,08 ; ..
 0550 49 4D                           db 49,4D ; IM
 0552 50 52                           db 50,52 ; PR
 0554 54 4C                           db 54,4C ; TL
 0556 3A 20                           db 3A,20 ; :.
 0558 0F 43                           db 0F,43 ; .C
 055A 61 6C                           db 61,6C ; al
 055C 6C 65                           db 6C,65 ; le
 055E 64 20                           db 64,20 ; d.
 0560 66 72                           db 66,72 ; fr
 0562 6F 6D                           db 6F,6D ; om
 0564 20 28                           db 20,28 ; .(
 0566 78 27                           db 78,27 ; x'
 0568 07 27                           db 07,27 ; .'
 056A 29 20                           db 29,20 ; ).
 056C 69 6E                           db 69,6E ; in
 056E 20 27                           db 20,27 ; .'
 0570 01 27                           db 01,27 ; .'
      CONST  ENDS
      _TEXT  SEGMENT WORD PUBLIC 'CODE'
            ENDS
      DATA  SEGMENT WORD PUBLIC 'DATA'
 0000 00 00                           db 00,00 ; ..
 0002 00 00                           db 00,00 ; ..
 0004 00 00                           db 00,00 ; ..
 0006 00 00                           db 00,00 ; ..
 0008 00 00                           db 00,00 ; ..
 000A 00 00                           db 00,00 ; ..
 000C 00 00                           db 00,00 ; ..
 000E 00 00                           db 00,00 ; ..
 0010 00 00                           db 00,00 ; ..
 0012 00 00                           db 00,00 ; ..
 0014 00 00                           db 00,00 ; ..
 0016 00 00                           db 00,00 ; ..
 0018 00 00                           db 00,00 ; ..
 001A 00 00                           db 00,00 ; ..
 001C 00 00                           db 00,00 ; ..
 001E 00 00                           db 00,00 ; ..
 0020 00 00                           db 00,00 ; ..
 0022 00 00                           db 00,00 ; ..
 0024 00 00                           db 00,00 ; ..
 0026 00 00                           db 00,00 ; ..
 0028 00 00                           db 00,00 ; ..
 002A 00 00                           db 00,00 ; ..
 002C 00 00                           db 00,00 ; ..
 002E 00 00                           db 00,00 ; ..
 0030 00 00                           db 00,00 ; ..
 0032 00 00                           db 00,00 ; ..
 0034 00 00                           db 00,00 ; ..
 0036 00 00                           db 00,00 ; ..
 0038 00 00                           db 00,00 ; ..
 003A 00 00                           db 00,00 ; ..
 003C 00 00                           db 00,00 ; ..
 003E 00 00                           db 00,00 ; ..
 0040 00 00                           db 00,00 ; ..
 0042 00 00                           db 00,00 ; ..
 0044 00 00                           db 00,00 ; ..
 0046 00 00                           db 00,00 ; ..
 0048 00 00                           db 00,00 ; ..
 004A 00 00                           db 00,00 ; ..
 004C 00 00                           db 00,00 ; ..
 004E 00 00                           db 00,00 ; ..
 0050 00 00                           db 00,00 ; ..
 0052 00 00                           db 00,00 ; ..
 0054 00 00                           db 00,00 ; ..
 0056 00 00                           db 00,00 ; ..
 0058 00 00                           db 00,00 ; ..
 005A 00 00                           db 00,00 ; ..
 005C 00 00                           db 00,00 ; ..
 005E 00 00                           db 00,00 ; ..
 0060 00 00                           db 00,00 ; ..
 0062 00 00                           db 00,00 ; ..
 0064 00 00                           db 00,00 ; ..
 0066 00 00                           db 00,00 ; ..
 0068 00 00                           db 00,00 ; ..
 006A 00 00                           db 00,00 ; ..
 006C 00 00                           db 00,00 ; ..
 006E 00 00                           db 00,00 ; ..
 0070 00 00                           db 00,00 ; ..
 0072 00 00                           db 00,00 ; ..
 0074 00 00                           db 00,00 ; ..
 0076 00 00                           db 00,00 ; ..
 0078 00 00                           db 00,00 ; ..
 007A 00 00                           db 00,00 ; ..
 007C 00 00                           db 00,00 ; ..
 007E 00 00                           db 00,00 ; ..
 0080 00 00                           db 00,00 ; ..
 0082 00 00                           db 00,00 ; ..
 0084 00 00                           db 00,00 ; ..
 0086 00 00                           db 00,00 ; ..
 0088 00 00                           db 00,00 ; ..
 008A 00 00                           db 00,00 ; ..
 008C 00 00                           db 00,00 ; ..
 008E 00 00                           db 00,00 ; ..
 0090 00 00                           db 00,00 ; ..
 0092 00 00                           db 00,00 ; ..
 0094 00 00                           db 00,00 ; ..
 0096 00 00                           db 00,00 ; ..
 0098 00 00                           db 00,00 ; ..
 009A 00 00                           db 00,00 ; ..
 009C 00 00                           db 00,00 ; ..
 009E 00 00                           db 00,00 ; ..
 00A0 00 00                           db 00,00 ; ..
 00A2 00 00                           db 00,00 ; ..
 00A4 00 00                           db 00,00 ; ..
 00A6 00 00                           db 00,00 ; ..
 00A8 00 00                           db 00,00 ; ..
 00AA 00 00                           db 00,00 ; ..
 00AC 00 00                           db 00,00 ; ..
 00AE 00 00                           db 00,00 ; ..
 00B0 00 00                           db 00,00 ; ..
 00B2 00 00                           db 00,00 ; ..
 00B4 00 00                           db 00,00 ; ..
 00B6 00 00                           db 00,00 ; ..
 00B8 00 00                           db 00,00 ; ..
 00BA 00 00                           db 00,00 ; ..
 00BC 00 00                           db 00,00 ; ..
 00BE 00 00                           db 00,00 ; ..
 00C0 00 00                           db 00,00 ; ..
 00C2 00 00                           db 00,00 ; ..
 00C4 00 00                           db 00,00 ; ..
 00C6 00 00                           db 00,00 ; ..
 00C8 00 00                           db 00,00 ; ..
 00CA 00 00                           db 00,00 ; ..
 00CC 00 00                           db 00,00 ; ..
 00CE 00 00                           db 00,00 ; ..
 00D0 00 00                           db 00,00 ; ..
 00D2 00 00                           db 00,00 ; ..
 00D4 00 00                           db 00,00 ; ..
 00D6 00 00                           db 00,00 ; ..
 00D8 00 00                           db 00,00 ; ..
 00DA 00 00                           db 00,00 ; ..
 00DC 00 00                           db 00,00 ; ..
 00DE 00 00                           db 00,00 ; ..
 00E0 00 00                           db 00,00 ; ..
 00E2 00 00                           db 00,00 ; ..
 00E4 00 00                           db 00,00 ; ..
 00E6 00 00                           db 00,00 ; ..
 00E8 00 00                           db 00,00 ; ..
 00EA 00 00                           db 00,00 ; ..
 00EC 00 00                           db 00,00 ; ..
 00EE 00 00                           db 00,00 ; ..
 00F0 00 00                           db 00,00 ; ..
 00F2 00 00                           db 00,00 ; ..
 00F4 00 00                           db 00,00 ; ..
 00F6 00 00                           db 00,00 ; ..
 00F8 00 00                           db 00,00 ; ..
 00FA 00 00                           db 00,00 ; ..
 00FC 00 00                           db 00,00 ; ..
 00FE 00 00                           db 00,00 ; ..
 0100 00 00                           db 00,00 ; ..
 0102 00 00                           db 00,00 ; ..
 0104 00 00                           db 00,00 ; ..
 0106 00 00                           db 00,00 ; ..
 0108 00 00                           db 00,00 ; ..
 010A 00 00                           db 00,00 ; ..
      DATA    ENDS
              ENDS
      _SWTAB  SEGMENT WORD PUBLIC '_SWTAB'
 0000 EB 03                           db EB,03 ; ..
 0002 F2 03                           db F2,03 ; ..
 0004 06 04                           db 06,04 ; ..
 0006 1A 04                           db 1A,04 ; ..
 0008 2E 04                           db 2E,04 ; ..
 000A 42 04                           db 42,04 ; B.
 000C 56 04                           db 56,04 ; V.
 000E 6C 04                           db 6C,04 ; l.
 0010 80 04                           db 80,04 ; ..
 0012 94 04                           db 94,04 ; ..
 0014 A8 04                           db A8,04 ; ..
 0016 BC 04                           db BC,04 ; ..
 0018 BD 04                           db BD,04 ; ..
 001A BE 04                           db BE,04 ; ..
 001C BF 04                           db BF,04 ; ..
 001E C0 04                           db C0,04 ; ..
 0020 FB 03                           db FB,03 ; ..
 0022 F5 03                           db F5,03 ; ..
 0024 F7 03                           db F7,03 ; ..
 0026 F8 03                           db F8,03 ; ..
 0028 F9 03                           db F9,03 ; ..
 002A FA 03                           db FA,03 ; ..
 002C FC 03                           db FC,03 ; ..
 002E FD 03                           db FD,03 ; ..
 0030 FE 03                           db FE,03 ; ..
 0032 FF 03                           db FF,03 ; ..
 0034 00 04                           db 00,04 ; ..
 0036 01 04                           db 01,04 ; ..
 0038 02 04                           db 02,04 ; ..
 003A 03 04                           db 03,04 ; ..
 003C 04 04                           db 04,04 ; ..
 003E 05 04                           db 05,04 ; ..
 0040 0D 04                           db 0D,04 ; ..
 0042 09 04                           db 09,04 ; ..
 0044 0B 04                           db 0B,04 ; ..
 0046 0C 04                           db 0C,04 ; ..
 0048 0E 04                           db 0E,04 ; ..
 004A 0F 04                           db 0F,04 ; ..
 004C 10 04                           db 10,04 ; ..
 004E 11 04                           db 11,04 ; ..
 0050 12 04                           db 12,04 ; ..
 0052 13 04                           db 13,04 ; ..
 0054 14 04                           db 14,04 ; ..
 0056 15 04                           db 15,04 ; ..
 0058 16 04                           db 16,04 ; ..
 005A 17 04                           db 17,04 ; ..
 005C 18 04                           db 18,04 ; ..
 005E 19 04                           db 19,04 ; ..
 0060 1F 04                           db 1F,04 ; ..
 0062 1D 04                           db 1D,04 ; ..
 0064 20 04                           db 20,04 ; ..
 0066 21 04                           db 21,04 ; !.
 0068 22 04                           db 22,04 ; ".
 006A 23 04                           db 23,04 ; #.
 006C 24 04                           db 24,04 ; $.
 006E 25 04                           db 25,04 ; %.
 0070 26 04                           db 26,04 ; &.
 0072 27 04                           db 27,04 ; '.
 0074 28 04                           db 28,04 ; (.
 0076 29 04                           db 29,04 ; ).
 0078 2A 04                           db 2A,04 ; *.
 007A 2B 04                           db 2B,04 ; +.
 007C 2C 04                           db 2C,04 ; ,.
 007E 2D 04                           db 2D,04 ; -.
 0080 33 04                           db 33,04 ; 3.
 0082 31 04                           db 31,04 ; 1.
 0084 34 04                           db 34,04 ; 4.
 0086 35 04                           db 35,04 ; 5.
 0088 36 04                           db 36,04 ; 6.
 008A 37 04                           db 37,04 ; 7.
 008C 38 04                           db 38,04 ; 8.
 008E 39 04                           db 39,04 ; 9.
 0090 3A 04                           db 3A,04 ; :.
 0092 3B 04                           db 3B,04 ; ;.
 0094 3C 04                           db 3C,04 ; <.
 0096 3D 04                           db 3D,04 ; =.
 0098 3E 04                           db 3E,04 ; >.
 009A 3F 04                           db 3F,04 ; ?.
 009C 40 04                           db 40,04 ; @.
 009E 41 04                           db 41,04 ; A.
 00A0 4B 04                           db 4B,04 ; K.
 00A2 45 04                           db 45,04 ; E.
 00A4 47 04                           db 47,04 ; G.
 00A6 48 04                           db 48,04 ; H.
 00A8 49 04                           db 49,04 ; I.
 00AA 4A 04                           db 4A,04 ; J.
 00AC 4C 04                           db 4C,04 ; L.
 00AE 4D 04                           db 4D,04 ; M.
 00B0 4E 04                           db 4E,04 ; N.
 00B2 4F 04                           db 4F,04 ; O.
 00B4 50 04                           db 50,04 ; P.
 00B6 51 04                           db 51,04 ; Q.
 00B8 52 04                           db 52,04 ; R.
 00BA 53 04                           db 53,04 ; S.
 00BC 54 04                           db 54,04 ; T.
 00BE 55 04                           db 55,04 ; U.
 00C0 63 04                           db 63,04 ; c.
 00C2 59 04                           db 59,04 ; Y.
 00C4 5D 04                           db 5D,04 ; ].
 00C6 5E 04                           db 5E,04 ; ^.
 00C8 5F 04                           db 5F,04 ; _.
 00CA 60 04                           db 60,04 ; `.
 00CC 61 04                           db 61,04 ; a.
 00CE 62 04                           db 62,04 ; b.
 00D0 64 04                           db 64,04 ; d.
 00D2 65 04                           db 65,04 ; e.
 00D4 66 04                           db 66,04 ; f.
 00D6 67 04                           db 67,04 ; g.
 00D8 68 04                           db 68,04 ; h.
 00DA 69 04                           db 69,04 ; i.
 00DC 6A 04                           db 6A,04 ; j.
 00DE 6B 04                           db 6B,04 ; k.
 00E0 6F 04                           db 6F,04 ; o.
 00E2 70 04                           db 70,04 ; p.
 00E4 71 04                           db 71,04 ; q.
 00E6 72 04                           db 72,04 ; r.
 00E8 73 04                           db 73,04 ; s.
 00EA 74 04                           db 74,04 ; t.
 00EC 75 04                           db 75,04 ; u.
 00EE 76 04                           db 76,04 ; v.
 00F0 77 04                           db 77,04 ; w.
 00F2 78 04                           db 78,04 ; x.
 00F4 79 04                           db 79,04 ; y.
 00F6 7A 04                           db 7A,04 ; z.
 00F8 7B 04                           db 7B,04 ; {.
 00FA 7C 04                           db 7C,04 ; |.
 00FC 7D 04                           db 7D,04 ; }.
 00FE 7E 04                           db 7E,04 ; ~.
 0100 87 04                           db 87,04 ; ..
 0102 83 04                           db 83,04 ; ..
 0104 85 04                           db 85,04 ; ..
 0106 86 04                           db 86,04 ; ..
 0108 88 04                           db 88,04 ; ..
 010A 89 04                           db 89,04 ; ..
 010C 8A 04                           db 8A,04 ; ..
 010E 8B 04                           db 8B,04 ; ..
 0110 8C 04                           db 8C,04 ; ..
 0112 8D 04                           db 8D,04 ; ..
 0114 8E 04                           db 8E,04 ; ..
 0116 8F 04                           db 8F,04 ; ..
 0118 90 04                           db 90,04 ; ..
 011A 91 04                           db 91,04 ; ..
 011C 92 04                           db 92,04 ; ..
 011E 93 04                           db 93,04 ; ..
 0120 97 04                           db 97,04 ; ..
 0122 99 04                           db 99,04 ; ..
 0124 9A 04                           db 9A,04 ; ..
 0126 9B 04                           db 9B,04 ; ..
 0128 9C 04                           db 9C,04 ; ..
 012A 9D 04                           db 9D,04 ; ..
 012C A0 04                           db A0,04 ; ..
 012E A1 04                           db A1,04 ; ..
 0130 A2 04                           db A2,04 ; ..
 0132 9E 04                           db 9E,04 ; ..
 0134 9F 04                           db 9F,04 ; ..
 0136 A3 04                           db A3,04 ; ..
 0138 A4 04                           db A4,04 ; ..
 013A A5 04                           db A5,04 ; ..
 013C A6 04                           db A6,04 ; ..
 013E A7 04                           db A7,04 ; ..
 0140 AD 04                           db AD,04 ; ..
 0142 AB 04                           db AB,04 ; ..
 0144 AE 04                           db AE,04 ; ..
 0146 AF 04                           db AF,04 ; ..
 0148 B0 04                           db B0,04 ; ..
 014A B1 04                           db B1,04 ; ..
 014C B2 04                           db B2,04 ; ..
 014E B3 04                           db B3,04 ; ..
 0150 B4 04                           db B4,04 ; ..
 0152 B5 04                           db B5,04 ; ..
 0154 B6 04                           db B6,04 ; ..
 0156 B7 04                           db B7,04 ; ..
 0158 B8 04                           db B8,04 ; ..
 015A B9 04                           db B9,04 ; ..
 015C BA 04                           db BA,04 ; ..
 015E BB 04                           db BB,04 ; ..
 0160 C2 04                           db C2,04 ; ..
 0162 C4 04                           db C4,04 ; ..
 0164 C5 04                           db C5,04 ; ..
 0166 C6 04                           db C6,04 ; ..
 0168 C7 04                           db C7,04 ; ..
 016A C8 04                           db C8,04 ; ..
 016C C9 04                           db C9,04 ; ..
 016E CA 04                           db CA,04 ; ..
      _SWTAB   ENDS
