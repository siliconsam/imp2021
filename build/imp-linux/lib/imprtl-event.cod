
    %include "inc.386.registers"

    %own %record(event fm) lastevent

    %external %string(14) %function %spec handler name( %integer address )
{-----------------------------------------------------------------------------}
    %external %record(event fm) %map event
        %result == lastevent
    %end
 0000                      L1000  EQU $
 0000 C8 00 00 01                           ENTER 0000,1
 0004 B8 00 00 00 00                        MOV EAX,DATA+0
 0009 C9                                    LEAVE
 000A C3                                    RET
{-----------------------------------------------------------------------------}
    %external %routine save event( %integer line, event, sub, info )
 000B                      L1001  EQU $
 000B C8 00 00 01                           ENTER 0000,1
        %switch esw(0:max event - 1)
        %string(16) e,s,x
        %string(255) msg,eventmsg

        e = itos(event,0)
 000F FF 75 10                              PUSH WORD [EBP+16]
 0012 6A 00                                 PUSH 0
 0014 8D 85 C8 FC FF FF                     LEA EAX,[EBP-824]
 001A 50                                    PUSH EAX
 001B E8 42 00                              CALL 'ITOS' (EXTERN 66)
 001E 83 C4 0C                              ADD ESP,12
 0021 8D 45 EB                              LEA EAX,[EBP-21]
 0024 50                                    PUSH EAX
 0025 8D 8D C8 FC FF FF                     LEA ECX,[EBP-824]
 002B 51                                    PUSH ECX
 002C 6A 10                                 PUSH 16
 002E E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 0031 83 C4 0C                              ADD ESP,12
        s = itos(sub,0)
 0034 FF 75 0C                              PUSH WORD [EBP+12]
 0037 6A 00                                 PUSH 0
 0039 8D 85 C8 FC FF FF                     LEA EAX,[EBP-824]
 003F 50                                    PUSH EAX
 0040 E8 42 00                              CALL 'ITOS' (EXTERN 66)
 0043 83 C4 0C                              ADD ESP,12
 0046 8D 45 DA                              LEA EAX,[EBP-38]
 0049 50                                    PUSH EAX
 004A 8D 8D C8 FC FF FF                     LEA ECX,[EBP-824]
 0050 51                                    PUSH ECX
 0051 6A 10                                 PUSH 16
 0053 E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 0056 83 C4 0C                              ADD ESP,12
        x = itos(info,0)
 0059 FF 75 08                              PUSH WORD [EBP+8]
 005C 6A 00                                 PUSH 0
 005E 8D 85 C8 FC FF FF                     LEA EAX,[EBP-824]
 0064 50                                    PUSH EAX
 0065 E8 42 00                              CALL 'ITOS' (EXTERN 66)
 0068 83 C4 0C                              ADD ESP,12
 006B 8D 45 C9                              LEA EAX,[EBP-55]
 006E 50                                    PUSH EAX
 006F 8D 8D C8 FC FF FF                     LEA ECX,[EBP-824]
 0075 51                                    PUSH ECX
 0076 6A 10                                 PUSH 16
 0078 E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 007B 83 C4 0C                              ADD ESP,12

        eventmsg = "(".e.",".s.",".x.")"
 007E 8D 85 C8 FC FF FF                     LEA EAX,[EBP-824]
 0084 50                                    PUSH EAX
 0085 B8 10 00 00 00                        MOV EAX,COT+16
 008A 50                                    PUSH EAX
 008B 68 FF 00 00 00                        PUSH 255
 0090 E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 0093 83 C4 0C                              ADD ESP,12
 0096 8D 85 C8 FC FF FF                     LEA EAX,[EBP-824]
 009C 50                                    PUSH EAX
 009D 8D 45 EB                              LEA EAX,[EBP-21]
 00A0 50                                    PUSH EAX
 00A1 68 FF 00 00 00                        PUSH 255
 00A6 E8 05 00                              CALL '_IMPSTRCAT' (EXTERN 5)
 00A9 83 C4 0C                              ADD ESP,12
 00AC 8D 85 C8 FC FF FF                     LEA EAX,[EBP-824]
 00B2 50                                    PUSH EAX
 00B3 B8 12 00 00 00                        MOV EAX,COT+18
 00B8 50                                    PUSH EAX
 00B9 68 FF 00 00 00                        PUSH 255
 00BE E8 05 00                              CALL '_IMPSTRCAT' (EXTERN 5)
 00C1 83 C4 0C                              ADD ESP,12
 00C4 8D 85 C8 FC FF FF                     LEA EAX,[EBP-824]
 00CA 50                                    PUSH EAX
 00CB 8D 45 DA                              LEA EAX,[EBP-38]
 00CE 50                                    PUSH EAX
 00CF 68 FF 00 00 00                        PUSH 255
 00D4 E8 05 00                              CALL '_IMPSTRCAT' (EXTERN 5)
 00D7 83 C4 0C                              ADD ESP,12
 00DA 8D 85 C8 FC FF FF                     LEA EAX,[EBP-824]
 00E0 50                                    PUSH EAX
 00E1 B8 14 00 00 00                        MOV EAX,COT+20
 00E6 50                                    PUSH EAX
 00E7 68 FF 00 00 00                        PUSH 255
 00EC E8 05 00                              CALL '_IMPSTRCAT' (EXTERN 5)
 00EF 83 C4 0C                              ADD ESP,12
 00F2 8D 85 C8 FC FF FF                     LEA EAX,[EBP-824]
 00F8 50                                    PUSH EAX
 00F9 8D 45 C9                              LEA EAX,[EBP-55]
 00FC 50                                    PUSH EAX
 00FD 68 FF 00 00 00                        PUSH 255
 0102 E8 05 00                              CALL '_IMPSTRCAT' (EXTERN 5)
 0105 83 C4 0C                              ADD ESP,12
 0108 8D 85 C8 FC FF FF                     LEA EAX,[EBP-824]
 010E 50                                    PUSH EAX
 010F B8 16 00 00 00                        MOV EAX,COT+22
 0114 50                                    PUSH EAX
 0115 68 FF 00 00 00                        PUSH 255
 011A E8 05 00                              CALL '_IMPSTRCAT' (EXTERN 5)
 011D 83 C4 0C                              ADD ESP,12
 0120 8D 85 C9 FD FF FF                     LEA EAX,[EBP-567]
 0126 50                                    PUSH EAX
 0127 8D 8D C8 FC FF FF                     LEA ECX,[EBP-824]
 012D 51                                    PUSH ECX
 012E 68 FF 00 00 00                        PUSH 255
 0133 E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 0136 83 C4 0C                              ADD ESP,12

        ! For the main ones we generate, try to be helpful...
        -> esw(event) %if (0 < event < max event)
 0139 8B 45 10                              MOV EAX,[EBP+16]
 013C 3D 00 00 00 00                        CMP EAX,0
 0141 7E 00                                 JLE L1002
 0143 3D 10 00 00 00                        CMP EAX,16
 0148 7D 00                                 JGE L1002
 014A 8B 45 10                              MOV EAX,[EBP+16]
 014D C1 E0 02                              SHL EAX,2
 0150 89 C6                                 MOV ESI,EAX
 0152 FF A6 00 00 00 00                     JMP WORD [ESI+SWTAB]
 0158                      L1002  EQU $
        -> esw(max event - 1)
 0158 BF 3C 00 00 00                        MOV EDI,60
 015D FF A7 00 00 00 00                     JMP WORD [EDI+SWTAB]
    esw(0):
 0163                      L1003  EQU $
        %begin
 0163 E8 00 00                              CALL '$L1004' (INTERNAL L1004 )
 0166 EB 00                                 JMP L1005
 0168                      L1004  EQU $
 0168 C8 00 00 02                           ENTER 0000,2
           ! sub value has full integer range
           %if (sub < 0) %then msg = "Abandon program, sauve qui puet!"
 016C 8B 5D FC                              MOV EBX,[EBP-4]
 016F 8B 43 0C                              MOV EAX,[EBX+12]
 0172 3D 00 00 00 00                        CMP EAX,0
 0177 7D 00                                 JGE L1006
 0179 8D 83 C9 FE FF FF                     LEA EAX,[EBX-311]
 017F 50                                    PUSH EAX
 0180 B9 18 00 00 00                        MOV ECX,COT+24
 0185 51                                    PUSH ECX
 0186 68 FF 00 00 00                        PUSH 255
 018B E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 018E 83 C4 0C                              ADD ESP,12
 0191                      L1006  EQU $
           %if (sub = 0) %then msg = "%stop"
 0191 8B 75 FC                              MOV ESI,[EBP-4]
 0194 8B 46 0C                              MOV EAX,[ESI+12]
 0197 3D 00 00 00 00                        CMP EAX,0
 019C 75 00                                 JNE L1007
 019E 8D 86 C9 FE FF FF                     LEA EAX,[ESI-311]
 01A4 50                                    PUSH EAX
 01A5 B9 39 00 00 00                        MOV ECX,COT+57
 01AA 51                                    PUSH ECX
 01AB 68 FF 00 00 00                        PUSH 255
 01B0 E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 01B3 83 C4 0C                              ADD ESP,12
 01B6                      L1007  EQU $
           %if (sub > 0) %then msg = "User generated error. ".s
 01B6 8B 7D FC                              MOV EDI,[EBP-4]
 01B9 8B 47 0C                              MOV EAX,[EDI+12]
 01BC 3D 00 00 00 00                        CMP EAX,0
 01C1 7E 00                                 JLE L1008
 01C3 8D 85 F8 FE FF FF                     LEA EAX,[EBP-264]
 01C9 50                                    PUSH EAX
 01CA B8 3F 00 00 00                        MOV EAX,COT+63
 01CF 50                                    PUSH EAX
 01D0 68 FF 00 00 00                        PUSH 255
 01D5 E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 01D8 83 C4 0C                              ADD ESP,12
 01DB 8D 85 F8 FE FF FF                     LEA EAX,[EBP-264]
 01E1 50                                    PUSH EAX
 01E2 8B 5D FC                              MOV EBX,[EBP-4]
 01E5 8D 43 DA                              LEA EAX,[EBX-38]
 01E8 50                                    PUSH EAX
 01E9 68 FF 00 00 00                        PUSH 255
 01EE E8 05 00                              CALL '_IMPSTRCAT' (EXTERN 5)
 01F1 83 C4 0C                              ADD ESP,12
 01F4 8B 75 FC                              MOV ESI,[EBP-4]
 01F7 8D 86 C9 FE FF FF                     LEA EAX,[ESI-311]
 01FD 50                                    PUSH EAX
 01FE 8D 8D F8 FE FF FF                     LEA ECX,[EBP-264]
 0204 51                                    PUSH ECX
 0205 68 FF 00 00 00                        PUSH 255
 020A E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 020D 83 C4 0C                              ADD ESP,12
 0210                      L1008  EQU $
        %end
 0210 C9                                    LEAVE
 0211 C3                                    RET
 0212                      L1005  EQU $
        -> esac
 0212 EB 00                                 JMP L1009
    esw(1):
 0214                      L1010  EQU $
        %begin
 0214 E8 00 00                              CALL '$L1011' (INTERNAL L1011 )
 0217 EB 00                                 JMP L1012
 0219                      L1011  EQU $
 0219 C8 00 00 02                           ENTER 0000,2
           %switch ssw(0:15)
           -> ssw(sub&16_f)
 021D 8B 7D FC                              MOV EDI,[EBP-4]
 0220 8B 47 0C                              MOV EAX,[EDI+12]
 0223 25 0F 00 00 00                        AND EAX,15
 0228 C1 E0 02                              SHL EAX,2
 022B 89 C3                                 MOV EBX,EAX
 022D FF A3 40 00 00 00                     JMP WORD [EBX+SWTAB+64]
        ssw(1): msg = "Integer overflow"  ; -> es
 0233                      L1013  EQU $
 0233 8B 75 FC                              MOV ESI,[EBP-4]
 0236 8D 86 C9 FE FF FF                     LEA EAX,[ESI-311]
 023C 50                                    PUSH EAX
 023D B9 56 00 00 00                        MOV ECX,COT+86
 0242 51                                    PUSH ECX
 0243 68 FF 00 00 00                        PUSH 255
 0248 E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 024B 83 C4 0C                              ADD ESP,12
 024E EB 00                                 JMP L1014
        ssw(2): msg = "Real overflow"     ; -> es
 0250                      L1015  EQU $
 0250 8B 7D FC                              MOV EDI,[EBP-4]
 0253 8D 87 C9 FE FF FF                     LEA EAX,[EDI-311]
 0259 50                                    PUSH EAX
 025A B9 67 00 00 00                        MOV ECX,COT+103
 025F 51                                    PUSH ECX
 0260 68 FF 00 00 00                        PUSH 255
 0265 E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 0268 83 C4 0C                              ADD ESP,12
 026B EB 00                                 JMP L1014
        ssw(3): msg = "String overflow"   ; -> es
 026D                      L1016  EQU $
 026D 8B 5D FC                              MOV EBX,[EBP-4]
 0270 8D 83 C9 FE FF FF                     LEA EAX,[EBX-311]
 0276 50                                    PUSH EAX
 0277 B9 75 00 00 00                        MOV ECX,COT+117
 027C 51                                    PUSH ECX
 027D 68 FF 00 00 00                        PUSH 255
 0282 E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 0285 83 C4 0C                              ADD ESP,12
 0288 EB 00                                 JMP L1014
        ssw(4): msg = "Division by zero"  ; -> es
 028A                      L1017  EQU $
 028A 8B 75 FC                              MOV ESI,[EBP-4]
 028D 8D 86 C9 FE FF FF                     LEA EAX,[ESI-311]
 0293 50                                    PUSH EAX
 0294 B9 85 00 00 00                        MOV ECX,COT+133
 0299 51                                    PUSH ECX
 029A 68 FF 00 00 00                        PUSH 255
 029F E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 02A2 83 C4 0C                              ADD ESP,12
 02A5 EB 00                                 JMP L1014
        ssw(5): msg = "Truncation"        ; -> es
 02A7                      L1018  EQU $
 02A7 8B 7D FC                              MOV EDI,[EBP-4]
 02AA 8D 87 C9 FE FF FF                     LEA EAX,[EDI-311]
 02B0 50                                    PUSH EAX
 02B1 B9 96 00 00 00                        MOV ECX,COT+150
 02B6 51                                    PUSH ECX
 02B7 68 FF 00 00 00                        PUSH 255
 02BC E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 02BF 83 C4 0C                              ADD ESP,12
 02C2 EB 00                                 JMP L1014
        ssw(*): msg = "Overflow ".eventmsg; -> es
 02C4                      L1019  EQU $
 02C4                      L1020  EQU $
 02C4                      L1021  EQU $
 02C4                      L1022  EQU $
 02C4                      L1023  EQU $
 02C4                      L1024  EQU $
 02C4                      L1025  EQU $
 02C4                      L1026  EQU $
 02C4                      L1027  EQU $
 02C4                      L1028  EQU $
 02C4                      L1029  EQU $
 02C4 8D 85 F8 FE FF FF                     LEA EAX,[EBP-264]
 02CA 50                                    PUSH EAX
 02CB B8 A1 00 00 00                        MOV EAX,COT+161
 02D0 50                                    PUSH EAX
 02D1 68 FF 00 00 00                        PUSH 255
 02D6 E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 02D9 83 C4 0C                              ADD ESP,12
 02DC 8D 85 F8 FE FF FF                     LEA EAX,[EBP-264]
 02E2 50                                    PUSH EAX
 02E3 8B 5D FC                              MOV EBX,[EBP-4]
 02E6 8D 83 C9 FD FF FF                     LEA EAX,[EBX-567]
 02EC 50                                    PUSH EAX
 02ED 68 FF 00 00 00                        PUSH 255
 02F2 E8 05 00                              CALL '_IMPSTRCAT' (EXTERN 5)
 02F5 83 C4 0C                              ADD ESP,12
 02F8 8B 75 FC                              MOV ESI,[EBP-4]
 02FB 8D 86 C9 FE FF FF                     LEA EAX,[ESI-311]
 0301 50                                    PUSH EAX
 0302 8D 8D F8 FE FF FF                     LEA ECX,[EBP-264]
 0308 51                                    PUSH ECX
 0309 68 FF 00 00 00                        PUSH 255
 030E E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 0311 83 C4 0C                              ADD ESP,12
 0314 EB 00                                 JMP L1014
        es:
 0316                      L1014  EQU $
        %end
 0316 C9                                    LEAVE
 0317 C3                                    RET
 0318                      L1012  EQU $
        -> esac
 0318 EB 00                                 JMP L1009
    esw(2):
 031A                      L1030  EQU $
        %begin
 031A E8 00 00                              CALL '$L1031' (INTERNAL L1031 )
 031D EB 00                                 JMP L1032
 031F                      L1031  EQU $
 031F C8 00 00 02                           ENTER 0000,2
            %switch ssw(0:15)
            -> ssw(sub&16_f)
 0323 8B 7D FC                              MOV EDI,[EBP-4]
 0326 8B 47 0C                              MOV EAX,[EDI+12]
 0329 25 0F 00 00 00                        AND EAX,15
 032E C1 E0 02                              SHL EAX,2
 0331 89 C3                                 MOV EBX,EAX
 0333 FF A3 80 00 00 00                     JMP WORD [EBX+SWTAB+128]
        ssw(1): msg = "Not enough store"         ; -> es
 0339                      L1033  EQU $
 0339 8B 75 FC                              MOV ESI,[EBP-4]
 033C 8D 86 C9 FE FF FF                     LEA EAX,[ESI-311]
 0342 50                                    PUSH EAX
 0343 B9 AB 00 00 00                        MOV ECX,COT+171
 0348 51                                    PUSH ECX
 0349 68 FF 00 00 00                        PUSH 255
 034E E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 0351 83 C4 0C                              ADD ESP,12
 0354 EB 00                                 JMP L1034
        ssw(2): msg = "Output exceeded"          ; -> es
 0356                      L1035  EQU $
 0356 8B 7D FC                              MOV EDI,[EBP-4]
 0359 8D 87 C9 FE FF FF                     LEA EAX,[EDI-311]
 035F 50                                    PUSH EAX
 0360 B9 BC 00 00 00                        MOV ECX,COT+188
 0365 51                                    PUSH ECX
 0366 68 FF 00 00 00                        PUSH 255
 036B E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 036E 83 C4 0C                              ADD ESP,12
 0371 EB 00                                 JMP L1034
        ssw(3): msg = "Time exceeded"            ; -> es
 0373                      L1036  EQU $
 0373 8B 5D FC                              MOV EBX,[EBP-4]
 0376 8D 83 C9 FE FF FF                     LEA EAX,[EBX-311]
 037C 50                                    PUSH EAX
 037D B9 CC 00 00 00                        MOV ECX,COT+204
 0382 51                                    PUSH ECX
 0383 68 FF 00 00 00                        PUSH 255
 0388 E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 038B 83 C4 0C                              ADD ESP,12
 038E EB 00                                 JMP L1034
        ssw(*): msg = "Excess Resource ".eventmsg; -> es
 0390                      L1037  EQU $
 0390                      L1038  EQU $
 0390                      L1039  EQU $
 0390                      L1040  EQU $
 0390                      L1041  EQU $
 0390                      L1042  EQU $
 0390                      L1043  EQU $
 0390                      L1044  EQU $
 0390                      L1045  EQU $
 0390                      L1046  EQU $
 0390                      L1047  EQU $
 0390                      L1048  EQU $
 0390                      L1049  EQU $
 0390 8D 85 F8 FE FF FF                     LEA EAX,[EBP-264]
 0396 50                                    PUSH EAX
 0397 B8 DA 00 00 00                        MOV EAX,COT+218
 039C 50                                    PUSH EAX
 039D 68 FF 00 00 00                        PUSH 255
 03A2 E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 03A5 83 C4 0C                              ADD ESP,12
 03A8 8D 85 F8 FE FF FF                     LEA EAX,[EBP-264]
 03AE 50                                    PUSH EAX
 03AF 8B 75 FC                              MOV ESI,[EBP-4]
 03B2 8D 86 C9 FD FF FF                     LEA EAX,[ESI-567]
 03B8 50                                    PUSH EAX
 03B9 68 FF 00 00 00                        PUSH 255
 03BE E8 05 00                              CALL '_IMPSTRCAT' (EXTERN 5)
 03C1 83 C4 0C                              ADD ESP,12
 03C4 8B 7D FC                              MOV EDI,[EBP-4]
 03C7 8D 87 C9 FE FF FF                     LEA EAX,[EDI-311]
 03CD 50                                    PUSH EAX
 03CE 8D 8D F8 FE FF FF                     LEA ECX,[EBP-264]
 03D4 51                                    PUSH ECX
 03D5 68 FF 00 00 00                        PUSH 255
 03DA E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 03DD 83 C4 0C                              ADD ESP,12
 03E0 EB 00                                 JMP L1034
        es:
 03E2                      L1034  EQU $
        %end
 03E2 C9                                    LEAVE
 03E3 C3                                    RET
 03E4                      L1032  EQU $
        -> esac
 03E4 EB 00                                 JMP L1009
    esw(3):
 03E6                      L1050  EQU $
        %begin
 03E6 E8 00 00                              CALL '$L1051' (INTERNAL L1051 )
 03E9 EB 00                                 JMP L1052
 03EB                      L1051  EQU $
 03EB C8 00 00 02                           ENTER 0000,2
            %switch ssw(0:15)
            -> ssw(sub&16_f)
 03EF 8B 5D FC                              MOV EBX,[EBP-4]
 03F2 8B 43 0C                              MOV EAX,[EBX+12]
 03F5 25 0F 00 00 00                        AND EAX,15
 03FA C1 E0 02                              SHL EAX,2
 03FD 89 C6                                 MOV ESI,EAX
 03FF FF A6 C0 00 00 00                     JMP WORD [ESI+SWTAB+192]
        ssw(1): msg = "Data error - Symbol '".tostring(info&16_ff)."' (".x.")"; -> es
 0405                      L1053  EQU $
 0405 8B 7D FC                              MOV EDI,[EBP-4]
 0408 8B 47 08                              MOV EAX,[EDI+8]
 040B 25 FF 00 00 00                        AND EAX,255
                                      Generating CODE for 'TO STRING' (MACRO 3)
 0410 C7 45 F4 01 00 00 00                  MOV LONG [EBP-12],1
 0417 88 45 F5                              MOV [EBP-11],AL
                                      CALL 'TO STRING' (MACRO 3)
 041A 8D 85 F4 FE FF FF                     LEA EAX,[EBP-268]
 0420 50                                    PUSH EAX
 0421 B8 EB 00 00 00                        MOV EAX,COT+235
 0426 50                                    PUSH EAX
 0427 68 FF 00 00 00                        PUSH 255
 042C E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 042F 83 C4 0C                              ADD ESP,12
 0432 8D 85 F4 FE FF FF                     LEA EAX,[EBP-268]
 0438 50                                    PUSH EAX
 0439 8D 45 F4                              LEA EAX,[EBP-12]
 043C 50                                    PUSH EAX
 043D 68 FF 00 00 00                        PUSH 255
 0442 E8 05 00                              CALL '_IMPSTRCAT' (EXTERN 5)
 0445 83 C4 0C                              ADD ESP,12
 0448 8D 85 F4 FE FF FF                     LEA EAX,[EBP-268]
 044E 50                                    PUSH EAX
 044F B8 01 01 00 00                        MOV EAX,COT+257
 0454 50                                    PUSH EAX
 0455 68 FF 00 00 00                        PUSH 255
 045A E8 05 00                              CALL '_IMPSTRCAT' (EXTERN 5)
 045D 83 C4 0C                              ADD ESP,12
 0460 8D 85 F4 FE FF FF                     LEA EAX,[EBP-268]
 0466 50                                    PUSH EAX
 0467 8B 5D FC                              MOV EBX,[EBP-4]
 046A 8D 43 C9                              LEA EAX,[EBX-55]
 046D 50                                    PUSH EAX
 046E 68 FF 00 00 00                        PUSH 255
 0473 E8 05 00                              CALL '_IMPSTRCAT' (EXTERN 5)
 0476 83 C4 0C                              ADD ESP,12
 0479 8D 85 F4 FE FF FF                     LEA EAX,[EBP-268]
 047F 50                                    PUSH EAX
 0480 B8 05 01 00 00                        MOV EAX,COT+261
 0485 50                                    PUSH EAX
 0486 68 FF 00 00 00                        PUSH 255
 048B E8 05 00                              CALL '_IMPSTRCAT' (EXTERN 5)
 048E 83 C4 0C                              ADD ESP,12
 0491 8B 75 FC                              MOV ESI,[EBP-4]
 0494 8D 86 C9 FE FF FF                     LEA EAX,[ESI-311]
 049A 50                                    PUSH EAX
 049B 8D 8D F4 FE FF FF                     LEA ECX,[EBP-268]
 04A1 51                                    PUSH ECX
 04A2 68 FF 00 00 00                        PUSH 255
 04A7 E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 04AA 83 C4 0C                              ADD ESP,12
 04AD EB 00                                 JMP L1054
        ssw(*): msg = "Data error ".eventmsg                                  ; -> es
 04AF                      L1055  EQU $
 04AF                      L1056  EQU $
 04AF                      L1057  EQU $
 04AF                      L1058  EQU $
 04AF                      L1059  EQU $
 04AF                      L1060  EQU $
 04AF                      L1061  EQU $
 04AF                      L1062  EQU $
 04AF                      L1063  EQU $
 04AF                      L1064  EQU $
 04AF                      L1065  EQU $
 04AF                      L1066  EQU $
 04AF                      L1067  EQU $
 04AF                      L1068  EQU $
 04AF                      L1069  EQU $
 04AF 8D 85 F4 FE FF FF                     LEA EAX,[EBP-268]
 04B5 50                                    PUSH EAX
 04B6 B8 07 01 00 00                        MOV EAX,COT+263
 04BB 50                                    PUSH EAX
 04BC 68 FF 00 00 00                        PUSH 255
 04C1 E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 04C4 83 C4 0C                              ADD ESP,12
 04C7 8D 85 F4 FE FF FF                     LEA EAX,[EBP-268]
 04CD 50                                    PUSH EAX
 04CE 8B 7D FC                              MOV EDI,[EBP-4]
 04D1 8D 87 C9 FD FF FF                     LEA EAX,[EDI-567]
 04D7 50                                    PUSH EAX
 04D8 68 FF 00 00 00                        PUSH 255
 04DD E8 05 00                              CALL '_IMPSTRCAT' (EXTERN 5)
 04E0 83 C4 0C                              ADD ESP,12
 04E3 8B 5D FC                              MOV EBX,[EBP-4]
 04E6 8D 83 C9 FE FF FF                     LEA EAX,[EBX-311]
 04EC 50                                    PUSH EAX
 04ED 8D 8D F4 FE FF FF                     LEA ECX,[EBP-268]
 04F3 51                                    PUSH ECX
 04F4 68 FF 00 00 00                        PUSH 255
 04F9 E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 04FC 83 C4 0C                              ADD ESP,12
 04FF EB 00                                 JMP L1054
        es:
 0501                      L1054  EQU $
        %end
 0501 C9                                    LEAVE
 0502 C3                                    RET
 0503                      L1052  EQU $
        -> esac
 0503 EB 00                                 JMP L1009
    esw(4):
 0505                      L1070  EQU $
        %begin
 0505 E8 00 00                              CALL '$L1071' (INTERNAL L1071 )
 0508 EB 00                                 JMP L1072
 050A                      L1071  EQU $
 050A C8 00 00 02                           ENTER 0000,2
            %switch ssw(0:15)
            -> ssw(sub&16_f)
 050E 8B 75 FC                              MOV ESI,[EBP-4]
 0511 8B 46 0C                              MOV EAX,[ESI+12]
 0514 25 0F 00 00 00                        AND EAX,15
 0519 C1 E0 02                              SHL EAX,2
 051C 89 C7                                 MOV EDI,EAX
 051E FF A7 00 01 00 00                     JMP WORD [EDI+SWTAB+256]
        ssw(1): msg = "Symbol in data"        ; -> es
 0524                      L1073  EQU $
 0524 8B 5D FC                              MOV EBX,[EBP-4]
 0527 8D 83 C9 FE FF FF                     LEA EAX,[EBX-311]
 052D 50                                    PUSH EAX
 052E B9 13 01 00 00                        MOV ECX,COT+275
 0533 51                                    PUSH ECX
 0534 68 FF 00 00 00                        PUSH 255
 0539 E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 053C 83 C4 0C                              ADD ESP,12
 053F EB 00                                 JMP L1074
        ssw(*): msg = "Invalid data ".eventmsg; -> es
 0541                      L1075  EQU $
 0541                      L1076  EQU $
 0541                      L1077  EQU $
 0541                      L1078  EQU $
 0541                      L1079  EQU $
 0541                      L1080  EQU $
 0541                      L1081  EQU $
 0541                      L1082  EQU $
 0541                      L1083  EQU $
 0541                      L1084  EQU $
 0541                      L1085  EQU $
 0541                      L1086  EQU $
 0541                      L1087  EQU $
 0541                      L1088  EQU $
 0541                      L1089  EQU $
 0541 8D 85 F8 FE FF FF                     LEA EAX,[EBP-264]
 0547 50                                    PUSH EAX
 0548 B8 22 01 00 00                        MOV EAX,COT+290
 054D 50                                    PUSH EAX
 054E 68 FF 00 00 00                        PUSH 255
 0553 E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 0556 83 C4 0C                              ADD ESP,12
 0559 8D 85 F8 FE FF FF                     LEA EAX,[EBP-264]
 055F 50                                    PUSH EAX
 0560 8B 75 FC                              MOV ESI,[EBP-4]
 0563 8D 86 C9 FD FF FF                     LEA EAX,[ESI-567]
 0569 50                                    PUSH EAX
 056A 68 FF 00 00 00                        PUSH 255
 056F E8 05 00                              CALL '_IMPSTRCAT' (EXTERN 5)
 0572 83 C4 0C                              ADD ESP,12
 0575 8B 7D FC                              MOV EDI,[EBP-4]
 0578 8D 87 C9 FE FF FF                     LEA EAX,[EDI-311]
 057E 50                                    PUSH EAX
 057F 8D 8D F8 FE FF FF                     LEA ECX,[EBP-264]
 0585 51                                    PUSH ECX
 0586 68 FF 00 00 00                        PUSH 255
 058B E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 058E 83 C4 0C                              ADD ESP,12
 0591 EB 00                                 JMP L1074
        es:
 0593                      L1074  EQU $
        %end
 0593 C9                                    LEAVE
 0594 C3                                    RET
 0595                      L1072  EQU $
        -> esac
 0595 EB 00                                 JMP L1009
    esw(5):
 0597                      L1090  EQU $
        %begin
 0597 E8 00 00                              CALL '$L1091' (INTERNAL L1091 )
 059A EB 00                                 JMP L1092
 059C                      L1091  EQU $
 059C C8 00 00 02                           ENTER 0000,2
            %switch ssw(0:15)
            -> ssw(sub&16_f)
 05A0 8B 5D FC                              MOV EBX,[EBP-4]
 05A3 8B 43 0C                              MOV EAX,[EBX+12]
 05A6 25 0F 00 00 00                        AND EAX,15
 05AB C1 E0 02                              SHL EAX,2
 05AE 89 C6                                 MOV ESI,EAX
 05B0 FF A6 40 01 00 00                     JMP WORD [ESI+SWTAB+320]
        ssw(1): msg = "Illegal FOR loop"                                           ; -> es
 05B6                      L1093  EQU $
 05B6 8B 7D FC                              MOV EDI,[EBP-4]
 05B9 8D 87 C9 FE FF FF                     LEA EAX,[EDI-311]
 05BF 50                                    PUSH EAX
 05C0 B9 30 01 00 00                        MOV ECX,COT+304
 05C5 51                                    PUSH ECX
 05C6 68 FF 00 00 00                        PUSH 255
 05CB E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 05CE 83 C4 0C                              ADD ESP,12
 05D1 EB 00                                 JMP L1094
        ssw(2): msg = "Illegal exponent - Exponent = ".x                           ; -> es 
 05D3                      L1095  EQU $
 05D3 8D 85 F8 FE FF FF                     LEA EAX,[EBP-264]
 05D9 50                                    PUSH EAX
 05DA B8 41 01 00 00                        MOV EAX,COT+321
 05DF 50                                    PUSH EAX
 05E0 68 FF 00 00 00                        PUSH 255
 05E5 E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 05E8 83 C4 0C                              ADD ESP,12
 05EB 8D 85 F8 FE FF FF                     LEA EAX,[EBP-264]
 05F1 50                                    PUSH EAX
 05F2 8B 5D FC                              MOV EBX,[EBP-4]
 05F5 8D 43 C9                              LEA EAX,[EBX-55]
 05F8 50                                    PUSH EAX
 05F9 68 FF 00 00 00                        PUSH 255
 05FE E8 05 00                              CALL '_IMPSTRCAT' (EXTERN 5)
 0601 83 C4 0C                              ADD ESP,12
 0604 8B 75 FC                              MOV ESI,[EBP-4]
 0607 8D 86 C9 FE FF FF                     LEA EAX,[ESI-311]
 060D 50                                    PUSH EAX
 060E 8D 8D F8 FE FF FF                     LEA ECX,[EBP-264]
 0614 51                                    PUSH ECX
 0615 68 FF 00 00 00                        PUSH 255
 061A E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 061D 83 C4 0C                              ADD ESP,12
 0620 EB 00                                 JMP L1094
        ssw(3): msg = "Array inside-out"                                           ; -> es
 0622                      L1096  EQU $
 0622 8B 7D FC                              MOV EDI,[EBP-4]
 0625 8D 87 C9 FE FF FF                     LEA EAX,[EDI-311]
 062B 50                                    PUSH EAX
 062C B9 60 01 00 00                        MOV ECX,COT+352
 0631 51                                    PUSH ECX
 0632 68 FF 00 00 00                        PUSH 255
 0637 E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 063A 83 C4 0C                              ADD ESP,12
 063D EB 00                                 JMP L1094
        ssw(4): msg = "String inside-out"                                          ; -> es
 063F                      L1097  EQU $
 063F 8B 5D FC                              MOV EBX,[EBP-4]
 0642 8D 83 C9 FE FF FF                     LEA EAX,[EBX-311]
 0648 50                                    PUSH EAX
 0649 B9 71 01 00 00                        MOV ECX,COT+369
 064E 51                                    PUSH ECX
 064F 68 FF 00 00 00                        PUSH 255
 0654 E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 0657 83 C4 0C                              ADD ESP,12
 065A EB 00                                 JMP L1094
        ssw(5): msg = "Illegal exponent '".x."'"                                   ; -> es
 065C                      L1098  EQU $
 065C 8D 85 F8 FE FF FF                     LEA EAX,[EBP-264]
 0662 50                                    PUSH EAX
 0663 B8 83 01 00 00                        MOV EAX,COT+387
 0668 50                                    PUSH EAX
 0669 68 FF 00 00 00                        PUSH 255
 066E E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 0671 83 C4 0C                              ADD ESP,12
 0674 8D 85 F8 FE FF FF                     LEA EAX,[EBP-264]
 067A 50                                    PUSH EAX
 067B 8B 75 FC                              MOV ESI,[EBP-4]
 067E 8D 46 C9                              LEA EAX,[ESI-55]
 0681 50                                    PUSH EAX
 0682 68 FF 00 00 00                        PUSH 255
 0687 E8 05 00                              CALL '_IMPSTRCAT' (EXTERN 5)
 068A 83 C4 0C                              ADD ESP,12
 068D 8D 85 F8 FE FF FF                     LEA EAX,[EBP-264]
 0693 50                                    PUSH EAX
 0694 B8 96 01 00 00                        MOV EAX,COT+406
 0699 50                                    PUSH EAX
 069A 68 FF 00 00 00                        PUSH 255
 069F E8 05 00                              CALL '_IMPSTRCAT' (EXTERN 5)
 06A2 83 C4 0C                              ADD ESP,12
 06A5 8B 7D FC                              MOV EDI,[EBP-4]
 06A8 8D 87 C9 FE FF FF                     LEA EAX,[EDI-311]
 06AE 50                                    PUSH EAX
 06AF 8D 8D F8 FE FF FF                     LEA ECX,[EBP-264]
 06B5 51                                    PUSH ECX
 06B6 68 FF 00 00 00                        PUSH 255
 06BB E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 06BE 83 C4 0C                              ADD ESP,12
 06C1 EB 00                                 JMP L1094
        ssw(*): msg = "Invalid argument - '".e." Sub-class = ".s.", Value = ".x."'"; -> es
 06C3                      L1099  EQU $
 06C3                      L1100  EQU $
 06C3                      L1101  EQU $
 06C3                      L1102  EQU $
 06C3                      L1103  EQU $
 06C3                      L1104  EQU $
 06C3                      L1105  EQU $
 06C3                      L1106  EQU $
 06C3                      L1107  EQU $
 06C3                      L1108  EQU $
 06C3                      L1109  EQU $
 06C3 8D 85 F8 FE FF FF                     LEA EAX,[EBP-264]
 06C9 50                                    PUSH EAX
 06CA B8 98 01 00 00                        MOV EAX,COT+408
 06CF 50                                    PUSH EAX
 06D0 68 FF 00 00 00                        PUSH 255
 06D5 E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 06D8 83 C4 0C                              ADD ESP,12
 06DB 8D 85 F8 FE FF FF                     LEA EAX,[EBP-264]
 06E1 50                                    PUSH EAX
 06E2 8B 5D FC                              MOV EBX,[EBP-4]
 06E5 8D 43 EB                              LEA EAX,[EBX-21]
 06E8 50                                    PUSH EAX
 06E9 68 FF 00 00 00                        PUSH 255
 06EE E8 05 00                              CALL '_IMPSTRCAT' (EXTERN 5)
 06F1 83 C4 0C                              ADD ESP,12
 06F4 8D 85 F8 FE FF FF                     LEA EAX,[EBP-264]
 06FA 50                                    PUSH EAX
 06FB B8 AD 01 00 00                        MOV EAX,COT+429
 0700 50                                    PUSH EAX
 0701 68 FF 00 00 00                        PUSH 255
 0706 E8 05 00                              CALL '_IMPSTRCAT' (EXTERN 5)
 0709 83 C4 0C                              ADD ESP,12
 070C 8D 85 F8 FE FF FF                     LEA EAX,[EBP-264]
 0712 50                                    PUSH EAX
 0713 8B 75 FC                              MOV ESI,[EBP-4]
 0716 8D 46 DA                              LEA EAX,[ESI-38]
 0719 50                                    PUSH EAX
 071A 68 FF 00 00 00                        PUSH 255
 071F E8 05 00                              CALL '_IMPSTRCAT' (EXTERN 5)
 0722 83 C4 0C                              ADD ESP,12
 0725 8D 85 F8 FE FF FF                     LEA EAX,[EBP-264]
 072B 50                                    PUSH EAX
 072C B8 BB 01 00 00                        MOV EAX,COT+443
 0731 50                                    PUSH EAX
 0732 68 FF 00 00 00                        PUSH 255
 0737 E8 05 00                              CALL '_IMPSTRCAT' (EXTERN 5)
 073A 83 C4 0C                              ADD ESP,12
 073D 8D 85 F8 FE FF FF                     LEA EAX,[EBP-264]
 0743 50                                    PUSH EAX
 0744 8B 7D FC                              MOV EDI,[EBP-4]
 0747 8D 47 C9                              LEA EAX,[EDI-55]
 074A 50                                    PUSH EAX
 074B 68 FF 00 00 00                        PUSH 255
 0750 E8 05 00                              CALL '_IMPSTRCAT' (EXTERN 5)
 0753 83 C4 0C                              ADD ESP,12
 0756 8D 85 F8 FE FF FF                     LEA EAX,[EBP-264]
 075C 50                                    PUSH EAX
 075D B8 C6 01 00 00                        MOV EAX,COT+454
 0762 50                                    PUSH EAX
 0763 68 FF 00 00 00                        PUSH 255
 0768 E8 05 00                              CALL '_IMPSTRCAT' (EXTERN 5)
 076B 83 C4 0C                              ADD ESP,12
 076E 8B 5D FC                              MOV EBX,[EBP-4]
 0771 8D 83 C9 FE FF FF                     LEA EAX,[EBX-311]
 0777 50                                    PUSH EAX
 0778 8D 8D F8 FE FF FF                     LEA ECX,[EBP-264]
 077E 51                                    PUSH ECX
 077F 68 FF 00 00 00                        PUSH 255
 0784 E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 0787 83 C4 0C                              ADD ESP,12
 078A EB 00                                 JMP L1094
        es:
 078C                      L1094  EQU $
        %end
 078C C9                                    LEAVE
 078D C3                                    RET
 078E                      L1092  EQU $
        -> esac
 078E EB 00                                 JMP L1009
    esw(6):
 0790                      L1110  EQU $
        %begin
 0790 E8 00 00                              CALL '$L1111' (INTERNAL L1111 )
 0793 EB 00                                 JMP L1112
 0795                      L1111  EQU $
 0795 C8 00 00 02                           ENTER 0000,2
            %switch ssw(0:15)
            -> ssw(sub&16_f)
 0799 8B 75 FC                              MOV ESI,[EBP-4]
 079C 8B 46 0C                              MOV EAX,[ESI+12]
 079F 25 0F 00 00 00                        AND EAX,15
 07A4 C1 E0 02                              SHL EAX,2
 07A7 89 C7                                 MOV EDI,EAX
 07A9 FF A7 80 01 00 00                     JMP WORD [EDI+SWTAB+384]
        ssw(1): msg = "Capacity exceeded"
 07AF                      L1113  EQU $
 07AF 8B 5D FC                              MOV EBX,[EBP-4]
 07B2 8D 83 C9 FE FF FF                     LEA EAX,[EBX-311]
 07B8 50                                    PUSH EAX
 07B9 B9 C8 01 00 00                        MOV ECX,COT+456
 07BE 51                                    PUSH ECX
 07BF 68 FF 00 00 00                        PUSH 255
 07C4 E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 07C7 83 C4 0C                              ADD ESP,12
                %if (info = 1) %then msg = msg." (String copy overflow)"
 07CA 8B 75 FC                              MOV ESI,[EBP-4]
 07CD 8B 46 08                              MOV EAX,[ESI+8]
 07D0 3D 01 00 00 00                        CMP EAX,1
 07D5 75 00                                 JNE L1114
 07D7 8D 86 C9 FE FF FF                     LEA EAX,[ESI-311]
 07DD 50                                    PUSH EAX
 07DE B9 DA 01 00 00                        MOV ECX,COT+474
 07E3 51                                    PUSH ECX
 07E4 68 FF 00 00 00                        PUSH 255
 07E9 E8 05 00                              CALL '_IMPSTRCAT' (EXTERN 5)
 07EC 83 C4 0C                              ADD ESP,12
 07EF                      L1114  EQU $
                %if (info = 2) %then msg = msg." (String append overflow)"
 07EF 8B 7D FC                              MOV EDI,[EBP-4]
 07F2 8B 47 08                              MOV EAX,[EDI+8]
 07F5 3D 02 00 00 00                        CMP EAX,2
 07FA 75 00                                 JNE L1115
 07FC 8D 87 C9 FE FF FF                     LEA EAX,[EDI-311]
 0802 50                                    PUSH EAX
 0803 B9 F2 01 00 00                        MOV ECX,COT+498
 0808 51                                    PUSH ECX
 0809 68 FF 00 00 00                        PUSH 255
 080E E8 05 00                              CALL '_IMPSTRCAT' (EXTERN 5)
 0811 83 C4 0C                              ADD ESP,12
 0814                      L1115  EQU $
                msg=msg."."                                                      ; -> es
 0814 8B 5D FC                              MOV EBX,[EBP-4]
 0817 8D 83 C9 FE FF FF                     LEA EAX,[EBX-311]
 081D 50                                    PUSH EAX
 081E B9 0C 02 00 00                        MOV ECX,COT+524
 0823 51                                    PUSH ECX
 0824 68 FF 00 00 00                        PUSH 255
 0829 E8 05 00                              CALL '_IMPSTRCAT' (EXTERN 5)
 082C 83 C4 0C                              ADD ESP,12
 082F EB 00                                 JMP L1116
        ssw(2): msg = "Array bound fault - Index = ".x                           ; -> es
 0831                      L1117  EQU $
 0831 8D 85 F8 FE FF FF                     LEA EAX,[EBP-264]
 0837 50                                    PUSH EAX
 0838 B8 0E 02 00 00                        MOV EAX,COT+526
 083D 50                                    PUSH EAX
 083E 68 FF 00 00 00                        PUSH 255
 0843 E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 0846 83 C4 0C                              ADD ESP,12
 0849 8D 85 F8 FE FF FF                     LEA EAX,[EBP-264]
 084F 50                                    PUSH EAX
 0850 8B 75 FC                              MOV ESI,[EBP-4]
 0853 8D 46 C9                              LEA EAX,[ESI-55]
 0856 50                                    PUSH EAX
 0857 68 FF 00 00 00                        PUSH 255
 085C E8 05 00                              CALL '_IMPSTRCAT' (EXTERN 5)
 085F 83 C4 0C                              ADD ESP,12
 0862 8B 7D FC                              MOV EDI,[EBP-4]
 0865 8D 87 C9 FE FF FF                     LEA EAX,[EDI-311]
 086B 50                                    PUSH EAX
 086C 8D 8D F8 FE FF FF                     LEA ECX,[EBP-264]
 0872 51                                    PUSH ECX
 0873 68 FF 00 00 00                        PUSH 255
 0878 E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 087B 83 C4 0C                              ADD ESP,12
 087E EB 00                                 JMP L1116
        ssw(3): msg = "Switch bound fault = ".x                                  ; -> es
 0880                      L1118  EQU $
 0880 8D 85 F8 FE FF FF                     LEA EAX,[EBP-264]
 0886 50                                    PUSH EAX
 0887 B8 2B 02 00 00                        MOV EAX,COT+555
 088C 50                                    PUSH EAX
 088D 68 FF 00 00 00                        PUSH 255
 0892 E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 0895 83 C4 0C                              ADD ESP,12
 0898 8D 85 F8 FE FF FF                     LEA EAX,[EBP-264]
 089E 50                                    PUSH EAX
 089F 8B 5D FC                              MOV EBX,[EBP-4]
 08A2 8D 43 C9                              LEA EAX,[EBX-55]
 08A5 50                                    PUSH EAX
 08A6 68 FF 00 00 00                        PUSH 255
 08AB E8 05 00                              CALL '_IMPSTRCAT' (EXTERN 5)
 08AE 83 C4 0C                              ADD ESP,12
 08B1 8B 75 FC                              MOV ESI,[EBP-4]
 08B4 8D 86 C9 FE FF FF                     LEA EAX,[ESI-311]
 08BA 50                                    PUSH EAX
 08BB 8D 8D F8 FE FF FF                     LEA ECX,[EBP-264]
 08C1 51                                    PUSH ECX
 08C2 68 FF 00 00 00                        PUSH 255
 08C7 E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 08CA 83 C4 0C                              ADD ESP,12
 08CD EB 00                                 JMP L1116
        ssw(4): msg = "Illegal event signal"                                     ; -> es
 08CF                      L1119  EQU $
 08CF 8B 7D FC                              MOV EDI,[EBP-4]
 08D2 8D 87 C9 FE FF FF                     LEA EAX,[EDI-311]
 08D8 50                                    PUSH EAX
 08D9 B9 41 02 00 00                        MOV ECX,COT+577
 08DE 51                                    PUSH ECX
 08DF 68 FF 00 00 00                        PUSH 255
 08E4 E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 08E7 83 C4 0C                              ADD ESP,12
 08EA EB 00                                 JMP L1116
        ssw(5): msg = "CHARNO out of range '".x."'"                              ; -> es
 08EC                      L1120  EQU $
 08EC 8D 85 F8 FE FF FF                     LEA EAX,[EBP-264]
 08F2 50                                    PUSH EAX
 08F3 B8 56 02 00 00                        MOV EAX,COT+598
 08F8 50                                    PUSH EAX
 08F9 68 FF 00 00 00                        PUSH 255
 08FE E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 0901 83 C4 0C                              ADD ESP,12
 0904 8D 85 F8 FE FF FF                     LEA EAX,[EBP-264]
 090A 50                                    PUSH EAX
 090B 8B 5D FC                              MOV EBX,[EBP-4]
 090E 8D 43 C9                              LEA EAX,[EBX-55]
 0911 50                                    PUSH EAX
 0912 68 FF 00 00 00                        PUSH 255
 0917 E8 05 00                              CALL '_IMPSTRCAT' (EXTERN 5)
 091A 83 C4 0C                              ADD ESP,12
 091D 8D 85 F8 FE FF FF                     LEA EAX,[EBP-264]
 0923 50                                    PUSH EAX
 0924 B8 6C 02 00 00                        MOV EAX,COT+620
 0929 50                                    PUSH EAX
 092A 68 FF 00 00 00                        PUSH 255
 092F E8 05 00                              CALL '_IMPSTRCAT' (EXTERN 5)
 0932 83 C4 0C                              ADD ESP,12
 0935 8B 75 FC                              MOV ESI,[EBP-4]
 0938 8D 86 C9 FE FF FF                     LEA EAX,[ESI-311]
 093E 50                                    PUSH EAX
 093F 8D 8D F8 FE FF FF                     LEA ECX,[EBP-264]
 0945 51                                    PUSH ECX
 0946 68 FF 00 00 00                        PUSH 255
 094B E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 094E 83 C4 0C                              ADD ESP,12
 0951 EB 00                                 JMP L1116
        ssw(6): msg = "TOSTRING out of range '".x."'"                            ; -> es
 0953                      L1121  EQU $
 0953 8D 85 F8 FE FF FF                     LEA EAX,[EBP-264]
 0959 50                                    PUSH EAX
 095A B8 6E 02 00 00                        MOV EAX,COT+622
 095F 50                                    PUSH EAX
 0960 68 FF 00 00 00                        PUSH 255
 0965 E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 0968 83 C4 0C                              ADD ESP,12
 096B 8D 85 F8 FE FF FF                     LEA EAX,[EBP-264]
 0971 50                                    PUSH EAX
 0972 8B 7D FC                              MOV EDI,[EBP-4]
 0975 8D 47 C9                              LEA EAX,[EDI-55]
 0978 50                                    PUSH EAX
 0979 68 FF 00 00 00                        PUSH 255
 097E E8 05 00                              CALL '_IMPSTRCAT' (EXTERN 5)
 0981 83 C4 0C                              ADD ESP,12
 0984 8D 85 F8 FE FF FF                     LEA EAX,[EBP-264]
 098A 50                                    PUSH EAX
 098B B8 86 02 00 00                        MOV EAX,COT+646
 0990 50                                    PUSH EAX
 0991 68 FF 00 00 00                        PUSH 255
 0996 E8 05 00                              CALL '_IMPSTRCAT' (EXTERN 5)
 0999 83 C4 0C                              ADD ESP,12
 099C 8B 5D FC                              MOV EBX,[EBP-4]
 099F 8D 83 C9 FE FF FF                     LEA EAX,[EBX-311]
 09A5 50                                    PUSH EAX
 09A6 8D 8D F8 FE FF FF                     LEA ECX,[EBP-264]
 09AC 51                                    PUSH ECX
 09AD 68 FF 00 00 00                        PUSH 255
 09B2 E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 09B5 83 C4 0C                              ADD ESP,12
 09B8 EB 00                                 JMP L1116
        ssw(7): msg = "Illegal shift '".x."'"                                    ; -> es
 09BA                      L1122  EQU $
 09BA 8D 85 F8 FE FF FF                     LEA EAX,[EBP-264]
 09C0 50                                    PUSH EAX
 09C1 B8 88 02 00 00                        MOV EAX,COT+648
 09C6 50                                    PUSH EAX
 09C7 68 FF 00 00 00                        PUSH 255
 09CC E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 09CF 83 C4 0C                              ADD ESP,12
 09D2 8D 85 F8 FE FF FF                     LEA EAX,[EBP-264]
 09D8 50                                    PUSH EAX
 09D9 8B 75 FC                              MOV ESI,[EBP-4]
 09DC 8D 46 C9                              LEA EAX,[ESI-55]
 09DF 50                                    PUSH EAX
 09E0 68 FF 00 00 00                        PUSH 255
 09E5 E8 05 00                              CALL '_IMPSTRCAT' (EXTERN 5)
 09E8 83 C4 0C                              ADD ESP,12
 09EB 8D 85 F8 FE FF FF                     LEA EAX,[EBP-264]
 09F1 50                                    PUSH EAX
 09F2 B8 98 02 00 00                        MOV EAX,COT+664
 09F7 50                                    PUSH EAX
 09F8 68 FF 00 00 00                        PUSH 255
 09FD E8 05 00                              CALL '_IMPSTRCAT' (EXTERN 5)
 0A00 83 C4 0C                              ADD ESP,12
 0A03 8B 7D FC                              MOV EDI,[EBP-4]
 0A06 8D 87 C9 FE FF FF                     LEA EAX,[EDI-311]
 0A0C 50                                    PUSH EAX
 0A0D 8D 8D F8 FE FF FF                     LEA ECX,[EBP-264]
 0A13 51                                    PUSH ECX
 0A14 68 FF 00 00 00                        PUSH 255
 0A19 E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 0A1C 83 C4 0C                              ADD ESP,12
 0A1F EB 00                                 JMP L1116
        ssw(*): msg = "Out of range fault - (Event,Sub,Info)=(".e.",".s.",".x.")"; -> es
 0A21                      L1123  EQU $
 0A21                      L1124  EQU $
 0A21                      L1125  EQU $
 0A21                      L1126  EQU $
 0A21                      L1127  EQU $
 0A21                      L1128  EQU $
 0A21                      L1129  EQU $
 0A21                      L1130  EQU $
 0A21                      L1131  EQU $
 0A21 8D 85 F8 FE FF FF                     LEA EAX,[EBP-264]
 0A27 50                                    PUSH EAX
 0A28 B8 9A 02 00 00                        MOV EAX,COT+666
 0A2D 50                                    PUSH EAX
 0A2E 68 FF 00 00 00                        PUSH 255
 0A33 E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 0A36 83 C4 0C                              ADD ESP,12
 0A39 8D 85 F8 FE FF FF                     LEA EAX,[EBP-264]
 0A3F 50                                    PUSH EAX
 0A40 8B 5D FC                              MOV EBX,[EBP-4]
 0A43 8D 43 EB                              LEA EAX,[EBX-21]
 0A46 50                                    PUSH EAX
 0A47 68 FF 00 00 00                        PUSH 255
 0A4C E8 05 00                              CALL '_IMPSTRCAT' (EXTERN 5)
 0A4F 83 C4 0C                              ADD ESP,12
 0A52 8D 85 F8 FE FF FF                     LEA EAX,[EBP-264]
 0A58 50                                    PUSH EAX
 0A59 B8 C2 02 00 00                        MOV EAX,COT+706
 0A5E 50                                    PUSH EAX
 0A5F 68 FF 00 00 00                        PUSH 255
 0A64 E8 05 00                              CALL '_IMPSTRCAT' (EXTERN 5)
 0A67 83 C4 0C                              ADD ESP,12
 0A6A 8D 85 F8 FE FF FF                     LEA EAX,[EBP-264]
 0A70 50                                    PUSH EAX
 0A71 8B 75 FC                              MOV ESI,[EBP-4]
 0A74 8D 46 DA                              LEA EAX,[ESI-38]
 0A77 50                                    PUSH EAX
 0A78 68 FF 00 00 00                        PUSH 255
 0A7D E8 05 00                              CALL '_IMPSTRCAT' (EXTERN 5)
 0A80 83 C4 0C                              ADD ESP,12
 0A83 8D 85 F8 FE FF FF                     LEA EAX,[EBP-264]
 0A89 50                                    PUSH EAX
 0A8A B8 C4 02 00 00                        MOV EAX,COT+708
 0A8F 50                                    PUSH EAX
 0A90 68 FF 00 00 00                        PUSH 255
 0A95 E8 05 00                              CALL '_IMPSTRCAT' (EXTERN 5)
 0A98 83 C4 0C                              ADD ESP,12
 0A9B 8D 85 F8 FE FF FF                     LEA EAX,[EBP-264]
 0AA1 50                                    PUSH EAX
 0AA2 8B 7D FC                              MOV EDI,[EBP-4]
 0AA5 8D 47 C9                              LEA EAX,[EDI-55]
 0AA8 50                                    PUSH EAX
 0AA9 68 FF 00 00 00                        PUSH 255
 0AAE E8 05 00                              CALL '_IMPSTRCAT' (EXTERN 5)
 0AB1 83 C4 0C                              ADD ESP,12
 0AB4 8D 85 F8 FE FF FF                     LEA EAX,[EBP-264]
 0ABA 50                                    PUSH EAX
 0ABB B8 C6 02 00 00                        MOV EAX,COT+710
 0AC0 50                                    PUSH EAX
 0AC1 68 FF 00 00 00                        PUSH 255
 0AC6 E8 05 00                              CALL '_IMPSTRCAT' (EXTERN 5)
 0AC9 83 C4 0C                              ADD ESP,12
 0ACC 8B 5D FC                              MOV EBX,[EBP-4]
 0ACF 8D 83 C9 FE FF FF                     LEA EAX,[EBX-311]
 0AD5 50                                    PUSH EAX
 0AD6 8D 8D F8 FE FF FF                     LEA ECX,[EBP-264]
 0ADC 51                                    PUSH ECX
 0ADD 68 FF 00 00 00                        PUSH 255
 0AE2 E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 0AE5 83 C4 0C                              ADD ESP,12
 0AE8 EB 00                                 JMP L1116
        es:
 0AEA                      L1116  EQU $
        %end
 0AEA C9                                    LEAVE
 0AEB C3                                    RET
 0AEC                      L1112  EQU $
        -> esac
 0AEC EB 00                                 JMP L1009
    esw(7):
 0AEE                      L1132  EQU $
        %begin
 0AEE E8 00 00                              CALL '$L1133' (INTERNAL L1133 )
 0AF1 EB 00                                 JMP L1134
 0AF3                      L1133  EQU $
 0AF3 C8 00 00 02                           ENTER 0000,2
            %switch ssw(0:15)
            -> ssw(sub&16_f)
 0AF7 8B 75 FC                              MOV ESI,[EBP-4]
 0AFA 8B 46 0C                              MOV EAX,[ESI+12]
 0AFD 25 0F 00 00 00                        AND EAX,15
 0B02 C1 E0 02                              SHL EAX,2
 0B05 89 C7                                 MOV EDI,EAX
 0B07 FF A7 C0 01 00 00                     JMP WORD [EDI+SWTAB+448]
        ssw(*): msg = "Resolution fails ".eventmsg; -> es
 0B0D                      L1135  EQU $
 0B0D                      L1136  EQU $
 0B0D                      L1137  EQU $
 0B0D                      L1138  EQU $
 0B0D                      L1139  EQU $
 0B0D                      L1140  EQU $
 0B0D                      L1141  EQU $
 0B0D                      L1142  EQU $
 0B0D                      L1143  EQU $
 0B0D                      L1144  EQU $
 0B0D                      L1145  EQU $
 0B0D                      L1146  EQU $
 0B0D                      L1147  EQU $
 0B0D                      L1148  EQU $
 0B0D                      L1149  EQU $
 0B0D                      L1150  EQU $
 0B0D 8D 85 F8 FE FF FF                     LEA EAX,[EBP-264]
 0B13 50                                    PUSH EAX
 0B14 B8 C8 02 00 00                        MOV EAX,COT+712
 0B19 50                                    PUSH EAX
 0B1A 68 FF 00 00 00                        PUSH 255
 0B1F E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 0B22 83 C4 0C                              ADD ESP,12
 0B25 8D 85 F8 FE FF FF                     LEA EAX,[EBP-264]
 0B2B 50                                    PUSH EAX
 0B2C 8B 5D FC                              MOV EBX,[EBP-4]
 0B2F 8D 83 C9 FD FF FF                     LEA EAX,[EBX-567]
 0B35 50                                    PUSH EAX
 0B36 68 FF 00 00 00                        PUSH 255
 0B3B E8 05 00                              CALL '_IMPSTRCAT' (EXTERN 5)
 0B3E 83 C4 0C                              ADD ESP,12
 0B41 8B 75 FC                              MOV ESI,[EBP-4]
 0B44 8D 86 C9 FE FF FF                     LEA EAX,[ESI-311]
 0B4A 50                                    PUSH EAX
 0B4B 8D 8D F8 FE FF FF                     LEA ECX,[EBP-264]
 0B51 51                                    PUSH ECX
 0B52 68 FF 00 00 00                        PUSH 255
 0B57 E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 0B5A 83 C4 0C                              ADD ESP,12
 0B5D EB 00                                 JMP L1151
        es:
 0B5F                      L1151  EQU $
        %end
 0B5F C9                                    LEAVE
 0B60 C3                                    RET
 0B61                      L1134  EQU $
        -> esac
 0B61 EB 00                                 JMP L1009
    esw(8):
 0B63                      L1152  EQU $
        %begin
 0B63 E8 00 00                              CALL '$L1153' (INTERNAL L1153 )
 0B66 EB 00                                 JMP L1154
 0B68                      L1153  EQU $
 0B68 C8 00 00 02                           ENTER 0000,2
            %switch ssw(0:15)
            -> ssw(sub&16_f)
 0B6C 8B 7D FC                              MOV EDI,[EBP-4]
 0B6F 8B 47 0C                              MOV EAX,[EDI+12]
 0B72 25 0F 00 00 00                        AND EAX,15
 0B77 C1 E0 02                              SHL EAX,2
 0B7A 89 C3                                 MOV EBX,EAX
 0B7C FF A3 00 02 00 00                     JMP WORD [EBX+SWTAB+512]
        ssw(1): msg = "Unassigned variable"             ; -> es
 0B82                      L1155  EQU $
 0B82 8B 75 FC                              MOV ESI,[EBP-4]
 0B85 8D 86 C9 FE FF FF                     LEA EAX,[ESI-311]
 0B8B 50                                    PUSH EAX
 0B8C B9 DA 02 00 00                        MOV ECX,COT+730
 0B91 51                                    PUSH ECX
 0B92 68 FF 00 00 00                        PUSH 255
 0B97 E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 0B9A 83 C4 0C                              ADD ESP,12
 0B9D EB 00                                 JMP L1156
        ssw(2): msg = "No switch label '".x."'"         ; -> es
 0B9F                      L1157  EQU $
 0B9F 8D 85 F8 FE FF FF                     LEA EAX,[EBP-264]
 0BA5 50                                    PUSH EAX
 0BA6 B8 EE 02 00 00                        MOV EAX,COT+750
 0BAB 50                                    PUSH EAX
 0BAC 68 FF 00 00 00                        PUSH 255
 0BB1 E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 0BB4 83 C4 0C                              ADD ESP,12
 0BB7 8D 85 F8 FE FF FF                     LEA EAX,[EBP-264]
 0BBD 50                                    PUSH EAX
 0BBE 8B 7D FC                              MOV EDI,[EBP-4]
 0BC1 8D 47 C9                              LEA EAX,[EDI-55]
 0BC4 50                                    PUSH EAX
 0BC5 68 FF 00 00 00                        PUSH 255
 0BCA E8 05 00                              CALL '_IMPSTRCAT' (EXTERN 5)
 0BCD 83 C4 0C                              ADD ESP,12
 0BD0 8D 85 F8 FE FF FF                     LEA EAX,[EBP-264]
 0BD6 50                                    PUSH EAX
 0BD7 B8 00 03 00 00                        MOV EAX,COT+768
 0BDC 50                                    PUSH EAX
 0BDD 68 FF 00 00 00                        PUSH 255
 0BE2 E8 05 00                              CALL '_IMPSTRCAT' (EXTERN 5)
 0BE5 83 C4 0C                              ADD ESP,12
 0BE8 8B 5D FC                              MOV EBX,[EBP-4]
 0BEB 8D 83 C9 FE FF FF                     LEA EAX,[EBX-311]
 0BF1 50                                    PUSH EAX
 0BF2 8D 8D F8 FE FF FF                     LEA ECX,[EBP-264]
 0BF8 51                                    PUSH ECX
 0BF9 68 FF 00 00 00                        PUSH 255
 0BFE E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 0C01 83 C4 0C                              ADD ESP,12
 0C04 EB 00                                 JMP L1156
        ssw(3): msg = "For variable corrupt"            ; -> es
 0C06                      L1158  EQU $
 0C06 8B 75 FC                              MOV ESI,[EBP-4]
 0C09 8D 86 C9 FE FF FF                     LEA EAX,[ESI-311]
 0C0F 50                                    PUSH EAX
 0C10 B9 02 03 00 00                        MOV ECX,COT+770
 0C15 51                                    PUSH ECX
 0C16 68 FF 00 00 00                        PUSH 255
 0C1B E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 0C1E 83 C4 0C                              ADD ESP,12
 0C21 EB 00                                 JMP L1156
        ssw(*): msg = "Undefined switch value ".eventmsg; -> es
 0C23                      L1159  EQU $
 0C23                      L1160  EQU $
 0C23                      L1161  EQU $
 0C23                      L1162  EQU $
 0C23                      L1163  EQU $
 0C23                      L1164  EQU $
 0C23                      L1165  EQU $
 0C23                      L1166  EQU $
 0C23                      L1167  EQU $
 0C23                      L1168  EQU $
 0C23                      L1169  EQU $
 0C23                      L1170  EQU $
 0C23                      L1171  EQU $
 0C23 8D 85 F8 FE FF FF                     LEA EAX,[EBP-264]
 0C29 50                                    PUSH EAX
 0C2A B8 17 03 00 00                        MOV EAX,COT+791
 0C2F 50                                    PUSH EAX
 0C30 68 FF 00 00 00                        PUSH 255
 0C35 E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 0C38 83 C4 0C                              ADD ESP,12
 0C3B 8D 85 F8 FE FF FF                     LEA EAX,[EBP-264]
 0C41 50                                    PUSH EAX
 0C42 8B 7D FC                              MOV EDI,[EBP-4]
 0C45 8D 87 C9 FD FF FF                     LEA EAX,[EDI-567]
 0C4B 50                                    PUSH EAX
 0C4C 68 FF 00 00 00                        PUSH 255
 0C51 E8 05 00                              CALL '_IMPSTRCAT' (EXTERN 5)
 0C54 83 C4 0C                              ADD ESP,12
 0C57 8B 5D FC                              MOV EBX,[EBP-4]
 0C5A 8D 83 C9 FE FF FF                     LEA EAX,[EBX-311]
 0C60 50                                    PUSH EAX
 0C61 8D 8D F8 FE FF FF                     LEA ECX,[EBP-264]
 0C67 51                                    PUSH ECX
 0C68 68 FF 00 00 00                        PUSH 255
 0C6D E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 0C70 83 C4 0C                              ADD ESP,12
 0C73 EB 00                                 JMP L1156
        es:
 0C75                      L1156  EQU $
        %end
 0C75 C9                                    LEAVE
 0C76 C3                                    RET
 0C77                      L1154  EQU $
        -> esac
 0C77 EB 00                                 JMP L1009
    esw(9):
 0C79                      L1172  EQU $
        %begin
 0C79 E8 00 00                              CALL '$L1173' (INTERNAL L1173 )
 0C7C EB 00                                 JMP L1174
 0C7E                      L1173  EQU $
 0C7E C8 00 00 02                           ENTER 0000,2
            %switch ssw(0:15)
            -> ssw(sub&16_f)
 0C82 8B 75 FC                              MOV ESI,[EBP-4]
 0C85 8B 46 0C                              MOV EAX,[ESI+12]
 0C88 25 0F 00 00 00                        AND EAX,15
 0C8D C1 E0 02                              SHL EAX,2
 0C90 89 C7                                 MOV EDI,EAX
 0C92 FF A7 40 02 00 00                     JMP WORD [EDI+SWTAB+576]
        ssw(0):  msg = "End of input"                           ; -> es
 0C98                      L1175  EQU $
 0C98 8B 5D FC                              MOV EBX,[EBP-4]
 0C9B 8D 83 C9 FE FF FF                     LEA EAX,[EBX-311]
 0CA1 50                                    PUSH EAX
 0CA2 B9 2F 03 00 00                        MOV ECX,COT+815
 0CA7 51                                    PUSH ECX
 0CA8 68 FF 00 00 00                        PUSH 255
 0CAD E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 0CB0 83 C4 0C                              ADD ESP,12
 0CB3 EB 00                                 JMP L1176
        ssw(1):  msg = "Unexpected end of input"                ; -> es
 0CB5                      L1177  EQU $
 0CB5 8B 75 FC                              MOV ESI,[EBP-4]
 0CB8 8D 86 C9 FE FF FF                     LEA EAX,[ESI-311]
 0CBE 50                                    PUSH EAX
 0CBF B9 3C 03 00 00                        MOV ECX,COT+828
 0CC4 51                                    PUSH ECX
 0CC5 68 FF 00 00 00                        PUSH 255
 0CCA E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 0CCD 83 C4 0C                              ADD ESP,12
 0CD0 EB 00                                 JMP L1176
        ssw(2):  msg = "Couldn't open file. Error Code (".x.")" ; -> es
 0CD2                      L1178  EQU $
 0CD2 8D 85 F8 FE FF FF                     LEA EAX,[EBP-264]
 0CD8 50                                    PUSH EAX
 0CD9 B8 54 03 00 00                        MOV EAX,COT+852
 0CDE 50                                    PUSH EAX
 0CDF 68 FF 00 00 00                        PUSH 255
 0CE4 E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 0CE7 83 C4 0C                              ADD ESP,12
 0CEA 8D 85 F8 FE FF FF                     LEA EAX,[EBP-264]
 0CF0 50                                    PUSH EAX
 0CF1 8B 7D FC                              MOV EDI,[EBP-4]
 0CF4 8D 47 C9                              LEA EAX,[EDI-55]
 0CF7 50                                    PUSH EAX
 0CF8 68 FF 00 00 00                        PUSH 255
 0CFD E8 05 00                              CALL '_IMPSTRCAT' (EXTERN 5)
 0D00 83 C4 0C                              ADD ESP,12
 0D03 8D 85 F8 FE FF FF                     LEA EAX,[EBP-264]
 0D09 50                                    PUSH EAX
 0D0A B8 75 03 00 00                        MOV EAX,COT+885
 0D0F 50                                    PUSH EAX
 0D10 68 FF 00 00 00                        PUSH 255
 0D15 E8 05 00                              CALL '_IMPSTRCAT' (EXTERN 5)
 0D18 83 C4 0C                              ADD ESP,12
 0D1B 8B 5D FC                              MOV EBX,[EBP-4]
 0D1E 8D 83 C9 FE FF FF                     LEA EAX,[EBX-311]
 0D24 50                                    PUSH EAX
 0D25 8D 8D F8 FE FF FF                     LEA ECX,[EBP-264]
 0D2B 51                                    PUSH ECX
 0D2C 68 FF 00 00 00                        PUSH 255
 0D31 E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 0D34 83 C4 0C                              ADD ESP,12
 0D37 EB 00                                 JMP L1176
        ssw(3):  msg = "File system error '".x."'"              ; -> es
 0D39                      L1179  EQU $
 0D39 8D 85 F8 FE FF FF                     LEA EAX,[EBP-264]
 0D3F 50                                    PUSH EAX
 0D40 B8 77 03 00 00                        MOV EAX,COT+887
 0D45 50                                    PUSH EAX
 0D46 68 FF 00 00 00                        PUSH 255
 0D4B E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 0D4E 83 C4 0C                              ADD ESP,12
 0D51 8D 85 F8 FE FF FF                     LEA EAX,[EBP-264]
 0D57 50                                    PUSH EAX
 0D58 8B 75 FC                              MOV ESI,[EBP-4]
 0D5B 8D 46 C9                              LEA EAX,[ESI-55]
 0D5E 50                                    PUSH EAX
 0D5F 68 FF 00 00 00                        PUSH 255
 0D64 E8 05 00                              CALL '_IMPSTRCAT' (EXTERN 5)
 0D67 83 C4 0C                              ADD ESP,12
 0D6A 8D 85 F8 FE FF FF                     LEA EAX,[EBP-264]
 0D70 50                                    PUSH EAX
 0D71 B8 8B 03 00 00                        MOV EAX,COT+907
 0D76 50                                    PUSH EAX
 0D77 68 FF 00 00 00                        PUSH 255
 0D7C E8 05 00                              CALL '_IMPSTRCAT' (EXTERN 5)
 0D7F 83 C4 0C                              ADD ESP,12
 0D82 8B 7D FC                              MOV EDI,[EBP-4]
 0D85 8D 87 C9 FE FF FF                     LEA EAX,[EDI-311]
 0D8B 50                                    PUSH EAX
 0D8C 8D 8D F8 FE FF FF                     LEA ECX,[EBP-264]
 0D92 51                                    PUSH ECX
 0D93 68 FF 00 00 00                        PUSH 255
 0D98 E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 0D9B 83 C4 0C                              ADD ESP,12
 0D9E EB 00                                 JMP L1176
        ssw(4):  msg = "Input stream '".x."' not opened"        ; -> es
 0DA0                      L1180  EQU $
 0DA0 8D 85 F8 FE FF FF                     LEA EAX,[EBP-264]
 0DA6 50                                    PUSH EAX
 0DA7 B8 8D 03 00 00                        MOV EAX,COT+909
 0DAC 50                                    PUSH EAX
 0DAD 68 FF 00 00 00                        PUSH 255
 0DB2 E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 0DB5 83 C4 0C                              ADD ESP,12
 0DB8 8D 85 F8 FE FF FF                     LEA EAX,[EBP-264]
 0DBE 50                                    PUSH EAX
 0DBF 8B 5D FC                              MOV EBX,[EBP-4]
 0DC2 8D 43 C9                              LEA EAX,[EBX-55]
 0DC5 50                                    PUSH EAX
 0DC6 68 FF 00 00 00                        PUSH 255
 0DCB E8 05 00                              CALL '_IMPSTRCAT' (EXTERN 5)
 0DCE 83 C4 0C                              ADD ESP,12
 0DD1 8D 85 F8 FE FF FF                     LEA EAX,[EBP-264]
 0DD7 50                                    PUSH EAX
 0DD8 B8 9C 03 00 00                        MOV EAX,COT+924
 0DDD 50                                    PUSH EAX
 0DDE 68 FF 00 00 00                        PUSH 255
 0DE3 E8 05 00                              CALL '_IMPSTRCAT' (EXTERN 5)
 0DE6 83 C4 0C                              ADD ESP,12
 0DE9 8B 75 FC                              MOV ESI,[EBP-4]
 0DEC 8D 86 C9 FE FF FF                     LEA EAX,[ESI-311]
 0DF2 50                                    PUSH EAX
 0DF3 8D 8D F8 FE FF FF                     LEA ECX,[EBP-264]
 0DF9 51                                    PUSH ECX
 0DFA 68 FF 00 00 00                        PUSH 255
 0DFF E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 0E02 83 C4 0C                              ADD ESP,12
 0E05 EB 00                                 JMP L1176
        ssw(5):  msg = "Output stream '".x."' not opened"       ; -> es
 0E07                      L1181  EQU $
 0E07 8D 85 F8 FE FF FF                     LEA EAX,[EBP-264]
 0E0D 50                                    PUSH EAX
 0E0E B8 A9 03 00 00                        MOV EAX,COT+937
 0E13 50                                    PUSH EAX
 0E14 68 FF 00 00 00                        PUSH 255
 0E19 E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 0E1C 83 C4 0C                              ADD ESP,12
 0E1F 8D 85 F8 FE FF FF                     LEA EAX,[EBP-264]
 0E25 50                                    PUSH EAX
 0E26 8B 7D FC                              MOV EDI,[EBP-4]
 0E29 8D 47 C9                              LEA EAX,[EDI-55]
 0E2C 50                                    PUSH EAX
 0E2D 68 FF 00 00 00                        PUSH 255
 0E32 E8 05 00                              CALL '_IMPSTRCAT' (EXTERN 5)
 0E35 83 C4 0C                              ADD ESP,12
 0E38 8D 85 F8 FE FF FF                     LEA EAX,[EBP-264]
 0E3E 50                                    PUSH EAX
 0E3F B8 B9 03 00 00                        MOV EAX,COT+953
 0E44 50                                    PUSH EAX
 0E45 68 FF 00 00 00                        PUSH 255
 0E4A E8 05 00                              CALL '_IMPSTRCAT' (EXTERN 5)
 0E4D 83 C4 0C                              ADD ESP,12
 0E50 8B 5D FC                              MOV EBX,[EBP-4]
 0E53 8D 83 C9 FE FF FF                     LEA EAX,[EBX-311]
 0E59 50                                    PUSH EAX
 0E5A 8D 8D F8 FE FF FF                     LEA ECX,[EBP-264]
 0E60 51                                    PUSH ECX
 0E61 68 FF 00 00 00                        PUSH 255
 0E66 E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 0E69 83 C4 0C                              ADD ESP,12
 0E6C EB 00                                 JMP L1176
        ssw(9):  msg = "Bad stream# '".x."'"                    ; -> es
 0E6E                      L1182  EQU $
 0E6E 8D 85 F8 FE FF FF                     LEA EAX,[EBP-264]
 0E74 50                                    PUSH EAX
 0E75 B8 C6 03 00 00                        MOV EAX,COT+966
 0E7A 50                                    PUSH EAX
 0E7B 68 FF 00 00 00                        PUSH 255
 0E80 E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 0E83 83 C4 0C                              ADD ESP,12
 0E86 8D 85 F8 FE FF FF                     LEA EAX,[EBP-264]
 0E8C 50                                    PUSH EAX
 0E8D 8B 75 FC                              MOV ESI,[EBP-4]
 0E90 8D 46 C9                              LEA EAX,[ESI-55]
 0E93 50                                    PUSH EAX
 0E94 68 FF 00 00 00                        PUSH 255
 0E99 E8 05 00                              CALL '_IMPSTRCAT' (EXTERN 5)
 0E9C 83 C4 0C                              ADD ESP,12
 0E9F 8D 85 F8 FE FF FF                     LEA EAX,[EBP-264]
 0EA5 50                                    PUSH EAX
 0EA6 B8 D4 03 00 00                        MOV EAX,COT+980
 0EAB 50                                    PUSH EAX
 0EAC 68 FF 00 00 00                        PUSH 255
 0EB1 E8 05 00                              CALL '_IMPSTRCAT' (EXTERN 5)
 0EB4 83 C4 0C                              ADD ESP,12
 0EB7 8B 7D FC                              MOV EDI,[EBP-4]
 0EBA 8D 87 C9 FE FF FF                     LEA EAX,[EDI-311]
 0EC0 50                                    PUSH EAX
 0EC1 8D 8D F8 FE FF FF                     LEA ECX,[EBP-264]
 0EC7 51                                    PUSH ECX
 0EC8 68 FF 00 00 00                        PUSH 255
 0ECD E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 0ED0 83 C4 0C                              ADD ESP,12
 0ED3 EB 00                                 JMP L1176
        ssw(10): msg = "Invalid filename for stream# '".x."'"   ; -> es
 0ED5                      L1183  EQU $
 0ED5 8D 85 F8 FE FF FF                     LEA EAX,[EBP-264]
 0EDB 50                                    PUSH EAX
 0EDC B8 D6 03 00 00                        MOV EAX,COT+982
 0EE1 50                                    PUSH EAX
 0EE2 68 FF 00 00 00                        PUSH 255
 0EE7 E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 0EEA 83 C4 0C                              ADD ESP,12
 0EED 8D 85 F8 FE FF FF                     LEA EAX,[EBP-264]
 0EF3 50                                    PUSH EAX
 0EF4 8B 5D FC                              MOV EBX,[EBP-4]
 0EF7 8D 43 C9                              LEA EAX,[EBX-55]
 0EFA 50                                    PUSH EAX
 0EFB 68 FF 00 00 00                        PUSH 255
 0F00 E8 05 00                              CALL '_IMPSTRCAT' (EXTERN 5)
 0F03 83 C4 0C                              ADD ESP,12
 0F06 8D 85 F8 FE FF FF                     LEA EAX,[EBP-264]
 0F0C 50                                    PUSH EAX
 0F0D B8 F5 03 00 00                        MOV EAX,COT+1013
 0F12 50                                    PUSH EAX
 0F13 68 FF 00 00 00                        PUSH 255
 0F18 E8 05 00                              CALL '_IMPSTRCAT' (EXTERN 5)
 0F1B 83 C4 0C                              ADD ESP,12
 0F1E 8B 75 FC                              MOV ESI,[EBP-4]
 0F21 8D 86 C9 FE FF FF                     LEA EAX,[ESI-311]
 0F27 50                                    PUSH EAX
 0F28 8D 8D F8 FE FF FF                     LEA ECX,[EBP-264]
 0F2E 51                                    PUSH ECX
 0F2F 68 FF 00 00 00                        PUSH 255
 0F34 E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 0F37 83 C4 0C                              ADD ESP,12
 0F3A EB 00                                 JMP L1176
        ssw(*):  msg = "Input/Output error ".eventmsg           ; -> es
 0F3C                      L1184  EQU $
 0F3C                      L1185  EQU $
 0F3C                      L1186  EQU $
 0F3C                      L1187  EQU $
 0F3C                      L1188  EQU $
 0F3C                      L1189  EQU $
 0F3C                      L1190  EQU $
 0F3C                      L1191  EQU $
 0F3C 8D 85 F8 FE FF FF                     LEA EAX,[EBP-264]
 0F42 50                                    PUSH EAX
 0F43 B8 F7 03 00 00                        MOV EAX,COT+1015
 0F48 50                                    PUSH EAX
 0F49 68 FF 00 00 00                        PUSH 255
 0F4E E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 0F51 83 C4 0C                              ADD ESP,12
 0F54 8D 85 F8 FE FF FF                     LEA EAX,[EBP-264]
 0F5A 50                                    PUSH EAX
 0F5B 8B 7D FC                              MOV EDI,[EBP-4]
 0F5E 8D 87 C9 FD FF FF                     LEA EAX,[EDI-567]
 0F64 50                                    PUSH EAX
 0F65 68 FF 00 00 00                        PUSH 255
 0F6A E8 05 00                              CALL '_IMPSTRCAT' (EXTERN 5)
 0F6D 83 C4 0C                              ADD ESP,12
 0F70 8B 5D FC                              MOV EBX,[EBP-4]
 0F73 8D 83 C9 FE FF FF                     LEA EAX,[EBX-311]
 0F79 50                                    PUSH EAX
 0F7A 8D 8D F8 FE FF FF                     LEA ECX,[EBP-264]
 0F80 51                                    PUSH ECX
 0F81 68 FF 00 00 00                        PUSH 255
 0F86 E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 0F89 83 C4 0C                              ADD ESP,12
 0F8C EB 00                                 JMP L1176
        es:
 0F8E                      L1176  EQU $
        %end
 0F8E C9                                    LEAVE
 0F8F C3                                    RET
 0F90                      L1174  EQU $
        -> esac
 0F90 EB 00                                 JMP L1009
    esw(10):
 0F92                      L1192  EQU $
        %begin
 0F92 E8 00 00                              CALL '$L1193' (INTERNAL L1193 )
 0F95 EB 00                                 JMP L1194
 0F97                      L1193  EQU $
 0F97 C8 00 00 02                           ENTER 0000,2
            %switch ssw(0:15)
            -> ssw(sub&16_f)
 0F9B 8B 75 FC                              MOV ESI,[EBP-4]
 0F9E 8B 46 0C                              MOV EAX,[ESI+12]
 0FA1 25 0F 00 00 00                        AND EAX,15
 0FA6 C1 E0 02                              SHL EAX,2
 0FA9 89 C7                                 MOV EDI,EAX
 0FAB FF A7 80 02 00 00                     JMP WORD [EDI+SWTAB+640]
        ssw(1): msg = "Incorrect command line parameter count. Argc=".x; -> es
 0FB1                      L1195  EQU $
 0FB1 8D 85 F8 FE FF FF                     LEA EAX,[EBP-264]
 0FB7 50                                    PUSH EAX
 0FB8 B8 0B 04 00 00                        MOV EAX,COT+1035
 0FBD 50                                    PUSH EAX
 0FBE 68 FF 00 00 00                        PUSH 255
 0FC3 E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 0FC6 83 C4 0C                              ADD ESP,12
 0FC9 8D 85 F8 FE FF FF                     LEA EAX,[EBP-264]
 0FCF 50                                    PUSH EAX
 0FD0 8B 5D FC                              MOV EBX,[EBP-4]
 0FD3 8D 43 C9                              LEA EAX,[EBX-55]
 0FD6 50                                    PUSH EAX
 0FD7 68 FF 00 00 00                        PUSH 255
 0FDC E8 05 00                              CALL '_IMPSTRCAT' (EXTERN 5)
 0FDF 83 C4 0C                              ADD ESP,12
 0FE2 8B 75 FC                              MOV ESI,[EBP-4]
 0FE5 8D 86 C9 FE FF FF                     LEA EAX,[ESI-311]
 0FEB 50                                    PUSH EAX
 0FEC 8D 8D F8 FE FF FF                     LEA ECX,[EBP-264]
 0FF2 51                                    PUSH ECX
 0FF3 68 FF 00 00 00                        PUSH 255
 0FF8 E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 0FFB 83 C4 0C                              ADD ESP,12
 0FFE EB 00                                 JMP L1196
        ssw(*): msg = "Library procedure error ".eventmsg; -> es
 1000                      L1197  EQU $
 1000                      L1198  EQU $
 1000                      L1199  EQU $
 1000                      L1200  EQU $
 1000                      L1201  EQU $
 1000                      L1202  EQU $
 1000                      L1203  EQU $
 1000                      L1204  EQU $
 1000                      L1205  EQU $
 1000                      L1206  EQU $
 1000                      L1207  EQU $
 1000                      L1208  EQU $
 1000                      L1209  EQU $
 1000                      L1210  EQU $
 1000                      L1211  EQU $
 1000 8D 85 F8 FE FF FF                     LEA EAX,[EBP-264]
 1006 50                                    PUSH EAX
 1007 B8 39 04 00 00                        MOV EAX,COT+1081
 100C 50                                    PUSH EAX
 100D 68 FF 00 00 00                        PUSH 255
 1012 E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 1015 83 C4 0C                              ADD ESP,12
 1018 8D 85 F8 FE FF FF                     LEA EAX,[EBP-264]
 101E 50                                    PUSH EAX
 101F 8B 7D FC                              MOV EDI,[EBP-4]
 1022 8D 87 C9 FD FF FF                     LEA EAX,[EDI-567]
 1028 50                                    PUSH EAX
 1029 68 FF 00 00 00                        PUSH 255
 102E E8 05 00                              CALL '_IMPSTRCAT' (EXTERN 5)
 1031 83 C4 0C                              ADD ESP,12
 1034 8B 5D FC                              MOV EBX,[EBP-4]
 1037 8D 83 C9 FE FF FF                     LEA EAX,[EBX-311]
 103D 50                                    PUSH EAX
 103E 8D 8D F8 FE FF FF                     LEA ECX,[EBP-264]
 1044 51                                    PUSH ECX
 1045 68 FF 00 00 00                        PUSH 255
 104A E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 104D 83 C4 0C                              ADD ESP,12
 1050 EB 00                                 JMP L1196
        es:
 1052                      L1196  EQU $
        %end
 1052 C9                                    LEAVE
 1053 C3                                    RET
 1054                      L1194  EQU $
        -> esac
 1054 EB 00                                 JMP L1009
    esw(*):
 1056                      L1212  EQU $
 1056                      L1213  EQU $
 1056                      L1214  EQU $
 1056                      L1215  EQU $
 1056                      L1216  EQU $
        msg = "Signal ".eventmsg." called."; -> esac
 1056 8D 85 C8 FC FF FF                     LEA EAX,[EBP-824]
 105C 50                                    PUSH EAX
 105D B8 52 04 00 00                        MOV EAX,COT+1106
 1062 50                                    PUSH EAX
 1063 68 FF 00 00 00                        PUSH 255
 1068 E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 106B 83 C4 0C                              ADD ESP,12
 106E 8D 85 C8 FC FF FF                     LEA EAX,[EBP-824]
 1074 50                                    PUSH EAX
 1075 8D 85 C9 FD FF FF                     LEA EAX,[EBP-567]
 107B 50                                    PUSH EAX
 107C 68 FF 00 00 00                        PUSH 255
 1081 E8 05 00                              CALL '_IMPSTRCAT' (EXTERN 5)
 1084 83 C4 0C                              ADD ESP,12
 1087 8D 85 C8 FC FF FF                     LEA EAX,[EBP-824]
 108D 50                                    PUSH EAX
 108E B8 5A 04 00 00                        MOV EAX,COT+1114
 1093 50                                    PUSH EAX
 1094 68 FF 00 00 00                        PUSH 255
 1099 E8 05 00                              CALL '_IMPSTRCAT' (EXTERN 5)
 109C 83 C4 0C                              ADD ESP,12
 109F 8D 85 C9 FE FF FF                     LEA EAX,[EBP-311]
 10A5 50                                    PUSH EAX
 10A6 8D 8D C8 FC FF FF                     LEA ECX,[EBP-824]
 10AC 51                                    PUSH ECX
 10AD 68 FF 00 00 00                        PUSH 255
 10B2 E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 10B5 83 C4 0C                              ADD ESP,12
 10B8 EB 00                                 JMP L1009
    esac:
 10BA                      L1009  EQU $

        lastevent_event = event
 10BA 8B 45 10                              MOV EAX,[EBP+16]
 10BD 89 05 00 00 00 00                     MOV [DATA+0000],EAX
        lastevent_sub = sub
 10C3 8B 45 0C                              MOV EAX,[EBP+12]
 10C6 89 05 04 00 00 00                     MOV [DATA+0004],EAX
        lastevent_info = info
 10CC 8B 45 08                              MOV EAX,[EBP+8]
 10CF 89 05 08 00 00 00                     MOV [DATA+0008],EAX
        lastevent_line = line
 10D5 8B 45 14                              MOV EAX,[EBP+20]
 10D8 89 05 0C 00 00 00                     MOV [DATA+000C],EAX
        lastevent_message = msg
 10DE B8 10 00 00 00                        MOV EAX,DATA+16
 10E3 50                                    PUSH EAX
 10E4 8D 8D C9 FE FF FF                     LEA ECX,[EBP-311]
 10EA 51                                    PUSH ECX
 10EB 68 FF 00 00 00                        PUSH 255
 10F0 E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 10F3 83 C4 0C                              ADD ESP,12

    %end
 10F6 C9                                    LEAVE
 10F7 C3                                    RET
{-----------------------------------------------------------------------------}
    %external %routine messageFormatA( %integer message id )
 10F8                      L1217  EQU $
 10F8 C8 00 00 01                           ENTER 0000,1
        %switch mess(1:8)
        %string(16) evt,sub,xtr

        evt = itos(lastevent_event,0)
 10FC FF 35 00 00 00 00                     PUSH WORD [DATA+0000]
 1102 6A 00                                 PUSH 0
 1104 8D 85 C8 FE FF FF                     LEA EAX,[EBP-312]
 110A 50                                    PUSH EAX
 110B E8 42 00                              CALL 'ITOS' (EXTERN 66)
 110E 83 C4 0C                              ADD ESP,12
 1111 8D 45 EB                              LEA EAX,[EBP-21]
 1114 50                                    PUSH EAX
 1115 8D 8D C8 FE FF FF                     LEA ECX,[EBP-312]
 111B 51                                    PUSH ECX
 111C 6A 10                                 PUSH 16
 111E E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 1121 83 C4 0C                              ADD ESP,12
        sub = itos(lastevent_sub,0)
 1124 FF 35 04 00 00 00                     PUSH WORD [DATA+0004]
 112A 6A 00                                 PUSH 0
 112C 8D 85 C8 FE FF FF                     LEA EAX,[EBP-312]
 1132 50                                    PUSH EAX
 1133 E8 42 00                              CALL 'ITOS' (EXTERN 66)
 1136 83 C4 0C                              ADD ESP,12
 1139 8D 45 DA                              LEA EAX,[EBP-38]
 113C 50                                    PUSH EAX
 113D 8D 8D C8 FE FF FF                     LEA ECX,[EBP-312]
 1143 51                                    PUSH ECX
 1144 6A 10                                 PUSH 16
 1146 E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 1149 83 C4 0C                              ADD ESP,12
        xtr = itos(lastevent_info,0)
 114C FF 35 08 00 00 00                     PUSH WORD [DATA+0008]
 1152 6A 00                                 PUSH 0
 1154 8D 85 C8 FE FF FF                     LEA EAX,[EBP-312]
 115A 50                                    PUSH EAX
 115B E8 42 00                              CALL 'ITOS' (EXTERN 66)
 115E 83 C4 0C                              ADD ESP,12
 1161 8D 45 C9                              LEA EAX,[EBP-55]
 1164 50                                    PUSH EAX
 1165 8D 8D C8 FE FF FF                     LEA ECX,[EBP-312]
 116B 51                                    PUSH ECX
 116C 6A 10                                 PUSH 16
 116E E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 1171 83 C4 0C                              ADD ESP,12

        selectoutput(0)
 1174 6A 00                                 PUSH 0
 1176 E8 27 00                              CALL 'SELECTOUTPUT' (EXTERN 39)
 1179 83 C4 04                              ADD ESP,4
        newline
 117C E8 3C 00                              CALL 'NEWLINE' (EXTERN 60)
        printstring( "IMPRTL: " )
 117F 81 EC 00 01 00 00                     SUB ESP,256
 1185 89 E0                                 MOV EAX,ESP
 1187 50                                    PUSH EAX
 1188 B8 74 04 00 00                        MOV EAX,COT+1140
 118D 50                                    PUSH EAX
 118E 68 FF 00 00 00                        PUSH 255
 1193 E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 1196 83 C4 0C                              ADD ESP,12
 1199 E8 34 00                              CALL 'PRINTSTRING' (EXTERN 52)
 119C 81 C4 00 01 00 00                     ADD ESP,256
        -> mess(message id)
 11A2 8B 45 08                              MOV EAX,[EBP+8]
 11A5 C1 E0 02                              SHL EAX,2
 11A8 89 C6                                 MOV ESI,EAX
 11AA FF A6 BC 02 00 00                     JMP WORD [ESI+SWTAB+700]
    mess(1): printstring( "SHOWEVENT: " )
 11B0                      L1218  EQU $
 11B0 81 EC 00 01 00 00                     SUB ESP,256
 11B6 89 E0                                 MOV EAX,ESP
 11B8 50                                    PUSH EAX
 11B9 B8 7D 04 00 00                        MOV EAX,COT+1149
 11BE 50                                    PUSH EAX
 11BF 68 FF 00 00 00                        PUSH 255
 11C4 E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 11C7 83 C4 0C                              ADD ESP,12
 11CA E8 34 00                              CALL 'PRINTSTRING' (EXTERN 52)
 11CD 81 C4 00 01 00 00                     ADD ESP,256
             printstring( lastevent_message )
 11D3 81 EC 00 01 00 00                     SUB ESP,256
 11D9 89 E0                                 MOV EAX,ESP
 11DB 50                                    PUSH EAX
 11DC B8 10 00 00 00                        MOV EAX,DATA+16
 11E1 50                                    PUSH EAX
 11E2 68 FF 00 00 00                        PUSH 255
 11E7 E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 11EA 83 C4 0C                              ADD ESP,12
 11ED E8 34 00                              CALL 'PRINTSTRING' (EXTERN 52)
 11F0 81 C4 00 01 00 00                     ADD ESP,256
             -> esac
 11F6 EB 00                                 JMP L1219
    mess(2): printstring( "Start of Stack dump - triggered at line=" )
 11F8                      L1220  EQU $
 11F8 81 EC 00 01 00 00                     SUB ESP,256
 11FE 89 E0                                 MOV EAX,ESP
 1200 50                                    PUSH EAX
 1201 B8 89 04 00 00                        MOV EAX,COT+1161
 1206 50                                    PUSH EAX
 1207 68 FF 00 00 00                        PUSH 255
 120C E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 120F 83 C4 0C                              ADD ESP,12
 1212 E8 34 00                              CALL 'PRINTSTRING' (EXTERN 52)
 1215 81 C4 00 01 00 00                     ADD ESP,256
             printstring( int2ascii( event_line,10,0 ) )
 121B E8 00 00                              CALL 'EVENT' (INTERNAL L1000 )
 121E FF 70 0C                              PUSH WORD [EAX+12]
 1221 6A 0A                                 PUSH 10
 1223 6A 00                                 PUSH 0
 1225 8D 85 C8 FE FF FF                     LEA EAX,[EBP-312]
 122B 50                                    PUSH EAX
 122C E8 4A 00                              CALL 'INT2ASCII' (EXTERN 74)
 122F 83 C4 10                              ADD ESP,16
 1232 81 EC 00 01 00 00                     SUB ESP,256
 1238 89 E0                                 MOV EAX,ESP
 123A 50                                    PUSH EAX
 123B 8D 85 C8 FE FF FF                     LEA EAX,[EBP-312]
 1241 50                                    PUSH EAX
 1242 68 FF 00 00 00                        PUSH 255
 1247 E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 124A 83 C4 0C                              ADD ESP,12
 124D E8 34 00                              CALL 'PRINTSTRING' (EXTERN 52)
 1250 81 C4 00 01 00 00                     ADD ESP,256
             -> esac
 1256 EB 00                                 JMP L1219
    mess(3): printstring( "Signal No handler found for signalled event (" )
 1258                      L1221  EQU $
 1258 81 EC 00 01 00 00                     SUB ESP,256
 125E 89 E0                                 MOV EAX,ESP
 1260 50                                    PUSH EAX
 1261 B8 B2 04 00 00                        MOV EAX,COT+1202
 1266 50                                    PUSH EAX
 1267 68 FF 00 00 00                        PUSH 255
 126C E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 126F 83 C4 0C                              ADD ESP,12
 1272 E8 34 00                              CALL 'PRINTSTRING' (EXTERN 52)
 1275 81 C4 00 01 00 00                     ADD ESP,256
             printstring( evt )
 127B 81 EC 00 01 00 00                     SUB ESP,256
 1281 89 E0                                 MOV EAX,ESP
 1283 50                                    PUSH EAX
 1284 8D 45 EB                              LEA EAX,[EBP-21]
 1287 50                                    PUSH EAX
 1288 68 FF 00 00 00                        PUSH 255
 128D E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 1290 83 C4 0C                              ADD ESP,12
 1293 E8 34 00                              CALL 'PRINTSTRING' (EXTERN 52)
 1296 81 C4 00 01 00 00                     ADD ESP,256
             printstring( ", " )
 129C 81 EC 00 01 00 00                     SUB ESP,256
 12A2 89 E0                                 MOV EAX,ESP
 12A4 50                                    PUSH EAX
 12A5 B8 E0 04 00 00                        MOV EAX,COT+1248
 12AA 50                                    PUSH EAX
 12AB 68 FF 00 00 00                        PUSH 255
 12B0 E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 12B3 83 C4 0C                              ADD ESP,12
 12B6 E8 34 00                              CALL 'PRINTSTRING' (EXTERN 52)
 12B9 81 C4 00 01 00 00                     ADD ESP,256
             printstring( sub )
 12BF 81 EC 00 01 00 00                     SUB ESP,256
 12C5 89 E0                                 MOV EAX,ESP
 12C7 50                                    PUSH EAX
 12C8 8D 45 DA                              LEA EAX,[EBP-38]
 12CB 50                                    PUSH EAX
 12CC 68 FF 00 00 00                        PUSH 255
 12D1 E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 12D4 83 C4 0C                              ADD ESP,12
 12D7 E8 34 00                              CALL 'PRINTSTRING' (EXTERN 52)
 12DA 81 C4 00 01 00 00                     ADD ESP,256
             printstring( ", " )
 12E0 81 EC 00 01 00 00                     SUB ESP,256
 12E6 89 E0                                 MOV EAX,ESP
 12E8 50                                    PUSH EAX
 12E9 B8 E3 04 00 00                        MOV EAX,COT+1251
 12EE 50                                    PUSH EAX
 12EF 68 FF 00 00 00                        PUSH 255
 12F4 E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 12F7 83 C4 0C                              ADD ESP,12
 12FA E8 34 00                              CALL 'PRINTSTRING' (EXTERN 52)
 12FD 81 C4 00 01 00 00                     ADD ESP,256
             printstring( xtr )
 1303 81 EC 00 01 00 00                     SUB ESP,256
 1309 89 E0                                 MOV EAX,ESP
 130B 50                                    PUSH EAX
 130C 8D 45 C9                              LEA EAX,[EBP-55]
 130F 50                                    PUSH EAX
 1310 68 FF 00 00 00                        PUSH 255
 1315 E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 1318 83 C4 0C                              ADD ESP,12
 131B E8 34 00                              CALL 'PRINTSTRING' (EXTERN 52)
 131E 81 C4 00 01 00 00                     ADD ESP,256
             printstring( ")." )
 1324 81 EC 00 01 00 00                     SUB ESP,256
 132A 89 E0                                 MOV EAX,ESP
 132C 50                                    PUSH EAX
 132D B8 E6 04 00 00                        MOV EAX,COT+1254
 1332 50                                    PUSH EAX
 1333 68 FF 00 00 00                        PUSH 255
 1338 E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 133B 83 C4 0C                              ADD ESP,12
 133E E8 34 00                              CALL 'PRINTSTRING' (EXTERN 52)
 1341 81 C4 00 01 00 00                     ADD ESP,256
             -> esac
 1347 EB 00                                 JMP L1219
    mess(4): printstring( "Possible stack error?" )
 1349                      L1222  EQU $
 1349 81 EC 00 01 00 00                     SUB ESP,256
 134F 89 E0                                 MOV EAX,ESP
 1351 50                                    PUSH EAX
 1352 B8 E9 04 00 00                        MOV EAX,COT+1257
 1357 50                                    PUSH EAX
 1358 68 FF 00 00 00                        PUSH 255
 135D E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 1360 83 C4 0C                              ADD ESP,12
 1363 E8 34 00                              CALL 'PRINTSTRING' (EXTERN 52)
 1366 81 C4 00 01 00 00                     ADD ESP,256
             -> esac
 136C EB 00                                 JMP L1219
    mess(5): printstring( "End of Stack dump" )
 136E                      L1223  EQU $
 136E 81 EC 00 01 00 00                     SUB ESP,256
 1374 89 E0                                 MOV EAX,ESP
 1376 50                                    PUSH EAX
 1377 B8 FF 04 00 00                        MOV EAX,COT+1279
 137C 50                                    PUSH EAX
 137D 68 FF 00 00 00                        PUSH 255
 1382 E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 1385 83 C4 0C                              ADD ESP,12
 1388 E8 34 00                              CALL 'PRINTSTRING' (EXTERN 52)
 138B 81 C4 00 01 00 00                     ADD ESP,256
             -> esac
 1391 EB 00                                 JMP L1219
    mess(6): printstring( "Stopping program with exit status=" )
 1393                      L1224  EQU $
 1393 81 EC 00 01 00 00                     SUB ESP,256
 1399 89 E0                                 MOV EAX,ESP
 139B 50                                    PUSH EAX
 139C B8 11 05 00 00                        MOV EAX,COT+1297
 13A1 50                                    PUSH EAX
 13A2 68 FF 00 00 00                        PUSH 255
 13A7 E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 13AA 83 C4 0C                              ADD ESP,12
 13AD E8 34 00                              CALL 'PRINTSTRING' (EXTERN 52)
 13B0 81 C4 00 01 00 00                     ADD ESP,256
             printstring( sub )
 13B6 81 EC 00 01 00 00                     SUB ESP,256
 13BC 89 E0                                 MOV EAX,ESP
 13BE 50                                    PUSH EAX
 13BF 8D 45 DA                              LEA EAX,[EBP-38]
 13C2 50                                    PUSH EAX
 13C3 68 FF 00 00 00                        PUSH 255
 13C8 E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 13CB 83 C4 0C                              ADD ESP,12
 13CE E8 34 00                              CALL 'PRINTSTRING' (EXTERN 52)
 13D1 81 C4 00 01 00 00                     ADD ESP,256
             -> esac
 13D7 EB 00                                 JMP L1219
    mess(*): printstring( "Unknown message# given." )
 13D9                      L1225  EQU $
 13D9                      L1226  EQU $
 13D9 81 EC 00 01 00 00                     SUB ESP,256
 13DF 89 E0                                 MOV EAX,ESP
 13E1 50                                    PUSH EAX
 13E2 B8 34 05 00 00                        MOV EAX,COT+1332
 13E7 50                                    PUSH EAX
 13E8 68 FF 00 00 00                        PUSH 255
 13ED E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 13F0 83 C4 0C                              ADD ESP,12
 13F3 E8 34 00                              CALL 'PRINTSTRING' (EXTERN 52)
 13F6 81 C4 00 01 00 00                     ADD ESP,256
             -> esac
 13FC EB 00                                 JMP L1219
    esac:
 13FE                      L1219  EQU $
        newline
 13FE E8 3C 00                              CALL 'NEWLINE' (EXTERN 60)
    %end
 1401 C9                                    LEAVE
 1402 C3                                    RET
{-----------------------------------------------------------------------------}
    %external %routine messageFormatB( %integer loc )
 1403                      L1227  EQU $
 1403 C8 00 00 01                           ENTER 0000,1

        selectoutput(0)
 1407 6A 00                                 PUSH 0
 1409 E8 27 00                              CALL 'SELECTOUTPUT' (EXTERN 39)
 140C 83 C4 04                              ADD ESP,4
        printstring( "IMPRTL: " )
 140F 81 EC 00 01 00 00                     SUB ESP,256
 1415 89 E0                                 MOV EAX,ESP
 1417 50                                    PUSH EAX
 1418 B8 4C 05 00 00                        MOV EAX,COT+1356
 141D 50                                    PUSH EAX
 141E 68 FF 00 00 00                        PUSH 255
 1423 E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 1426 83 C4 0C                              ADD ESP,12
 1429 E8 34 00                              CALL 'PRINTSTRING' (EXTERN 52)
 142C 81 C4 00 01 00 00                     ADD ESP,256
        printstring( "Called from (x'" )
 1432 81 EC 00 01 00 00                     SUB ESP,256
 1438 89 E0                                 MOV EAX,ESP
 143A 50                                    PUSH EAX
 143B B8 55 05 00 00                        MOV EAX,COT+1365
 1440 50                                    PUSH EAX
 1441 68 FF 00 00 00                        PUSH 255
 1446 E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 1449 83 C4 0C                              ADD ESP,12
 144C E8 34 00                              CALL 'PRINTSTRING' (EXTERN 52)
 144F 81 C4 00 01 00 00                     ADD ESP,256
        printstring( int2ascii(loc,16,0) )
 1455 FF 75 08                              PUSH WORD [EBP+8]
 1458 6A 10                                 PUSH 16
 145A 6A 00                                 PUSH 0
 145C 8D 85 FC FE FF FF                     LEA EAX,[EBP-260]
 1462 50                                    PUSH EAX
 1463 E8 4A 00                              CALL 'INT2ASCII' (EXTERN 74)
 1466 83 C4 10                              ADD ESP,16
 1469 81 EC 00 01 00 00                     SUB ESP,256
 146F 89 E0                                 MOV EAX,ESP
 1471 50                                    PUSH EAX
 1472 8D 85 FC FE FF FF                     LEA EAX,[EBP-260]
 1478 50                                    PUSH EAX
 1479 68 FF 00 00 00                        PUSH 255
 147E E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 1481 83 C4 0C                              ADD ESP,12
 1484 E8 34 00                              CALL 'PRINTSTRING' (EXTERN 52)
 1487 81 C4 00 01 00 00                     ADD ESP,256
        printstring( "') in '" )
 148D 81 EC 00 01 00 00                     SUB ESP,256
 1493 89 E0                                 MOV EAX,ESP
 1495 50                                    PUSH EAX
 1496 B8 65 05 00 00                        MOV EAX,COT+1381
 149B 50                                    PUSH EAX
 149C 68 FF 00 00 00                        PUSH 255
 14A1 E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 14A4 83 C4 0C                              ADD ESP,12
 14A7 E8 34 00                              CALL 'PRINTSTRING' (EXTERN 52)
 14AA 81 C4 00 01 00 00                     ADD ESP,256
        printstring( handler name( loc ) )
 14B0 FF 75 08                              PUSH WORD [EBP+8]
 14B3 8D 85 EC FE FF FF                     LEA EAX,[EBP-276]
 14B9 50                                    PUSH EAX
 14BA E8 67 00                              CALL 'HANDLERNAME' (EXTERN 103)
 14BD 83 C4 08                              ADD ESP,8
 14C0 81 EC 00 01 00 00                     SUB ESP,256
 14C6 89 E0                                 MOV EAX,ESP
 14C8 50                                    PUSH EAX
 14C9 8D 85 EC FE FF FF                     LEA EAX,[EBP-276]
 14CF 50                                    PUSH EAX
 14D0 68 FF 00 00 00                        PUSH 255
 14D5 E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 14D8 83 C4 0C                              ADD ESP,12
 14DB E8 34 00                              CALL 'PRINTSTRING' (EXTERN 52)
 14DE 81 C4 00 01 00 00                     ADD ESP,256
        printstring( "'" )
 14E4 81 EC 00 01 00 00                     SUB ESP,256
 14EA 89 E0                                 MOV EAX,ESP
 14EC 50                                    PUSH EAX
 14ED B8 6D 05 00 00                        MOV EAX,COT+1389
 14F2 50                                    PUSH EAX
 14F3 68 FF 00 00 00                        PUSH 255
 14F8 E8 03 00                              CALL '_IMPSTRCPY' (EXTERN 3)
 14FB 83 C4 0C                              ADD ESP,12
 14FE E8 34 00                              CALL 'PRINTSTRING' (EXTERN 52)
 1501 81 C4 00 01 00 00                     ADD ESP,256
        newline
 1507 E8 3C 00                              CALL 'NEWLINE' (EXTERN 60)
    %end
 150A C9                                    LEAVE
 150B C3                                    RET
{-----------------------------------------------------------------------------}
%endoffile
      _TEXT  ENDS
      CONST  SEGMENT WORD PUBLIC 'CONST'
 0000 01 00                                 db 01,00 ; ..
 0002 00 00                                 db 00,00 ; ..
 0004 00 00                                 db 00,00 ; ..
 0006 00 00                                 db 00,00 ; ..
 0008 0F 00                                 db 0F,00 ; ..
 000A 00 00                                 db 00,00 ; ..
 000C 0D 00                                 db 0D,00 ; ..
 000E 00 00                                 db 00,00 ; ..
 0010 01 28                                 db 01,28 ; .(
 0012 01 2C                                 db 01,2C ; .,
 0014 01 2C                                 db 01,2C ; .,
 0016 01 29                                 db 01,29 ; .)
 0018 20 41                                 db 20,41 ; .A
 001A 62 61                                 db 62,61 ; ba
 001C 6E 64                                 db 6E,64 ; nd
 001E 6F 6E                                 db 6F,6E ; on
 0020 20 70                                 db 20,70 ; .p
 0022 72 6F                                 db 72,6F ; ro
 0024 67 72                                 db 67,72 ; gr
 0026 61 6D                                 db 61,6D ; am
 0028 2C 20                                 db 2C,20 ; ,.
 002A 73 61                                 db 73,61 ; sa
 002C 75 76                                 db 75,76 ; uv
 002E 65 20                                 db 65,20 ; e.
 0030 71 75                                 db 71,75 ; qu
 0032 69 20                                 db 69,20 ; i.
 0034 70 75                                 db 70,75 ; pu
 0036 65 74                                 db 65,74 ; et
 0038 21 05                                 db 21,05 ; !.
 003A 25 73                                 db 25,73 ; %s
 003C 74 6F                                 db 74,6F ; to
 003E 70 16                                 db 70,16 ; p.
 0040 55 73                                 db 55,73 ; Us
 0042 65 72                                 db 65,72 ; er
 0044 20 67                                 db 20,67 ; .g
 0046 65 6E                                 db 65,6E ; en
 0048 65 72                                 db 65,72 ; er
 004A 61 74                                 db 61,74 ; at
 004C 65 64                                 db 65,64 ; ed
 004E 20 65                                 db 20,65 ; .e
 0050 72 72                                 db 72,72 ; rr
 0052 6F 72                                 db 6F,72 ; or
 0054 2E 20                                 db 2E,20 ; ..
 0056 10 49                                 db 10,49 ; .I
 0058 6E 74                                 db 6E,74 ; nt
 005A 65 67                                 db 65,67 ; eg
 005C 65 72                                 db 65,72 ; er
 005E 20 6F                                 db 20,6F ; .o
 0060 76 65                                 db 76,65 ; ve
 0062 72 66                                 db 72,66 ; rf
 0064 6C 6F                                 db 6C,6F ; lo
 0066 77 0D                                 db 77,0D ; w.
 0068 52 65                                 db 52,65 ; Re
 006A 61 6C                                 db 61,6C ; al
 006C 20 6F                                 db 20,6F ; .o
 006E 76 65                                 db 76,65 ; ve
 0070 72 66                                 db 72,66 ; rf
 0072 6C 6F                                 db 6C,6F ; lo
 0074 77 0F                                 db 77,0F ; w.
 0076 53 74                                 db 53,74 ; St
 0078 72 69                                 db 72,69 ; ri
 007A 6E 67                                 db 6E,67 ; ng
 007C 20 6F                                 db 20,6F ; .o
 007E 76 65                                 db 76,65 ; ve
 0080 72 66                                 db 72,66 ; rf
 0082 6C 6F                                 db 6C,6F ; lo
 0084 77 10                                 db 77,10 ; w.
 0086 44 69                                 db 44,69 ; Di
 0088 76 69                                 db 76,69 ; vi
 008A 73 69                                 db 73,69 ; si
 008C 6F 6E                                 db 6F,6E ; on
 008E 20 62                                 db 20,62 ; .b
 0090 79 20                                 db 79,20 ; y.
 0092 7A 65                                 db 7A,65 ; ze
 0094 72 6F                                 db 72,6F ; ro
 0096 0A 54                                 db 0A,54 ; .T
 0098 72 75                                 db 72,75 ; ru
 009A 6E 63                                 db 6E,63 ; nc
 009C 61 74                                 db 61,74 ; at
 009E 69 6F                                 db 69,6F ; io
 00A0 6E 09                                 db 6E,09 ; n.
 00A2 4F 76                                 db 4F,76 ; Ov
 00A4 65 72                                 db 65,72 ; er
 00A6 66 6C                                 db 66,6C ; fl
 00A8 6F 77                                 db 6F,77 ; ow
 00AA 20 10                                 db 20,10 ; ..
 00AC 4E 6F                                 db 4E,6F ; No
 00AE 74 20                                 db 74,20 ; t.
 00B0 65 6E                                 db 65,6E ; en
 00B2 6F 75                                 db 6F,75 ; ou
 00B4 67 68                                 db 67,68 ; gh
 00B6 20 73                                 db 20,73 ; .s
 00B8 74 6F                                 db 74,6F ; to
 00BA 72 65                                 db 72,65 ; re
 00BC 0F 4F                                 db 0F,4F ; .O
 00BE 75 74                                 db 75,74 ; ut
 00C0 70 75                                 db 70,75 ; pu
 00C2 74 20                                 db 74,20 ; t.
 00C4 65 78                                 db 65,78 ; ex
 00C6 63 65                                 db 63,65 ; ce
 00C8 65 64                                 db 65,64 ; ed
 00CA 65 64                                 db 65,64 ; ed
 00CC 0D 54                                 db 0D,54 ; .T
 00CE 69 6D                                 db 69,6D ; im
 00D0 65 20                                 db 65,20 ; e.
 00D2 65 78                                 db 65,78 ; ex
 00D4 63 65                                 db 63,65 ; ce
 00D6 65 64                                 db 65,64 ; ed
 00D8 65 64                                 db 65,64 ; ed
 00DA 10 45                                 db 10,45 ; .E
 00DC 78 63                                 db 78,63 ; xc
 00DE 65 73                                 db 65,73 ; es
 00E0 73 20                                 db 73,20 ; s.
 00E2 52 65                                 db 52,65 ; Re
 00E4 73 6F                                 db 73,6F ; so
 00E6 75 72                                 db 75,72 ; ur
 00E8 63 65                                 db 63,65 ; ce
 00EA 20 15                                 db 20,15 ; ..
 00EC 44 61                                 db 44,61 ; Da
 00EE 74 61                                 db 74,61 ; ta
 00F0 20 65                                 db 20,65 ; .e
 00F2 72 72                                 db 72,72 ; rr
 00F4 6F 72                                 db 6F,72 ; or
 00F6 20 2D                                 db 20,2D ; .-
 00F8 20 53                                 db 20,53 ; .S
 00FA 79 6D                                 db 79,6D ; ym
 00FC 62 6F                                 db 62,6F ; bo
 00FE 6C 20                                 db 6C,20 ; l.
 0100 27 03                                 db 27,03 ; '.
 0102 27 20                                 db 27,20 ; '.
 0104 28 01                                 db 28,01 ; (.
 0106 29 0B                                 db 29,0B ; ).
 0108 44 61                                 db 44,61 ; Da
 010A 74 61                                 db 74,61 ; ta
 010C 20 65                                 db 20,65 ; .e
 010E 72 72                                 db 72,72 ; rr
 0110 6F 72                                 db 6F,72 ; or
 0112 20 0E                                 db 20,0E ; ..
 0114 53 79                                 db 53,79 ; Sy
 0116 6D 62                                 db 6D,62 ; mb
 0118 6F 6C                                 db 6F,6C ; ol
 011A 20 69                                 db 20,69 ; .i
 011C 6E 20                                 db 6E,20 ; n.
 011E 64 61                                 db 64,61 ; da
 0120 74 61                                 db 74,61 ; ta
 0122 0D 49                                 db 0D,49 ; .I
 0124 6E 76                                 db 6E,76 ; nv
 0126 61 6C                                 db 61,6C ; al
 0128 69 64                                 db 69,64 ; id
 012A 20 64                                 db 20,64 ; .d
 012C 61 74                                 db 61,74 ; at
 012E 61 20                                 db 61,20 ; a.
 0130 10 49                                 db 10,49 ; .I
 0132 6C 6C                                 db 6C,6C ; ll
 0134 65 67                                 db 65,67 ; eg
 0136 61 6C                                 db 61,6C ; al
 0138 20 46                                 db 20,46 ; .F
 013A 4F 52                                 db 4F,52 ; OR
 013C 20 6C                                 db 20,6C ; .l
 013E 6F 6F                                 db 6F,6F ; oo
 0140 70 1E                                 db 70,1E ; p.
 0142 49 6C                                 db 49,6C ; Il
 0144 6C 65                                 db 6C,65 ; le
 0146 67 61                                 db 67,61 ; ga
 0148 6C 20                                 db 6C,20 ; l.
 014A 65 78                                 db 65,78 ; ex
 014C 70 6F                                 db 70,6F ; po
 014E 6E 65                                 db 6E,65 ; ne
 0150 6E 74                                 db 6E,74 ; nt
 0152 20 2D                                 db 20,2D ; .-
 0154 20 45                                 db 20,45 ; .E
 0156 78 70                                 db 78,70 ; xp
 0158 6F 6E                                 db 6F,6E ; on
 015A 65 6E                                 db 65,6E ; en
 015C 74 20                                 db 74,20 ; t.
 015E 3D 20                                 db 3D,20 ; =.
 0160 10 41                                 db 10,41 ; .A
 0162 72 72                                 db 72,72 ; rr
 0164 61 79                                 db 61,79 ; ay
 0166 20 69                                 db 20,69 ; .i
 0168 6E 73                                 db 6E,73 ; ns
 016A 69 64                                 db 69,64 ; id
 016C 65 2D                                 db 65,2D ; e-
 016E 6F 75                                 db 6F,75 ; ou
 0170 74 11                                 db 74,11 ; t.
 0172 53 74                                 db 53,74 ; St
 0174 72 69                                 db 72,69 ; ri
 0176 6E 67                                 db 6E,67 ; ng
 0178 20 69                                 db 20,69 ; .i
 017A 6E 73                                 db 6E,73 ; ns
 017C 69 64                                 db 69,64 ; id
 017E 65 2D                                 db 65,2D ; e-
 0180 6F 75                                 db 6F,75 ; ou
 0182 74 12                                 db 74,12 ; t.
 0184 49 6C                                 db 49,6C ; Il
 0186 6C 65                                 db 6C,65 ; le
 0188 67 61                                 db 67,61 ; ga
 018A 6C 20                                 db 6C,20 ; l.
 018C 65 78                                 db 65,78 ; ex
 018E 70 6F                                 db 70,6F ; po
 0190 6E 65                                 db 6E,65 ; ne
 0192 6E 74                                 db 6E,74 ; nt
 0194 20 27                                 db 20,27 ; .'
 0196 01 27                                 db 01,27 ; .'
 0198 14 49                                 db 14,49 ; .I
 019A 6E 76                                 db 6E,76 ; nv
 019C 61 6C                                 db 61,6C ; al
 019E 69 64                                 db 69,64 ; id
 01A0 20 61                                 db 20,61 ; .a
 01A2 72 67                                 db 72,67 ; rg
 01A4 75 6D                                 db 75,6D ; um
 01A6 65 6E                                 db 65,6E ; en
 01A8 74 20                                 db 74,20 ; t.
 01AA 2D 20                                 db 2D,20 ; -.
 01AC 27 0D                                 db 27,0D ; '.
 01AE 20 53                                 db 20,53 ; .S
 01B0 75 62                                 db 75,62 ; ub
 01B2 2D 63                                 db 2D,63 ; -c
 01B4 6C 61                                 db 6C,61 ; la
 01B6 73 73                                 db 73,73 ; ss
 01B8 20 3D                                 db 20,3D ; .=
 01BA 20 0A                                 db 20,0A ; ..
 01BC 2C 20                                 db 2C,20 ; ,.
 01BE 56 61                                 db 56,61 ; Va
 01C0 6C 75                                 db 6C,75 ; lu
 01C2 65 20                                 db 65,20 ; e.
 01C4 3D 20                                 db 3D,20 ; =.
 01C6 01 27                                 db 01,27 ; .'
 01C8 11 43                                 db 11,43 ; .C
 01CA 61 70                                 db 61,70 ; ap
 01CC 61 63                                 db 61,63 ; ac
 01CE 69 74                                 db 69,74 ; it
 01D0 79 20                                 db 79,20 ; y.
 01D2 65 78                                 db 65,78 ; ex
 01D4 63 65                                 db 63,65 ; ce
 01D6 65 64                                 db 65,64 ; ed
 01D8 65 64                                 db 65,64 ; ed
 01DA 17 20                                 db 17,20 ; ..
 01DC 28 53                                 db 28,53 ; (S
 01DE 74 72                                 db 74,72 ; tr
 01E0 69 6E                                 db 69,6E ; in
 01E2 67 20                                 db 67,20 ; g.
 01E4 63 6F                                 db 63,6F ; co
 01E6 70 79                                 db 70,79 ; py
 01E8 20 6F                                 db 20,6F ; .o
 01EA 76 65                                 db 76,65 ; ve
 01EC 72 66                                 db 72,66 ; rf
 01EE 6C 6F                                 db 6C,6F ; lo
 01F0 77 29                                 db 77,29 ; w)
 01F2 19 20                                 db 19,20 ; ..
 01F4 28 53                                 db 28,53 ; (S
 01F6 74 72                                 db 74,72 ; tr
 01F8 69 6E                                 db 69,6E ; in
 01FA 67 20                                 db 67,20 ; g.
 01FC 61 70                                 db 61,70 ; ap
 01FE 70 65                                 db 70,65 ; pe
 0200 6E 64                                 db 6E,64 ; nd
 0202 20 6F                                 db 20,6F ; .o
 0204 76 65                                 db 76,65 ; ve
 0206 72 66                                 db 72,66 ; rf
 0208 6C 6F                                 db 6C,6F ; lo
 020A 77 29                                 db 77,29 ; w)
 020C 01 2E                                 db 01,2E ; ..
 020E 1C 41                                 db 1C,41 ; .A
 0210 72 72                                 db 72,72 ; rr
 0212 61 79                                 db 61,79 ; ay
 0214 20 62                                 db 20,62 ; .b
 0216 6F 75                                 db 6F,75 ; ou
 0218 6E 64                                 db 6E,64 ; nd
 021A 20 66                                 db 20,66 ; .f
 021C 61 75                                 db 61,75 ; au
 021E 6C 74                                 db 6C,74 ; lt
 0220 20 2D                                 db 20,2D ; .-
 0222 20 49                                 db 20,49 ; .I
 0224 6E 64                                 db 6E,64 ; nd
 0226 65 78                                 db 65,78 ; ex
 0228 20 3D                                 db 20,3D ; .=
 022A 20 15                                 db 20,15 ; ..
 022C 53 77                                 db 53,77 ; Sw
 022E 69 74                                 db 69,74 ; it
 0230 63 68                                 db 63,68 ; ch
 0232 20 62                                 db 20,62 ; .b
 0234 6F 75                                 db 6F,75 ; ou
 0236 6E 64                                 db 6E,64 ; nd
 0238 20 66                                 db 20,66 ; .f
 023A 61 75                                 db 61,75 ; au
 023C 6C 74                                 db 6C,74 ; lt
 023E 20 3D                                 db 20,3D ; .=
 0240 20 14                                 db 20,14 ; ..
 0242 49 6C                                 db 49,6C ; Il
 0244 6C 65                                 db 6C,65 ; le
 0246 67 61                                 db 67,61 ; ga
 0248 6C 20                                 db 6C,20 ; l.
 024A 65 76                                 db 65,76 ; ev
 024C 65 6E                                 db 65,6E ; en
 024E 74 20                                 db 74,20 ; t.
 0250 73 69                                 db 73,69 ; si
 0252 67 6E                                 db 67,6E ; gn
 0254 61 6C                                 db 61,6C ; al
 0256 15 43                                 db 15,43 ; .C
 0258 48 41                                 db 48,41 ; HA
 025A 52 4E                                 db 52,4E ; RN
 025C 4F 20                                 db 4F,20 ; O.
 025E 6F 75                                 db 6F,75 ; ou
 0260 74 20                                 db 74,20 ; t.
 0262 6F 66                                 db 6F,66 ; of
 0264 20 72                                 db 20,72 ; .r
 0266 61 6E                                 db 61,6E ; an
 0268 67 65                                 db 67,65 ; ge
 026A 20 27                                 db 20,27 ; .'
 026C 01 27                                 db 01,27 ; .'
 026E 17 54                                 db 17,54 ; .T
 0270 4F 53                                 db 4F,53 ; OS
 0272 54 52                                 db 54,52 ; TR
 0274 49 4E                                 db 49,4E ; IN
 0276 47 20                                 db 47,20 ; G.
 0278 6F 75                                 db 6F,75 ; ou
 027A 74 20                                 db 74,20 ; t.
 027C 6F 66                                 db 6F,66 ; of
 027E 20 72                                 db 20,72 ; .r
 0280 61 6E                                 db 61,6E ; an
 0282 67 65                                 db 67,65 ; ge
 0284 20 27                                 db 20,27 ; .'
 0286 01 27                                 db 01,27 ; .'
 0288 0F 49                                 db 0F,49 ; .I
 028A 6C 6C                                 db 6C,6C ; ll
 028C 65 67                                 db 65,67 ; eg
 028E 61 6C                                 db 61,6C ; al
 0290 20 73                                 db 20,73 ; .s
 0292 68 69                                 db 68,69 ; hi
 0294 66 74                                 db 66,74 ; ft
 0296 20 27                                 db 20,27 ; .'
 0298 01 27                                 db 01,27 ; .'
 029A 27 4F                                 db 27,4F ; 'O
 029C 75 74                                 db 75,74 ; ut
 029E 20 6F                                 db 20,6F ; .o
 02A0 66 20                                 db 66,20 ; f.
 02A2 72 61                                 db 72,61 ; ra
 02A4 6E 67                                 db 6E,67 ; ng
 02A6 65 20                                 db 65,20 ; e.
 02A8 66 61                                 db 66,61 ; fa
 02AA 75 6C                                 db 75,6C ; ul
 02AC 74 20                                 db 74,20 ; t.
 02AE 2D 20                                 db 2D,20 ; -.
 02B0 28 45                                 db 28,45 ; (E
 02B2 76 65                                 db 76,65 ; ve
 02B4 6E 74                                 db 6E,74 ; nt
 02B6 2C 53                                 db 2C,53 ; ,S
 02B8 75 62                                 db 75,62 ; ub
 02BA 2C 49                                 db 2C,49 ; ,I
 02BC 6E 66                                 db 6E,66 ; nf
 02BE 6F 29                                 db 6F,29 ; o)
 02C0 3D 28                                 db 3D,28 ; =(
 02C2 01 2C                                 db 01,2C ; .,
 02C4 01 2C                                 db 01,2C ; .,
 02C6 01 29                                 db 01,29 ; .)
 02C8 11 52                                 db 11,52 ; .R
 02CA 65 73                                 db 65,73 ; es
 02CC 6F 6C                                 db 6F,6C ; ol
 02CE 75 74                                 db 75,74 ; ut
 02D0 69 6F                                 db 69,6F ; io
 02D2 6E 20                                 db 6E,20 ; n.
 02D4 66 61                                 db 66,61 ; fa
 02D6 69 6C                                 db 69,6C ; il
 02D8 73 20                                 db 73,20 ; s.
 02DA 13 55                                 db 13,55 ; .U
 02DC 6E 61                                 db 6E,61 ; na
 02DE 73 73                                 db 73,73 ; ss
 02E0 69 67                                 db 69,67 ; ig
 02E2 6E 65                                 db 6E,65 ; ne
 02E4 64 20                                 db 64,20 ; d.
 02E6 76 61                                 db 76,61 ; va
 02E8 72 69                                 db 72,69 ; ri
 02EA 61 62                                 db 61,62 ; ab
 02EC 6C 65                                 db 6C,65 ; le
 02EE 11 4E                                 db 11,4E ; .N
 02F0 6F 20                                 db 6F,20 ; o.
 02F2 73 77                                 db 73,77 ; sw
 02F4 69 74                                 db 69,74 ; it
 02F6 63 68                                 db 63,68 ; ch
 02F8 20 6C                                 db 20,6C ; .l
 02FA 61 62                                 db 61,62 ; ab
 02FC 65 6C                                 db 65,6C ; el
 02FE 20 27                                 db 20,27 ; .'
 0300 01 27                                 db 01,27 ; .'
 0302 14 46                                 db 14,46 ; .F
 0304 6F 72                                 db 6F,72 ; or
 0306 20 76                                 db 20,76 ; .v
 0308 61 72                                 db 61,72 ; ar
 030A 69 61                                 db 69,61 ; ia
 030C 62 6C                                 db 62,6C ; bl
 030E 65 20                                 db 65,20 ; e.
 0310 63 6F                                 db 63,6F ; co
 0312 72 72                                 db 72,72 ; rr
 0314 75 70                                 db 75,70 ; up
 0316 74 17                                 db 74,17 ; t.
 0318 55 6E                                 db 55,6E ; Un
 031A 64 65                                 db 64,65 ; de
 031C 66 69                                 db 66,69 ; fi
 031E 6E 65                                 db 6E,65 ; ne
 0320 64 20                                 db 64,20 ; d.
 0322 73 77                                 db 73,77 ; sw
 0324 69 74                                 db 69,74 ; it
 0326 63 68                                 db 63,68 ; ch
 0328 20 76                                 db 20,76 ; .v
 032A 61 6C                                 db 61,6C ; al
 032C 75 65                                 db 75,65 ; ue
 032E 20 0C                                 db 20,0C ; ..
 0330 45 6E                                 db 45,6E ; En
 0332 64 20                                 db 64,20 ; d.
 0334 6F 66                                 db 6F,66 ; of
 0336 20 69                                 db 20,69 ; .i
 0338 6E 70                                 db 6E,70 ; np
 033A 75 74                                 db 75,74 ; ut
 033C 17 55                                 db 17,55 ; .U
 033E 6E 65                                 db 6E,65 ; ne
 0340 78 70                                 db 78,70 ; xp
 0342 65 63                                 db 65,63 ; ec
 0344 74 65                                 db 74,65 ; te
 0346 64 20                                 db 64,20 ; d.
 0348 65 6E                                 db 65,6E ; en
 034A 64 20                                 db 64,20 ; d.
 034C 6F 66                                 db 6F,66 ; of
 034E 20 69                                 db 20,69 ; .i
 0350 6E 70                                 db 6E,70 ; np
 0352 75 74                                 db 75,74 ; ut
 0354 20 43                                 db 20,43 ; .C
 0356 6F 75                                 db 6F,75 ; ou
 0358 6C 64                                 db 6C,64 ; ld
 035A 6E 27                                 db 6E,27 ; n'
 035C 74 20                                 db 74,20 ; t.
 035E 6F 70                                 db 6F,70 ; op
 0360 65 6E                                 db 65,6E ; en
 0362 20 66                                 db 20,66 ; .f
 0364 69 6C                                 db 69,6C ; il
 0366 65 2E                                 db 65,2E ; e.
 0368 20 45                                 db 20,45 ; .E
 036A 72 72                                 db 72,72 ; rr
 036C 6F 72                                 db 6F,72 ; or
 036E 20 43                                 db 20,43 ; .C
 0370 6F 64                                 db 6F,64 ; od
 0372 65 20                                 db 65,20 ; e.
 0374 28 01                                 db 28,01 ; (.
 0376 29 13                                 db 29,13 ; ).
 0378 46 69                                 db 46,69 ; Fi
 037A 6C 65                                 db 6C,65 ; le
 037C 20 73                                 db 20,73 ; .s
 037E 79 73                                 db 79,73 ; ys
 0380 74 65                                 db 74,65 ; te
 0382 6D 20                                 db 6D,20 ; m.
 0384 65 72                                 db 65,72 ; er
 0386 72 6F                                 db 72,6F ; ro
 0388 72 20                                 db 72,20 ; r.
 038A 27 01                                 db 27,01 ; '.
 038C 27 0E                                 db 27,0E ; '.
 038E 49 6E                                 db 49,6E ; In
 0390 70 75                                 db 70,75 ; pu
 0392 74 20                                 db 74,20 ; t.
 0394 73 74                                 db 73,74 ; st
 0396 72 65                                 db 72,65 ; re
 0398 61 6D                                 db 61,6D ; am
 039A 20 27                                 db 20,27 ; .'
 039C 0C 27                                 db 0C,27 ; .'
 039E 20 6E                                 db 20,6E ; .n
 03A0 6F 74                                 db 6F,74 ; ot
 03A2 20 6F                                 db 20,6F ; .o
 03A4 70 65                                 db 70,65 ; pe
 03A6 6E 65                                 db 6E,65 ; ne
 03A8 64 0F                                 db 64,0F ; d.
 03AA 4F 75                                 db 4F,75 ; Ou
 03AC 74 70                                 db 74,70 ; tp
 03AE 75 74                                 db 75,74 ; ut
 03B0 20 73                                 db 20,73 ; .s
 03B2 74 72                                 db 74,72 ; tr
 03B4 65 61                                 db 65,61 ; ea
 03B6 6D 20                                 db 6D,20 ; m.
 03B8 27 0C                                 db 27,0C ; '.
 03BA 27 20                                 db 27,20 ; '.
 03BC 6E 6F                                 db 6E,6F ; no
 03BE 74 20                                 db 74,20 ; t.
 03C0 6F 70                                 db 6F,70 ; op
 03C2 65 6E                                 db 65,6E ; en
 03C4 65 64                                 db 65,64 ; ed
 03C6 0D 42                                 db 0D,42 ; .B
 03C8 61 64                                 db 61,64 ; ad
 03CA 20 73                                 db 20,73 ; .s
 03CC 74 72                                 db 74,72 ; tr
 03CE 65 61                                 db 65,61 ; ea
 03D0 6D 23                                 db 6D,23 ; m#
 03D2 20 27                                 db 20,27 ; .'
 03D4 01 27                                 db 01,27 ; .'
 03D6 1E 49                                 db 1E,49 ; .I
 03D8 6E 76                                 db 6E,76 ; nv
 03DA 61 6C                                 db 61,6C ; al
 03DC 69 64                                 db 69,64 ; id
 03DE 20 66                                 db 20,66 ; .f
 03E0 69 6C                                 db 69,6C ; il
 03E2 65 6E                                 db 65,6E ; en
 03E4 61 6D                                 db 61,6D ; am
 03E6 65 20                                 db 65,20 ; e.
 03E8 66 6F                                 db 66,6F ; fo
 03EA 72 20                                 db 72,20 ; r.
 03EC 73 74                                 db 73,74 ; st
 03EE 72 65                                 db 72,65 ; re
 03F0 61 6D                                 db 61,6D ; am
 03F2 23 20                                 db 23,20 ; #.
 03F4 27 01                                 db 27,01 ; '.
 03F6 27 13                                 db 27,13 ; '.
 03F8 49 6E                                 db 49,6E ; In
 03FA 70 75                                 db 70,75 ; pu
 03FC 74 2F                                 db 74,2F ; t/
 03FE 4F 75                                 db 4F,75 ; Ou
 0400 74 70                                 db 74,70 ; tp
 0402 75 74                                 db 75,74 ; ut
 0404 20 65                                 db 20,65 ; .e
 0406 72 72                                 db 72,72 ; rr
 0408 6F 72                                 db 6F,72 ; or
 040A 20 2D                                 db 20,2D ; .-
 040C 49 6E                                 db 49,6E ; In
 040E 63 6F                                 db 63,6F ; co
 0410 72 72                                 db 72,72 ; rr
 0412 65 63                                 db 65,63 ; ec
 0414 74 20                                 db 74,20 ; t.
 0416 63 6F                                 db 63,6F ; co
 0418 6D 6D                                 db 6D,6D ; mm
 041A 61 6E                                 db 61,6E ; an
 041C 64 20                                 db 64,20 ; d.
 041E 6C 69                                 db 6C,69 ; li
 0420 6E 65                                 db 6E,65 ; ne
 0422 20 70                                 db 20,70 ; .p
 0424 61 72                                 db 61,72 ; ar
 0426 61 6D                                 db 61,6D ; am
 0428 65 74                                 db 65,74 ; et
 042A 65 72                                 db 65,72 ; er
 042C 20 63                                 db 20,63 ; .c
 042E 6F 75                                 db 6F,75 ; ou
 0430 6E 74                                 db 6E,74 ; nt
 0432 2E 20                                 db 2E,20 ; ..
 0434 41 72                                 db 41,72 ; Ar
 0436 67 63                                 db 67,63 ; gc
 0438 3D 18                                 db 3D,18 ; =.
 043A 4C 69                                 db 4C,69 ; Li
 043C 62 72                                 db 62,72 ; br
 043E 61 72                                 db 61,72 ; ar
 0440 79 20                                 db 79,20 ; y.
 0442 70 72                                 db 70,72 ; pr
 0444 6F 63                                 db 6F,63 ; oc
 0446 65 64                                 db 65,64 ; ed
 0448 75 72                                 db 75,72 ; ur
 044A 65 20                                 db 65,20 ; e.
 044C 65 72                                 db 65,72 ; er
 044E 72 6F                                 db 72,6F ; ro
 0450 72 20                                 db 72,20 ; r.
 0452 07 53                                 db 07,53 ; .S
 0454 69 67                                 db 69,67 ; ig
 0456 6E 61                                 db 6E,61 ; na
 0458 6C 20                                 db 6C,20 ; l.
 045A 08 20                                 db 08,20 ; ..
 045C 63 61                                 db 63,61 ; ca
 045E 6C 6C                                 db 6C,6C ; ll
 0460 65 64                                 db 65,64 ; ed
 0462 2E 00                                 db 2E,00 ; ..
 0464 01 00                                 db 01,00 ; ..
 0466 00 00                                 db 00,00 ; ..
 0468 01 00                                 db 01,00 ; ..
 046A 00 00                                 db 00,00 ; ..
 046C 08 00                                 db 08,00 ; ..
 046E 00 00                                 db 00,00 ; ..
 0470 0D 00                                 db 0D,00 ; ..
 0472 00 00                                 db 00,00 ; ..
 0474 08 49                                 db 08,49 ; .I
 0476 4D 50                                 db 4D,50 ; MP
 0478 52 54                                 db 52,54 ; RT
 047A 4C 3A                                 db 4C,3A ; L:
 047C 20 0B                                 db 20,0B ; ..
 047E 53 48                                 db 53,48 ; SH
 0480 4F 57                                 db 4F,57 ; OW
 0482 45 56                                 db 45,56 ; EV
 0484 45 4E                                 db 45,4E ; EN
 0486 54 3A                                 db 54,3A ; T:
 0488 20 28                                 db 20,28 ; .(
 048A 53 74                                 db 53,74 ; St
 048C 61 72                                 db 61,72 ; ar
 048E 74 20                                 db 74,20 ; t.
 0490 6F 66                                 db 6F,66 ; of
 0492 20 53                                 db 20,53 ; .S
 0494 74 61                                 db 74,61 ; ta
 0496 63 6B                                 db 63,6B ; ck
 0498 20 64                                 db 20,64 ; .d
 049A 75 6D                                 db 75,6D ; um
 049C 70 20                                 db 70,20 ; p.
 049E 2D 20                                 db 2D,20 ; -.
 04A0 74 72                                 db 74,72 ; tr
 04A2 69 67                                 db 69,67 ; ig
 04A4 67 65                                 db 67,65 ; ge
 04A6 72 65                                 db 72,65 ; re
 04A8 64 20                                 db 64,20 ; d.
 04AA 61 74                                 db 61,74 ; at
 04AC 20 6C                                 db 20,6C ; .l
 04AE 69 6E                                 db 69,6E ; in
 04B0 65 3D                                 db 65,3D ; e=
 04B2 2D 53                                 db 2D,53 ; -S
 04B4 69 67                                 db 69,67 ; ig
 04B6 6E 61                                 db 6E,61 ; na
 04B8 6C 20                                 db 6C,20 ; l.
 04BA 4E 6F                                 db 4E,6F ; No
 04BC 20 68                                 db 20,68 ; .h
 04BE 61 6E                                 db 61,6E ; an
 04C0 64 6C                                 db 64,6C ; dl
 04C2 65 72                                 db 65,72 ; er
 04C4 20 66                                 db 20,66 ; .f
 04C6 6F 75                                 db 6F,75 ; ou
 04C8 6E 64                                 db 6E,64 ; nd
 04CA 20 66                                 db 20,66 ; .f
 04CC 6F 72                                 db 6F,72 ; or
 04CE 20 73                                 db 20,73 ; .s
 04D0 69 67                                 db 69,67 ; ig
 04D2 6E 61                                 db 6E,61 ; na
 04D4 6C 6C                                 db 6C,6C ; ll
 04D6 65 64                                 db 65,64 ; ed
 04D8 20 65                                 db 20,65 ; .e
 04DA 76 65                                 db 76,65 ; ve
 04DC 6E 74                                 db 6E,74 ; nt
 04DE 20 28                                 db 20,28 ; .(
 04E0 02 2C                                 db 02,2C ; .,
 04E2 20 02                                 db 20,02 ; ..
 04E4 2C 20                                 db 2C,20 ; ,.
 04E6 02 29                                 db 02,29 ; .)
 04E8 2E 15                                 db 2E,15 ; ..
 04EA 50 6F                                 db 50,6F ; Po
 04EC 73 73                                 db 73,73 ; ss
 04EE 69 62                                 db 69,62 ; ib
 04F0 6C 65                                 db 6C,65 ; le
 04F2 20 73                                 db 20,73 ; .s
 04F4 74 61                                 db 74,61 ; ta
 04F6 63 6B                                 db 63,6B ; ck
 04F8 20 65                                 db 20,65 ; .e
 04FA 72 72                                 db 72,72 ; rr
 04FC 6F 72                                 db 6F,72 ; or
 04FE 3F 11                                 db 3F,11 ; ?.
 0500 45 6E                                 db 45,6E ; En
 0502 64 20                                 db 64,20 ; d.
 0504 6F 66                                 db 6F,66 ; of
 0506 20 53                                 db 20,53 ; .S
 0508 74 61                                 db 74,61 ; ta
 050A 63 6B                                 db 63,6B ; ck
 050C 20 64                                 db 20,64 ; .d
 050E 75 6D                                 db 75,6D ; um
 0510 70 22                                 db 70,22 ; p"
 0512 53 74                                 db 53,74 ; St
 0514 6F 70                                 db 6F,70 ; op
 0516 70 69                                 db 70,69 ; pi
 0518 6E 67                                 db 6E,67 ; ng
 051A 20 70                                 db 20,70 ; .p
 051C 72 6F                                 db 72,6F ; ro
 051E 67 72                                 db 67,72 ; gr
 0520 61 6D                                 db 61,6D ; am
 0522 20 77                                 db 20,77 ; .w
 0524 69 74                                 db 69,74 ; it
 0526 68 20                                 db 68,20 ; h.
 0528 65 78                                 db 65,78 ; ex
 052A 69 74                                 db 69,74 ; it
 052C 20 73                                 db 20,73 ; .s
 052E 74 61                                 db 74,61 ; ta
 0530 74 75                                 db 74,75 ; tu
 0532 73 3D                                 db 73,3D ; s=
 0534 17 55                                 db 17,55 ; .U
 0536 6E 6B                                 db 6E,6B ; nk
 0538 6E 6F                                 db 6E,6F ; no
 053A 77 6E                                 db 77,6E ; wn
 053C 20 6D                                 db 20,6D ; .m
 053E 65 73                                 db 65,73 ; es
 0540 73 61                                 db 73,61 ; sa
 0542 67 65                                 db 67,65 ; ge
 0544 23 20                                 db 23,20 ; #.
 0546 67 69                                 db 67,69 ; gi
 0548 76 65                                 db 76,65 ; ve
 054A 6E 2E                                 db 6E,2E ; n.
 054C 08 49                                 db 08,49 ; .I
 054E 4D 50                                 db 4D,50 ; MP
 0550 52 54                                 db 52,54 ; RT
 0552 4C 3A                                 db 4C,3A ; L:
 0554 20 0F                                 db 20,0F ; ..
 0556 43 61                                 db 43,61 ; Ca
 0558 6C 6C                                 db 6C,6C ; ll
 055A 65 64                                 db 65,64 ; ed
 055C 20 66                                 db 20,66 ; .f
 055E 72 6F                                 db 72,6F ; ro
 0560 6D 20                                 db 6D,20 ; m.
 0562 28 78                                 db 28,78 ; (x
 0564 27 07                                 db 27,07 ; '.
 0566 27 29                                 db 27,29 ; ')
 0568 20 69                                 db 20,69 ; .i
 056A 6E 20                                 db 6E,20 ; n.
 056C 27 01                                 db 27,01 ; '.
 056E 27 00                                 db 27,00 ; '.
      CONST  ENDS
      _TEXT  SEGMENT WORD PUBLIC 'CODE'
            ENDS
      DATA  SEGMENT WORD PUBLIC 'DATA'
 0000 00 00                                 db 00,00 ; ..
 0002 00 00                                 db 00,00 ; ..
 0004 00 00                                 db 00,00 ; ..
 0006 00 00                                 db 00,00 ; ..
 0008 00 00                                 db 00,00 ; ..
 000A 00 00                                 db 00,00 ; ..
 000C 00 00                                 db 00,00 ; ..
 000E 00 00                                 db 00,00 ; ..
 0010 00 00                                 db 00,00 ; ..
 0012 00 00                                 db 00,00 ; ..
 0014 00 00                                 db 00,00 ; ..
 0016 00 00                                 db 00,00 ; ..
 0018 00 00                                 db 00,00 ; ..
 001A 00 00                                 db 00,00 ; ..
 001C 00 00                                 db 00,00 ; ..
 001E 00 00                                 db 00,00 ; ..
 0020 00 00                                 db 00,00 ; ..
 0022 00 00                                 db 00,00 ; ..
 0024 00 00                                 db 00,00 ; ..
 0026 00 00                                 db 00,00 ; ..
 0028 00 00                                 db 00,00 ; ..
 002A 00 00                                 db 00,00 ; ..
 002C 00 00                                 db 00,00 ; ..
 002E 00 00                                 db 00,00 ; ..
 0030 00 00                                 db 00,00 ; ..
 0032 00 00                                 db 00,00 ; ..
 0034 00 00                                 db 00,00 ; ..
 0036 00 00                                 db 00,00 ; ..
 0038 00 00                                 db 00,00 ; ..
 003A 00 00                                 db 00,00 ; ..
 003C 00 00                                 db 00,00 ; ..
 003E 00 00                                 db 00,00 ; ..
 0040 00 00                                 db 00,00 ; ..
 0042 00 00                                 db 00,00 ; ..
 0044 00 00                                 db 00,00 ; ..
 0046 00 00                                 db 00,00 ; ..
 0048 00 00                                 db 00,00 ; ..
 004A 00 00                                 db 00,00 ; ..
 004C 00 00                                 db 00,00 ; ..
 004E 00 00                                 db 00,00 ; ..
 0050 00 00                                 db 00,00 ; ..
 0052 00 00                                 db 00,00 ; ..
 0054 00 00                                 db 00,00 ; ..
 0056 00 00                                 db 00,00 ; ..
 0058 00 00                                 db 00,00 ; ..
 005A 00 00                                 db 00,00 ; ..
 005C 00 00                                 db 00,00 ; ..
 005E 00 00                                 db 00,00 ; ..
 0060 00 00                                 db 00,00 ; ..
 0062 00 00                                 db 00,00 ; ..
 0064 00 00                                 db 00,00 ; ..
 0066 00 00                                 db 00,00 ; ..
 0068 00 00                                 db 00,00 ; ..
 006A 00 00                                 db 00,00 ; ..
 006C 00 00                                 db 00,00 ; ..
 006E 00 00                                 db 00,00 ; ..
 0070 00 00                                 db 00,00 ; ..
 0072 00 00                                 db 00,00 ; ..
 0074 00 00                                 db 00,00 ; ..
 0076 00 00                                 db 00,00 ; ..
 0078 00 00                                 db 00,00 ; ..
 007A 00 00                                 db 00,00 ; ..
 007C 00 00                                 db 00,00 ; ..
 007E 00 00                                 db 00,00 ; ..
 0080 00 00                                 db 00,00 ; ..
 0082 00 00                                 db 00,00 ; ..
 0084 00 00                                 db 00,00 ; ..
 0086 00 00                                 db 00,00 ; ..
 0088 00 00                                 db 00,00 ; ..
 008A 00 00                                 db 00,00 ; ..
 008C 00 00                                 db 00,00 ; ..
 008E 00 00                                 db 00,00 ; ..
 0090 00 00                                 db 00,00 ; ..
 0092 00 00                                 db 00,00 ; ..
 0094 00 00                                 db 00,00 ; ..
 0096 00 00                                 db 00,00 ; ..
 0098 00 00                                 db 00,00 ; ..
 009A 00 00                                 db 00,00 ; ..
 009C 00 00                                 db 00,00 ; ..
 009E 00 00                                 db 00,00 ; ..
 00A0 00 00                                 db 00,00 ; ..
 00A2 00 00                                 db 00,00 ; ..
 00A4 00 00                                 db 00,00 ; ..
 00A6 00 00                                 db 00,00 ; ..
 00A8 00 00                                 db 00,00 ; ..
 00AA 00 00                                 db 00,00 ; ..
 00AC 00 00                                 db 00,00 ; ..
 00AE 00 00                                 db 00,00 ; ..
 00B0 00 00                                 db 00,00 ; ..
 00B2 00 00                                 db 00,00 ; ..
 00B4 00 00                                 db 00,00 ; ..
 00B6 00 00                                 db 00,00 ; ..
 00B8 00 00                                 db 00,00 ; ..
 00BA 00 00                                 db 00,00 ; ..
 00BC 00 00                                 db 00,00 ; ..
 00BE 00 00                                 db 00,00 ; ..
 00C0 00 00                                 db 00,00 ; ..
 00C2 00 00                                 db 00,00 ; ..
 00C4 00 00                                 db 00,00 ; ..
 00C6 00 00                                 db 00,00 ; ..
 00C8 00 00                                 db 00,00 ; ..
 00CA 00 00                                 db 00,00 ; ..
 00CC 00 00                                 db 00,00 ; ..
 00CE 00 00                                 db 00,00 ; ..
 00D0 00 00                                 db 00,00 ; ..
 00D2 00 00                                 db 00,00 ; ..
 00D4 00 00                                 db 00,00 ; ..
 00D6 00 00                                 db 00,00 ; ..
 00D8 00 00                                 db 00,00 ; ..
 00DA 00 00                                 db 00,00 ; ..
 00DC 00 00                                 db 00,00 ; ..
 00DE 00 00                                 db 00,00 ; ..
 00E0 00 00                                 db 00,00 ; ..
 00E2 00 00                                 db 00,00 ; ..
 00E4 00 00                                 db 00,00 ; ..
 00E6 00 00                                 db 00,00 ; ..
 00E8 00 00                                 db 00,00 ; ..
 00EA 00 00                                 db 00,00 ; ..
 00EC 00 00                                 db 00,00 ; ..
 00EE 00 00                                 db 00,00 ; ..
 00F0 00 00                                 db 00,00 ; ..
 00F2 00 00                                 db 00,00 ; ..
 00F4 00 00                                 db 00,00 ; ..
 00F6 00 00                                 db 00,00 ; ..
 00F8 00 00                                 db 00,00 ; ..
 00FA 00 00                                 db 00,00 ; ..
 00FC 00 00                                 db 00,00 ; ..
 00FE 00 00                                 db 00,00 ; ..
 0100 00 00                                 db 00,00 ; ..
 0102 00 00                                 db 00,00 ; ..
 0104 00 00                                 db 00,00 ; ..
 0106 00 00                                 db 00,00 ; ..
 0108 00 00                                 db 00,00 ; ..
 010A 00 00                                 db 00,00 ; ..
 010C 00 00                                 db 00,00 ; ..
 010E 00 00                                 db 00,00 ; ..
      DATA    ENDS
              ENDS
      _SWTAB  SEGMENT WORD PUBLIC '_SWTAB'
 0000 EB 03                                 db EB,03 ; ..
 0002 F2 03                                 db F2,03 ; ..
 0004 06 04                                 db 06,04 ; ..
 0006 1A 04                                 db 1A,04 ; ..
 0008 2E 04                                 db 2E,04 ; ..
 000A 42 04                                 db 42,04 ; B.
 000C 56 04                                 db 56,04 ; V.
 000E 6C 04                                 db 6C,04 ; l.
 0010 80 04                                 db 80,04 ; ..
 0012 94 04                                 db 94,04 ; ..
 0014 A8 04                                 db A8,04 ; ..
 0016 BC 04                                 db BC,04 ; ..
 0018 BD 04                                 db BD,04 ; ..
 001A BE 04                                 db BE,04 ; ..
 001C BF 04                                 db BF,04 ; ..
 001E C0 04                                 db C0,04 ; ..
 0020 FB 03                                 db FB,03 ; ..
 0022 F5 03                                 db F5,03 ; ..
 0024 F7 03                                 db F7,03 ; ..
 0026 F8 03                                 db F8,03 ; ..
 0028 F9 03                                 db F9,03 ; ..
 002A FA 03                                 db FA,03 ; ..
 002C FC 03                                 db FC,03 ; ..
 002E FD 03                                 db FD,03 ; ..
 0030 FE 03                                 db FE,03 ; ..
 0032 FF 03                                 db FF,03 ; ..
 0034 00 04                                 db 00,04 ; ..
 0036 01 04                                 db 01,04 ; ..
 0038 02 04                                 db 02,04 ; ..
 003A 03 04                                 db 03,04 ; ..
 003C 04 04                                 db 04,04 ; ..
 003E 05 04                                 db 05,04 ; ..
 0040 0D 04                                 db 0D,04 ; ..
 0042 09 04                                 db 09,04 ; ..
 0044 0B 04                                 db 0B,04 ; ..
 0046 0C 04                                 db 0C,04 ; ..
 0048 0E 04                                 db 0E,04 ; ..
 004A 0F 04                                 db 0F,04 ; ..
 004C 10 04                                 db 10,04 ; ..
 004E 11 04                                 db 11,04 ; ..
 0050 12 04                                 db 12,04 ; ..
 0052 13 04                                 db 13,04 ; ..
 0054 14 04                                 db 14,04 ; ..
 0056 15 04                                 db 15,04 ; ..
 0058 16 04                                 db 16,04 ; ..
 005A 17 04                                 db 17,04 ; ..
 005C 18 04                                 db 18,04 ; ..
 005E 19 04                                 db 19,04 ; ..
 0060 1F 04                                 db 1F,04 ; ..
 0062 1D 04                                 db 1D,04 ; ..
 0064 20 04                                 db 20,04 ; ..
 0066 21 04                                 db 21,04 ; !.
 0068 22 04                                 db 22,04 ; ".
 006A 23 04                                 db 23,04 ; #.
 006C 24 04                                 db 24,04 ; $.
 006E 25 04                                 db 25,04 ; %.
 0070 26 04                                 db 26,04 ; &.
 0072 27 04                                 db 27,04 ; '.
 0074 28 04                                 db 28,04 ; (.
 0076 29 04                                 db 29,04 ; ).
 0078 2A 04                                 db 2A,04 ; *.
 007A 2B 04                                 db 2B,04 ; +.
 007C 2C 04                                 db 2C,04 ; ,.
 007E 2D 04                                 db 2D,04 ; -.
 0080 33 04                                 db 33,04 ; 3.
 0082 31 04                                 db 31,04 ; 1.
 0084 34 04                                 db 34,04 ; 4.
 0086 35 04                                 db 35,04 ; 5.
 0088 36 04                                 db 36,04 ; 6.
 008A 37 04                                 db 37,04 ; 7.
 008C 38 04                                 db 38,04 ; 8.
 008E 39 04                                 db 39,04 ; 9.
 0090 3A 04                                 db 3A,04 ; :.
 0092 3B 04                                 db 3B,04 ; ;.
 0094 3C 04                                 db 3C,04 ; <.
 0096 3D 04                                 db 3D,04 ; =.
 0098 3E 04                                 db 3E,04 ; >.
 009A 3F 04                                 db 3F,04 ; ?.
 009C 40 04                                 db 40,04 ; @.
 009E 41 04                                 db 41,04 ; A.
 00A0 4B 04                                 db 4B,04 ; K.
 00A2 45 04                                 db 45,04 ; E.
 00A4 47 04                                 db 47,04 ; G.
 00A6 48 04                                 db 48,04 ; H.
 00A8 49 04                                 db 49,04 ; I.
 00AA 4A 04                                 db 4A,04 ; J.
 00AC 4C 04                                 db 4C,04 ; L.
 00AE 4D 04                                 db 4D,04 ; M.
 00B0 4E 04                                 db 4E,04 ; N.
 00B2 4F 04                                 db 4F,04 ; O.
 00B4 50 04                                 db 50,04 ; P.
 00B6 51 04                                 db 51,04 ; Q.
 00B8 52 04                                 db 52,04 ; R.
 00BA 53 04                                 db 53,04 ; S.
 00BC 54 04                                 db 54,04 ; T.
 00BE 55 04                                 db 55,04 ; U.
 00C0 63 04                                 db 63,04 ; c.
 00C2 59 04                                 db 59,04 ; Y.
 00C4 5D 04                                 db 5D,04 ; ].
 00C6 5E 04                                 db 5E,04 ; ^.
 00C8 5F 04                                 db 5F,04 ; _.
 00CA 60 04                                 db 60,04 ; `.
 00CC 61 04                                 db 61,04 ; a.
 00CE 62 04                                 db 62,04 ; b.
 00D0 64 04                                 db 64,04 ; d.
 00D2 65 04                                 db 65,04 ; e.
 00D4 66 04                                 db 66,04 ; f.
 00D6 67 04                                 db 67,04 ; g.
 00D8 68 04                                 db 68,04 ; h.
 00DA 69 04                                 db 69,04 ; i.
 00DC 6A 04                                 db 6A,04 ; j.
 00DE 6B 04                                 db 6B,04 ; k.
 00E0 6F 04                                 db 6F,04 ; o.
 00E2 70 04                                 db 70,04 ; p.
 00E4 71 04                                 db 71,04 ; q.
 00E6 72 04                                 db 72,04 ; r.
 00E8 73 04                                 db 73,04 ; s.
 00EA 74 04                                 db 74,04 ; t.
 00EC 75 04                                 db 75,04 ; u.
 00EE 76 04                                 db 76,04 ; v.
 00F0 77 04                                 db 77,04 ; w.
 00F2 78 04                                 db 78,04 ; x.
 00F4 79 04                                 db 79,04 ; y.
 00F6 7A 04                                 db 7A,04 ; z.
 00F8 7B 04                                 db 7B,04 ; {.
 00FA 7C 04                                 db 7C,04 ; |.
 00FC 7D 04                                 db 7D,04 ; }.
 00FE 7E 04                                 db 7E,04 ; ~.
 0100 87 04                                 db 87,04 ; ..
 0102 83 04                                 db 83,04 ; ..
 0104 85 04                                 db 85,04 ; ..
 0106 86 04                                 db 86,04 ; ..
 0108 88 04                                 db 88,04 ; ..
 010A 89 04                                 db 89,04 ; ..
 010C 8A 04                                 db 8A,04 ; ..
 010E 8B 04                                 db 8B,04 ; ..
 0110 8C 04                                 db 8C,04 ; ..
 0112 8D 04                                 db 8D,04 ; ..
 0114 8E 04                                 db 8E,04 ; ..
 0116 8F 04                                 db 8F,04 ; ..
 0118 90 04                                 db 90,04 ; ..
 011A 91 04                                 db 91,04 ; ..
 011C 92 04                                 db 92,04 ; ..
 011E 93 04                                 db 93,04 ; ..
 0120 97 04                                 db 97,04 ; ..
 0122 99 04                                 db 99,04 ; ..
 0124 9A 04                                 db 9A,04 ; ..
 0126 9B 04                                 db 9B,04 ; ..
 0128 9C 04                                 db 9C,04 ; ..
 012A 9D 04                                 db 9D,04 ; ..
 012C A0 04                                 db A0,04 ; ..
 012E A1 04                                 db A1,04 ; ..
 0130 A2 04                                 db A2,04 ; ..
 0132 9E 04                                 db 9E,04 ; ..
 0134 9F 04                                 db 9F,04 ; ..
 0136 A3 04                                 db A3,04 ; ..
 0138 A4 04                                 db A4,04 ; ..
 013A A5 04                                 db A5,04 ; ..
 013C A6 04                                 db A6,04 ; ..
 013E A7 04                                 db A7,04 ; ..
 0140 AD 04                                 db AD,04 ; ..
 0142 AB 04                                 db AB,04 ; ..
 0144 AE 04                                 db AE,04 ; ..
 0146 AF 04                                 db AF,04 ; ..
 0148 B0 04                                 db B0,04 ; ..
 014A B1 04                                 db B1,04 ; ..
 014C B2 04                                 db B2,04 ; ..
 014E B3 04                                 db B3,04 ; ..
 0150 B4 04                                 db B4,04 ; ..
 0152 B5 04                                 db B5,04 ; ..
 0154 B6 04                                 db B6,04 ; ..
 0156 B7 04                                 db B7,04 ; ..
 0158 B8 04                                 db B8,04 ; ..
 015A B9 04                                 db B9,04 ; ..
 015C BA 04                                 db BA,04 ; ..
 015E BB 04                                 db BB,04 ; ..
 0160 C2 04                                 db C2,04 ; ..
 0162 C4 04                                 db C4,04 ; ..
 0164 C5 04                                 db C5,04 ; ..
 0166 C6 04                                 db C6,04 ; ..
 0168 C7 04                                 db C7,04 ; ..
 016A C8 04                                 db C8,04 ; ..
 016C C9 04                                 db C9,04 ; ..
 016E CA 04                                 db CA,04 ; ..
      _SWTAB   ENDS
