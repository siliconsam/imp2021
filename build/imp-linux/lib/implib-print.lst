         Edinburgh IMP77 Compiler - Version 8.4

   1  {----------------------------------------------------------------------------}
   2      ! Print a floating point number out, along the lines of
   3      ! +/-nnn.nnn@+/-nn, to occupy Places character spaces.
   4      ! Note - there's a bug in this code such that it does not
   5      ! round the number properly.  EG 3.999999999 to 4 places
   6      ! should be 4.00 but we print 3.99
   7  
   8      %external %routine print(%longreal x, %integer places)
   9          %integer exponent, digit, point, printexpo
   10  
   11          %if x = 0 %start
   12              printsymbol('0')
   13              printsymbol('.')
   14              printsymbol('0')
   15              %while places > 3 %cycle
   16                  printsymbol('0')
   17                  places = places - 1
   18              %repeat
   19              %return
   20          %finish
   21  
   22          %if x < 0 %then printsymbol('-') %and x = -x %and places = places - 1
   23  
   24          %if places < 3 %then places = 3
   25     
   26          exponent = 0
   27          printexpo = 0
   28  
   29          %while x < 1 %cycle
   30              x = x * 10
   31              exponent = exponent - 1
   32          %repeat
   33  
   34          %while x >= 10 %cycle
   35              x = x / 10
   36              exponent = exponent + 1
   37          %repeat
   38  
   39          ! Now X is between 1.0 and 9.99 and exponent is set accordingly
   40          ! If the exponent is "large" we will use scientific notation
   41          point = places - 2;     ! for useful digits after the "0."
   42          %if exponent >= places %or exponent < -point %start
   43              printexpo = exponent
   44              exponent = 0
   45              places = places - 2
   46          %finish
   47  
   48          ! Now the exponent is small-ish
   49          %if exponent < 0 %start;      ! 0.nnnn
   50              printsymbol('0')
   51              printsymbol('.')
   52              places = places - 2
   53  
   54              %while exponent < -1 %cycle
   55                  printsymbol('0')
   56                  exponent = exponent + 1
   57                  places = places - 1
   58              %repeat
   59  
   60              point = -1; ! because we've already passed that
   61          %else;          ! nnn.nnn
   62              point = exponent
   63          %finish
   64  
   65          %while places > 0 %cycle
   66              digit = int pt(x)
   67              ! Rounding as we go through this loop can "oversize" the digit.  This
   68              ! of course tells us that we should have printed (eg) 40000 but we
   69              ! are now stuck with printing 39999
   70              %if digit > 9 %then digit = 9
   71              printsymbol(digit + '0')
   72              x = (x - digit)*10
   73              %if point = 0 %then printsymbol('.') %and places = places - 1
   74              point = point - 1
   75              places = places - 1
   76          %repeat
   77  
   78          %if printexpo # 0 %start
   79              printsymbol('@')
   80              write(printexpo, 1)
   81          %finish
   82      %end
   83  
   84  {----------------------------------------------------------------------------}
   85  %endoffile

   58 Statements compiled
