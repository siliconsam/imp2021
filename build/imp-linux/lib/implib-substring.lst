         Edinburgh IMP77 Compiler - Version 8.4

   1  {----------------------------------------------------------------------------}
   2      %external %string(255) %function sub string(%string(255) s, %integer from, to)
   3          %integer get, put
   4          %string(255) temp
   5  
   6          ! Do some defensive error checking first
   7          %signal 6, 2, from %if from < 0 %or from > length(s)
   8          %signal 6, 2, to %if to < 0 %or to > length(s)
   9          %signal 5, 3 %if from > to
   10  
   11          ! We don't use string operations, and instead hand-poke
   12          ! the characters, relying on the compiler primitive map
   13          ! functions to plant efficient code
   14  
   15          length(temp) = (to - from) + 1
   16          put = 1
   17          get = from
   18          %while get <= to %cycle
   19              charno(temp, put) = charno(s, get)
   20              put = put + 1
   21              get = get + 1
   22          %repeat
   23  
   24          %result = temp
   25      %end
   26  
   27  {----------------------------------------------------------------------------}
   28  %endoffile

   17 Statements compiled
