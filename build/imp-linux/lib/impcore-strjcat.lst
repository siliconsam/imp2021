         Edinburgh IMP77 Compiler - Version 8.4

   1  {------------------------------------------------------------------------------}
   2      %external %routine impstrjcat ( %byte %name dst,src, %integer len )
   3          %integer i
   4          %integer count
   5          %byte dlen,slen
   6          %byte %name srcx,dstx
   7  
   8          %if (len = 0) %then len = MAXLENIMPSTRING; ! string(*)name - comes from general %name's etc
   9  
   10          dlen = dst;   ! pick up existing destination length
   11          slen = src;   ! fetch the source length
   12  
   13          %if ((dlen + slen) > len) %start { force the length to fit }
   14              count = len - dlen
   15          %else
   16              count = slen
   17          %finish
   18          dlen = dlen + count
   19  
   20          ! update the destination count
   21          dstx == byteinteger( addr( dst) ); ! get the address
   22          dstx = dlen;                       ! set the new length
   23  
   24          ! copy across the source chars
   25          %for i = 1,1,count %cycle
   26              srcx == byteinteger( addr(src) + i )
   27              dstx == byteinteger( addr(dst) + (dlen - count) + i )
   28              dstx = srcx
   29          %repeat
   30      %end
   31  
   32  {------------------------------------------------------------------------------}
   33  %endoffile

   23 Statements compiled
