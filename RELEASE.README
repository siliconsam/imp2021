
Release Version 1.03

Modified imprtl-io.imp, stdperm.imp, impcore-main.imp, pass2.imp to provide a switch to turn on/off events
triggered by reading -1 indicating end of input file.
The end of file event trigger is on by default.

To do the switch on/off the following 2 routines were added to imprtl-io.imp
    %external %routine allow eof event
    %external %routine block eof event
These have been added to the stdperm.imp
pass2.imp has been modified to switch OFF the end of input file event trigger.

Reason for change:
In pass2, when inserting source code in the .cod file, the end of file would occur causing compilation to halt.
However, the generated code would still be correct.

Additional example code has been provided in the tests/examples/readtables folder.
This adds a utility to read the parse tables generated by takeon from a grammar and re-create the debug
lex and parse files.
This will allow manual re-engineering of the original grammar file.

Release Version 1.02

sizeof, typeof bugs corrected.
They will work on any %name parameter.

Extra routines added to the stdperm.imp list
! These next 5 functions only work on those %name parameters which reference
! an array's (Dope Vector Pointer,Array Data Address)
%external %integer       %fn  %spec     array entry size( %name n )
%external %integer       %fn  %spec     array entry type( %name n )
%external %integer       %fn  %spec     array dimensions( %name n )
%external %integer       %fn  %spec     array lower bound( %name n, %integer index )
%external %integer       %fn  %spec     array upper bound( %name n, %integer index )

These routines allow limited introspection on any array.
See example code in examples/arraytest folder

Release version 1.01

Known bugs.
1. Use of typeof function will give incorrect values if called on a %array,%name,%arrayname,%namearrayname  variable
2. Use of sizeof function will cause a program crash if called on a %array,%name,%arrayname,%namearrayname  variable

New features
This release allows you to see the iCode generated by pass1 inside the .cod of pass2.
To allow printout of the iCode set the environment variable IMP_ICODE=1
N.B the environment variable name may change in later version.
